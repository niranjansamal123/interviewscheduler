{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{Container,Row,Col,Tab,Tabs,Button,Card,Form,Alert,Badge,Table,InputGroup,FormControl,Spinner,Dropdown,Modal,ProgressBar}from'react-bootstrap';import{Trash,PersonCheck,Search,Download,Eye,FileEarmarkText,ExclamationTriangle,CheckCircle,XCircle,FileEarmarkZip,CloudDownload,CameraVideo// Added for meeting links\n}from'react-bootstrap-icons';import{toast}from'react-toastify';import StudentForm from'./StudentForm';import ExcelUpload from'./ExcelUpload';import SlotCreator from'./SlotCreator';import InterviewList from'./InterviewList';import studentService from'../../services/studentService';import slotService from'../../services/slotService';import interviewService from'../../services/interviewService';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AdminDashboard=()=>{const[students,setStudents]=useState([]);const[filteredStudents,setFilteredStudents]=useState([]);const[slots,setSlots]=useState([]);const[filteredSlots,setFilteredSlots]=useState([]);const[interviews,setInterviews]=useState([]);const[selectedStudents,setSelectedStudents]=useState([]);const[studentSearchTerm,setStudentSearchTerm]=useState('');const[slotSearchTerm,setSlotSearchTerm]=useState('');const[downloadingResumes,setDownloadingResumes]=useState(new Set());const[bulkDownloading,setBulkDownloading]=useState(false);const[zipDownloading,setZipDownloading]=useState(false);const[loadingData,setLoadingData]=useState(true);const[showDeleteModal,setShowDeleteModal]=useState(false);const[studentToDelete,setStudentToDelete]=useState(null);const[downloadProgress,setDownloadProgress]=useState({current:0,total:0});// Load data function, memoized to prevent re-creation\nconst loadData=useCallback(async()=>{try{setLoadingData(true);const[studentsData,slotsData,interviewsData]=await Promise.all([studentService.getStudents(),slotService.getSlots(),interviewService.getInterviews()]);setStudents(studentsData);setSlots(slotsData);setInterviews(interviewsData);setFilteredStudents(studentsData);setFilteredSlots(slotsData);console.log('✅ Data loaded successfully');}catch(error){toast.error('Failed to load data');console.error('Load data error:',error);}finally{setLoadingData(false);}},[]);useEffect(()=>{loadData();},[loadData]);// Filter students based on search term\nuseEffect(()=>{if(!studentSearchTerm.trim()){setFilteredStudents(students);}else{const lowerTerm=studentSearchTerm.toLowerCase();setFilteredStudents(students.filter(s=>s.Name&&s.Name.toLowerCase().includes(lowerTerm)||s.Email&&s.Email.toLowerCase().includes(lowerTerm)||s.Phone&&s.Phone.toLowerCase().includes(lowerTerm)));}},[studentSearchTerm,students]);// Enhanced filter for slots based on search term\nuseEffect(()=>{if(!slotSearchTerm.trim()){setFilteredSlots(slots);}else{const lowerTerm=slotSearchTerm.toLowerCase();setFilteredSlots(slots.filter(slot=>{const dateString=new Date(slot.SlotDateTime).toLocaleString().toLowerCase();const status=slot.IsBooked?'booked':'available';const interviewer=(slot.Interviewer||'').toLowerCase();const studentName=(slot.StudentName||'').toLowerCase();return dateString.includes(lowerTerm)||interviewer.includes(lowerTerm)||studentName.includes(lowerTerm)||status.includes(lowerTerm);}));}},[slotSearchTerm,slots]);// Handler functions keeping minimal re-renders using useCallback\nconst handleStudentAdded=useCallback(result=>{loadData();toast.success(\"Student \\\"\".concat(result.student.name,\"\\\" added successfully\"));},[loadData]);const handleExcelUploaded=useCallback(result=>{loadData();if(result.successful>0){toast.success(\"Excel processed: \".concat(result.successful,\" students imported successfully\"));if(result.failed>0||result.duplicates>0){toast.warning(\"Note: \".concat(result.failed,\" failed, \").concat(result.duplicates||0,\" duplicates skipped\"));}}else{toast.error('No students were imported from Excel file');}},[loadData]);const handleSlotCreated=useCallback(()=>{loadData();toast.success('Interview slot created successfully');},[loadData]);const handleSendInvitations=async()=>{if(selectedStudents.length===0){toast.warning('Please select students to send invitations');return;}try{const result=await studentService.sendInvitations(selectedStudents);if(result.summary.successful>0){toast.success(\"Invitations sent to \".concat(result.summary.successful,\" students\"));if(result.summary.failed>0){toast.warning(\"\".concat(result.summary.failed,\" invitations failed to send\"));}}else{toast.error('No invitations were sent successfully');}setSelectedStudents([]);loadData();// Reload to show updated interview status\n}catch(error){var _error$response,_error$response$data;const errorMessage=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||error.message;toast.error('Failed to send invitations: '+errorMessage);}};const handleSelectAll=checked=>{if(checked){setSelectedStudents(filteredStudents.map(s=>s.Id));}else{setSelectedStudents([]);}};const handleStudentSelect=(id,checked)=>{if(checked){setSelectedStudents(prev=>[...prev,id]);}else{setSelectedStudents(prev=>prev.filter(sid=>sid!==id));}};// ENHANCED: Individual resume download handler with simple filename messaging\nconst handleResumeDownload=async student=>{if(!student.ResumeLink){toast.warning(\"No resume uploaded for \".concat(student.Name));return;}setDownloadingResumes(prev=>new Set(prev).add(student.Id));try{console.log('📥 Downloading resume for:',student.Name);const result=await studentService.downloadResumeWithFeedback(student.Id,student.Name);// Generate expected filename for display\nconst cleanName=student.Name.replace(/[^a-zA-Z0-9\\s]/g,'').replace(/\\s+/g,'_');const expectedFilename=result.filename||\"\".concat(cleanName,\".pdf\");toast.success(/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Resume Downloaded!\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Student: \",student.Name]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"small\",{children:[\"File: \",expectedFilename]})]}));}catch(error){console.error('❌ Resume download failed:',error);const errorMessage=error.message||'Failed to download resume';toast.error(/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Download Failed\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Student: \",student.Name]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Error: \",errorMessage]})]}));}finally{setDownloadingResumes(prev=>{const newSet=new Set(prev);newSet.delete(student.Id);return newSet;});}};// ENHANCED: Individual bulk resume download with simple filename messaging\nconst handleBulkResumeDownload=async()=>{const studentsWithResumes=filteredStudents.filter(s=>selectedStudents.includes(s.Id)&&s.ResumeLink);if(studentsWithResumes.length===0){toast.warning('No students with resumes selected');return;}if(studentsWithResumes.length>15){const confirmed=window.confirm(\"You are about to download \".concat(studentsWithResumes.length,\" individual resume files. This may take a while and could overwhelm your browser. Consider using ZIP download instead. Continue?\"));if(!confirmed)return;}setBulkDownloading(true);setDownloadProgress({current:0,total:studentsWithResumes.length});try{toast.info(/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Bulk Download Started\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Downloading \",studentsWithResumes.length,\" resumes individually...\"]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"small\",{children:\"Files will be named as: StudentName.pdf\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"small\",{children:\"Please wait and don't close this tab\"})]}),{autoClose:6000});// Custom progress tracking for individual downloads\nconst results=[];for(let i=0;i<studentsWithResumes.length;i++){const student=studentsWithResumes[i];setDownloadProgress({current:i+1,total:studentsWithResumes.length});try{const result=await studentService.downloadResumeWithFeedback(student.Id,student.Name);results.push({studentId:student.Id,studentName:student.Name,success:true,filename:result.filename});// Progressive delay (starts small, increases slightly)\nconst delay=Math.min(500+i*100,3000);await new Promise(resolve=>setTimeout(resolve,delay));}catch(error){results.push({studentId:student.Id,studentName:student.Name,success:false,error:error.message});// Shorter delay for failed downloads\nawait new Promise(resolve=>setTimeout(resolve,300));}}const successful=results.filter(r=>r.success).length;const failed=results.filter(r=>!r.success).length;if(successful>0){toast.success(/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Bulk Download Complete!\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"small\",{children:[successful,\" of \",studentsWithResumes.length,\" resumes downloaded\"]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"small\",{children:\"Files are named as: StudentName.pdf\"}),failed>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"small\",{className:\"text-warning\",children:[failed,\" downloads failed\"]})]})]}),{autoClose:8000});}else{toast.error('No resumes were downloaded successfully');}// Show detailed results if there were failures\nif(failed>0){const failedStudents=results.filter(r=>!r.success).map(r=>r.studentName).slice(0,5)// Show only first 5\n.join(', ');toast.warning(/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Some Downloads Failed\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Failed students: \",failedStudents]}),failed>5&&/*#__PURE__*/_jsxs(\"small\",{children:[\" and \",failed-5,\" more...\"]})]}),{autoClose:10000});}}catch(error){toast.error('Bulk download failed: '+error.message);}finally{setBulkDownloading(false);setDownloadProgress({current:0,total:0});}};// ENHANCED: ZIP bulk resume download with simple filename messaging\nconst handleZipResumeDownload=async()=>{const studentsWithResumes=filteredStudents.filter(s=>selectedStudents.includes(s.Id)&&s.ResumeLink);if(studentsWithResumes.length===0){toast.warning('No students with resumes selected');return;}setZipDownloading(true);try{toast.info(/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Creating ZIP Archive\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Preparing \",studentsWithResumes.length,\" resumes...\"]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"small\",{children:\"Files inside will be named as: StudentName.pdf\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"small\",{children:\"This may take a moment\"})]}),{autoClose:6000});const result=await studentService.downloadBulkResumesAsZip(studentsWithResumes);toast.success(/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"ZIP Download Complete!\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"small\",{children:[\"File: \",result.filename]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Size: \",studentService.formatFileSize(result.size)]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"small\",{children:[result.studentsCount,\" resumes included (named as StudentName.pdf)\"]})]}),{autoClose:8000});}catch(error){toast.error('ZIP download failed: '+error.message);}finally{setZipDownloading(false);}};// Enhanced delete handler\nconst handleDeleteStudent=student=>{setStudentToDelete(student);setShowDeleteModal(true);};const confirmDeleteStudent=async()=>{if(!studentToDelete)return;try{await studentService.deleteStudent(studentToDelete.Id);toast.success(\"Student \\\"\".concat(studentToDelete.Name,\"\\\" deleted successfully\"));loadData();}catch(error){var _error$response2,_error$response2$data;const backendError=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||error.message;toast.error(\"Failed to delete student: \".concat(backendError));}finally{setShowDeleteModal(false);setStudentToDelete(null);}};// Get resume status badge\nconst getResumeStatusBadge=student=>{if(student.ResumeLink){return/*#__PURE__*/_jsxs(Badge,{bg:\"success\",className:\"d-flex align-items-center gap-1\",children:[/*#__PURE__*/_jsx(CheckCircle,{size:12}),\"Uploaded\"]});}else{return/*#__PURE__*/_jsxs(Badge,{bg:\"secondary\",className:\"d-flex align-items-center gap-1\",children:[/*#__PURE__*/_jsx(XCircle,{size:12}),\"Not Uploaded\"]});}};// Get student interview status\nconst getInterviewStatus=studentId=>{const interview=interviews.find(i=>i.StudentId===studentId);if(!interview){return/*#__PURE__*/_jsx(Badge,{bg:\"light\",text:\"dark\",children:\"Not Invited\"});}const statusColors={'Invited':'primary','Scheduled':'success','Completed':'info','Cancelled':'danger'};return/*#__PURE__*/_jsx(Badge,{bg:statusColors[interview.Status]||'secondary',children:interview.Status});};// Get download options for selected students\nconst getDownloadOptions=()=>{const options=studentService.getDownloadOptions(selectedStudents,students);return options;};return/*#__PURE__*/_jsxs(Container,{fluid:true,className:\"py-4\",children:[/*#__PURE__*/_jsx(Row,{className:\"mb-4\",children:/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-primary fw-bold\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-speedometer2 me-2\"}),\"Admin Dashboard\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-0\",children:\"Manage students, slots, and interviews\"})]})}),loadingData&&/*#__PURE__*/_jsxs(Alert,{variant:\"info\",className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\",size:\"sm\",className:\"me-2\"}),\"Loading dashboard data...\"]}),(bulkDownloading||zipDownloading)&&/*#__PURE__*/_jsxs(Alert,{variant:\"info\",className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center justify-content-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:zipDownloading?'Creating ZIP Archive...':'Downloading Resumes...'}),bulkDownloading&&/*#__PURE__*/_jsxs(\"small\",{className:\"d-block text-muted\",children:[\"Progress: \",downloadProgress.current,\" of \",downloadProgress.total]}),/*#__PURE__*/_jsx(\"small\",{className:\"d-block text-muted\",children:\"Files will be named as: StudentName.pdf\"})]}),/*#__PURE__*/_jsx(Spinner,{animation:\"border\",size:\"sm\"})]}),bulkDownloading&&downloadProgress.total>0&&/*#__PURE__*/_jsx(ProgressBar,{now:downloadProgress.current/downloadProgress.total*100,className:\"mt-2\",style:{height:'8px'}})]}),/*#__PURE__*/_jsxs(Tabs,{defaultActiveKey:\"students\",className:\"mb-4 shadow-sm rounded\",fill:true,justify:true,id:\"admin-dashboard-tabs\",children:[/*#__PURE__*/_jsxs(Tab,{eventKey:\"students\",title:\"Student Management\",tabClassName:\"fs-6 fw-semibold p-2\",children:[/*#__PURE__*/_jsxs(Row,{className:\"g-4\",children:[/*#__PURE__*/_jsx(Col,{xs:12,md:6,children:/*#__PURE__*/_jsx(StudentForm,{onStudentAdded:handleStudentAdded})}),/*#__PURE__*/_jsx(Col,{xs:12,md:6,children:/*#__PURE__*/_jsx(ExcelUpload,{onExcelUploaded:handleExcelUploaded})})]}),/*#__PURE__*/_jsxs(Row,{className:\"mt-4 mb-3\",children:[/*#__PURE__*/_jsx(Col,{xs:12,md:6,children:/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(InputGroup.Text,{id:\"search-icon\",children:/*#__PURE__*/_jsx(Search,{})}),/*#__PURE__*/_jsx(FormControl,{type:\"search\",placeholder:\"Search students by name, email, or phone\",\"aria-label\":\"Search students\",\"aria-describedby\":\"search-icon\",value:studentSearchTerm,onChange:e=>setStudentSearchTerm(e.target.value)})]})}),/*#__PURE__*/_jsx(Col,{xs:12,md:6,className:\"d-flex gap-2 justify-content-md-end flex-wrap\",children:selectedStudents.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Button,{variant:\"success\",onClick:handleSendInvitations,className:\"fw-bold\",children:[/*#__PURE__*/_jsx(PersonCheck,{className:\"me-1\"}),\"Send Invitations (\",selectedStudents.length,\")\"]}),getDownloadOptions().canDownload&&/*#__PURE__*/_jsxs(Dropdown,{children:[/*#__PURE__*/_jsxs(Dropdown.Toggle,{variant:\"outline-primary\",disabled:bulkDownloading||zipDownloading,children:[/*#__PURE__*/_jsx(Download,{className:\"me-1\"}),\"Download Resumes (\",getDownloadOptions().withResumes,\")\"]}),/*#__PURE__*/_jsxs(Dropdown.Menu,{children:[/*#__PURE__*/_jsx(Dropdown.Header,{children:/*#__PURE__*/_jsxs(\"small\",{children:[getDownloadOptions().withResumes,\" students with resumes selected\"]})}),/*#__PURE__*/_jsx(Dropdown.Divider,{}),/*#__PURE__*/_jsxs(Dropdown.Item,{onClick:handleZipResumeDownload,disabled:zipDownloading,className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(FileEarmarkZip,{className:\"me-2 text-primary\",size:16}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"fw-bold\",children:\"Download as ZIP\"}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Single archive with StudentName.pdf files (Recommended)\"})]})]}),/*#__PURE__*/_jsxs(Dropdown.Item,{onClick:handleBulkResumeDownload,disabled:bulkDownloading,className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(CloudDownload,{className:\"me-2 text-success\",size:16}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"fw-bold\",children:\"Download Individual Files\"}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Separate StudentName.pdf files (Better for few files)\"})]})]}),getDownloadOptions().withoutResumes>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Dropdown.Divider,{}),/*#__PURE__*/_jsx(Dropdown.ItemText,{children:/*#__PURE__*/_jsxs(\"small\",{className:\"text-warning\",children:[/*#__PURE__*/_jsx(XCircle,{size:14,className:\"me-1\"}),getDownloadOptions().withoutResumes,\" selected students have no resume\"]})})]})]})]})]})})]}),/*#__PURE__*/_jsx(Row,{className:\"mb-3\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex gap-3 flex-wrap\",children:[/*#__PURE__*/_jsxs(Badge,{bg:\"info\",className:\"fs-6 px-3 py-2\",children:[\"Total: \",students.length]}),/*#__PURE__*/_jsxs(Badge,{bg:\"success\",className:\"fs-6 px-3 py-2\",children:[\"With Resume: \",students.filter(s=>s.ResumeLink).length]}),/*#__PURE__*/_jsxs(Badge,{bg:\"warning\",className:\"fs-6 px-3 py-2\",children:[\"No Resume: \",students.filter(s=>!s.ResumeLink).length]}),/*#__PURE__*/_jsxs(Badge,{bg:\"primary\",className:\"fs-6 px-3 py-2\",children:[\"Selected: \",selectedStudents.length]}),selectedStudents.length>0&&/*#__PURE__*/_jsxs(Badge,{bg:\"secondary\",className:\"fs-6 px-3 py-2\",children:[\"Selected with Resume: \",getDownloadOptions().withResumes]})]})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{xs:12,children:/*#__PURE__*/_jsxs(Card,{className:\"shadow-sm rounded\",children:[/*#__PURE__*/_jsx(Card.Header,{className:\"bg-primary d-flex justify-content-between align-items-center text-white fw-semibold\",children:/*#__PURE__*/_jsxs(\"h5\",{className:\"mb-0\",children:[/*#__PURE__*/_jsx(FileEarmarkText,{className:\"me-2\"}),\"Students List (\",filteredStudents.length,\")\"]})}),/*#__PURE__*/_jsx(Card.Body,{className:\"p-0\",children:/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",style:{overflowX:'auto',maxHeight:'70vh',overflowY:'auto'},children:/*#__PURE__*/_jsxs(Table,{striped:true,hover:true,className:\"mb-0 align-middle\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"table-primary\",style:{position:'sticky',top:0,zIndex:1},children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{style:{width:'3rem'},children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",id:\"selectAllStudents\",onChange:e=>handleSelectAll(e.target.checked),checked:filteredStudents.length>0&&selectedStudents.length===filteredStudents.length,\"aria-label\":\"Select all students\"})}),/*#__PURE__*/_jsx(\"th\",{className:\"text-break\",children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{className:\"text-break\",children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{className:\"text-break\",children:\"Phone\"}),/*#__PURE__*/_jsx(\"th\",{className:\"text-break\",children:\"Resume\"}),/*#__PURE__*/_jsx(\"th\",{className:\"text-break\",children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{style:{width:'120px'},children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredStudents.length===0?/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:7,className:\"text-center py-5 text-muted\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Search,{size:48,className:\"text-muted mb-3\"}),/*#__PURE__*/_jsx(\"h5\",{children:\"No students found\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Try adjusting your search or add new students\"})]})})}):filteredStudents.map(student=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",id:\"student-\".concat(student.Id),checked:selectedStudents.includes(student.Id),onChange:e=>handleStudentSelect(student.Id,e.target.checked),\"aria-label\":\"Select student \".concat(student.Name)})}),/*#__PURE__*/_jsx(\"td\",{className:\"fw-semibold\",children:student.Name}),/*#__PURE__*/_jsx(\"td\",{children:student.Email}),/*#__PURE__*/_jsx(\"td\",{children:student.Phone||'-'}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center gap-2\",children:[getResumeStatusBadge(student),student.ResumeLink&&/*#__PURE__*/_jsx(Button,{variant:\"outline-success\",size:\"sm\",onClick:()=>handleResumeDownload(student),disabled:downloadingResumes.has(student.Id),title:\"Download \".concat(student.Name.replace(/[^a-zA-Z0-9\\s]/g,'').replace(/\\s+/g,'_'),\".pdf\"),children:downloadingResumes.has(student.Id)?/*#__PURE__*/_jsx(Spinner,{as:\"span\",animation:\"border\",size:\"sm\",role:\"status\",\"aria-hidden\":\"true\"}):/*#__PURE__*/_jsx(Download,{size:14})})]})}),/*#__PURE__*/_jsx(\"td\",{children:getInterviewStatus(student.Id)}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Button,{variant:\"outline-danger\",size:\"sm\",onClick:()=>handleDeleteStudent(student),\"aria-label\":\"Delete student \".concat(student.Name),children:/*#__PURE__*/_jsx(Trash,{size:14})})})]},student.Id))})]})})})]})})})]}),/*#__PURE__*/_jsx(Tab,{eventKey:\"slots\",title:\"Interview Slots\",tabClassName:\"fs-6 fw-semibold p-2\",children:/*#__PURE__*/_jsxs(Row,{className:\"g-4\",children:[/*#__PURE__*/_jsx(Col,{xs:12,md:4,children:/*#__PURE__*/_jsx(SlotCreator,{onSlotCreated:handleSlotCreated})}),/*#__PURE__*/_jsx(Col,{xs:12,md:8,children:/*#__PURE__*/_jsxs(Card,{className:\"shadow-sm rounded\",children:[/*#__PURE__*/_jsxs(Card.Header,{className:\"d-flex justify-content-between align-items-center bg-success text-white fw-semibold\",children:[/*#__PURE__*/_jsxs(\"h5\",{className:\"mb-0\",children:[\"All Slots (\",filteredSlots.length,\")\"]}),/*#__PURE__*/_jsxs(InputGroup,{style:{maxWidth:'300px'},className:\"ms-auto\",children:[/*#__PURE__*/_jsx(InputGroup.Text,{children:/*#__PURE__*/_jsx(Search,{})}),/*#__PURE__*/_jsx(FormControl,{placeholder:\"Search slots by date, interviewer, or student\",\"aria-label\":\"Search slots\",value:slotSearchTerm,onChange:e=>setSlotSearchTerm(e.target.value)})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-3 bg-light border-bottom\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex gap-3 flex-wrap\",children:[/*#__PURE__*/_jsxs(Badge,{bg:\"info\",className:\"fs-6 px-3 py-2\",children:[\"Total: \",slots.length]}),/*#__PURE__*/_jsxs(Badge,{bg:\"success\",className:\"fs-6 px-3 py-2\",children:[\"Available: \",slots.filter(s=>!s.IsBooked).length]}),/*#__PURE__*/_jsxs(Badge,{bg:\"danger\",className:\"fs-6 px-3 py-2\",children:[\"Booked: \",slots.filter(s=>s.IsBooked).length]}),/*#__PURE__*/_jsxs(Badge,{bg:\"warning\",className:\"fs-6 px-3 py-2\",children:[\"Today: \",slots.filter(s=>new Date(s.SlotDateTime).toDateString()===new Date().toDateString()).length]})]})}),/*#__PURE__*/_jsx(Card.Body,{className:\"p-0\",children:/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",style:{maxHeight:'70vh',overflowY:'auto',overflowX:'auto'},children:/*#__PURE__*/_jsxs(Table,{striped:true,hover:true,className:\"mb-0 align-middle\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"table-success bg-success text-white\",style:{position:'sticky',top:0,zIndex:1},children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Date & Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Interviewer\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Booked By\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Meeting Link\"}),/*#__PURE__*/_jsx(\"th\",{style:{width:'160px'},children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredSlots.length===0?/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:6,className:\"text-center py-5 text-muted\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Search,{size:48,className:\"text-muted mb-3\"}),/*#__PURE__*/_jsx(\"h6\",{children:\"No slots found\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Try adjusting your search or create new slots\"})]})})}):filteredSlots.map(slot=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{className:\"fw-semibold\",children:[/*#__PURE__*/_jsx(\"div\",{children:new Date(slot.SlotDateTime).toLocaleDateString()}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:new Date(slot.SlotDateTime).toLocaleTimeString('en-US',{hour:'numeric',minute:'2-digit',hour12:true})})]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"fw-medium\",children:slot.Interviewer||'Not assigned'})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Badge,{bg:slot.IsBooked?'danger':'success',className:\"py-2 px-3\",children:slot.IsBooked?'Booked':'Available'})}),/*#__PURE__*/_jsx(\"td\",{children:slot.IsBooked&&slot.StudentName?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"fw-medium\",children:slot.StudentName}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:slot.StudentEmail})]}):/*#__PURE__*/_jsx(\"span\",{className:\"text-muted\",children:\"-\"})}),/*#__PURE__*/_jsx(\"td\",{children:slot.MeetingLink?/*#__PURE__*/_jsxs(Button,{as:\"a\",href:slot.MeetingLink,target:\"_blank\",rel:\"noopener noreferrer\",size:\"sm\",variant:\"outline-primary\",className:\"d-flex align-items-center gap-1\",children:[/*#__PURE__*/_jsx(CameraVideo,{size:14}),/*#__PURE__*/_jsx(\"span\",{className:\"small\",children:\"Join\"})]}):/*#__PURE__*/_jsx(Badge,{bg:\"light\",text:\"dark\",className:\"small\",children:\"No Link\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex gap-1 flex-wrap\",children:[slot.IsBooked&&/*#__PURE__*/_jsx(Button,{variant:\"outline-warning\",size:\"sm\",onClick:async()=>{const confirmed=window.confirm(\"Cancel booking for \".concat(slot.StudentName,\"?\\n\\n\")+\"Slot: \".concat(new Date(slot.SlotDateTime).toLocaleString(),\"\\n\")+\"Student: \".concat(slot.StudentName,\" (\").concat(slot.StudentEmail,\")\\n\\n\")+\"This will free up the slot and cancel the student's interview.\");if(confirmed){try{await slotService.cancelBooking(slot.Id,'Cancelled by admin');toast.success(/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Booking Cancelled\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Student: \",slot.StudentName]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"small\",{children:\"Slot is now available\"})]}));loadData();}catch(error){var _error$response3,_error$response3$data;const errorMessage=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||error.message;toast.error('Failed to cancel booking: '+errorMessage);}}},title:\"Cancel booking for \".concat(slot.StudentName),children:/*#__PURE__*/_jsx(XCircle,{size:14})}),slot.IsBooked&&slot.StudentEmail&&/*#__PURE__*/_jsx(Button,{variant:\"outline-info\",size:\"sm\",onClick:()=>{// You can implement a modal to show student details\ntoast.info(/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:slot.StudentName}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Email: \",slot.StudentEmail]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Slot: \",new Date(slot.SlotDateTime).toLocaleString()]})]}),{autoClose:5000});},title:\"View details for \".concat(slot.StudentName),children:/*#__PURE__*/_jsx(Eye,{size:14})}),!slot.IsBooked&&/*#__PURE__*/_jsx(Button,{variant:\"outline-danger\",size:\"sm\",onClick:async()=>{if(window.confirm(\"Delete this slot?\\n\\n\"+\"Date: \".concat(new Date(slot.SlotDateTime).toLocaleString(),\"\\n\")+\"Interviewer: \".concat(slot.Interviewer,\"\\n\\n\")+\"This action cannot be undone.\")){try{await slotService.deleteSlot(slot.Id);toast.success('Slot deleted successfully');loadData();}catch(error){var _error$response4,_error$response4$data;const errorMessage=((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||error.message;toast.error('Failed to delete slot: '+errorMessage);}}},title:\"Delete this slot\",children:/*#__PURE__*/_jsx(Trash,{size:14})})]})})]},slot.Id))})]})})})]})})]})}),/*#__PURE__*/_jsx(Tab,{eventKey:\"interviews\",title:\"Scheduled Interviews\",tabClassName:\"fs-6 fw-semibold p-2\",children:/*#__PURE__*/_jsx(InterviewList,{interviews:interviews,onInterviewUpdated:loadData})})]}),/*#__PURE__*/_jsxs(Modal,{show:showDeleteModal,onHide:()=>setShowDeleteModal(false),centered:true,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsxs(Modal.Title,{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(ExclamationTriangle,{className:\"text-danger me-2\"}),\"Confirm Delete\"]})}),/*#__PURE__*/_jsxs(Modal.Body,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Are you sure you want to delete student \",/*#__PURE__*/_jsxs(\"strong\",{children:[\"\\\"\",studentToDelete===null||studentToDelete===void 0?void 0:studentToDelete.Name,\"\\\"\"]}),\"?\"]}),/*#__PURE__*/_jsx(Alert,{variant:\"warning\",className:\"mb-0\",children:/*#__PURE__*/_jsx(\"small\",{children:\"This action cannot be undone. The student's data and any uploaded resume will be permanently deleted.\"})})]}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:()=>setShowDeleteModal(false),children:\"Cancel\"}),/*#__PURE__*/_jsxs(Button,{variant:\"danger\",onClick:confirmDeleteStudent,children:[/*#__PURE__*/_jsx(Trash,{className:\"me-1\"}),\"Delete Student\"]})]})]})]});};export default AdminDashboard;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Container","Row","Col","Tab","Tabs","Button","Card","Form","Alert","Badge","Table","InputGroup","FormControl","Spinner","Dropdown","Modal","ProgressBar","Trash","PersonCheck","Search","Download","Eye","FileEarmarkText","ExclamationTriangle","CheckCircle","XCircle","FileEarmarkZip","CloudDownload","CameraVideo","toast","StudentForm","ExcelUpload","SlotCreator","InterviewList","studentService","slotService","interviewService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AdminDashboard","students","setStudents","filteredStudents","setFilteredStudents","slots","setSlots","filteredSlots","setFilteredSlots","interviews","setInterviews","selectedStudents","setSelectedStudents","studentSearchTerm","setStudentSearchTerm","slotSearchTerm","setSlotSearchTerm","downloadingResumes","setDownloadingResumes","Set","bulkDownloading","setBulkDownloading","zipDownloading","setZipDownloading","loadingData","setLoadingData","showDeleteModal","setShowDeleteModal","studentToDelete","setStudentToDelete","downloadProgress","setDownloadProgress","current","total","loadData","studentsData","slotsData","interviewsData","Promise","all","getStudents","getSlots","getInterviews","console","log","error","trim","lowerTerm","toLowerCase","filter","s","Name","includes","Email","Phone","slot","dateString","Date","SlotDateTime","toLocaleString","status","IsBooked","interviewer","Interviewer","studentName","StudentName","handleStudentAdded","result","success","concat","student","name","handleExcelUploaded","successful","failed","duplicates","warning","handleSlotCreated","handleSendInvitations","length","sendInvitations","summary","_error$response","_error$response$data","errorMessage","response","data","message","handleSelectAll","checked","map","Id","handleStudentSelect","id","prev","sid","handleResumeDownload","ResumeLink","add","downloadResumeWithFeedback","cleanName","replace","expectedFilename","filename","children","newSet","delete","handleBulkResumeDownload","studentsWithResumes","confirmed","window","confirm","info","autoClose","results","i","push","studentId","delay","Math","min","resolve","setTimeout","r","className","failedStudents","slice","join","handleZipResumeDownload","downloadBulkResumesAsZip","formatFileSize","size","studentsCount","handleDeleteStudent","confirmDeleteStudent","deleteStudent","_error$response2","_error$response2$data","backendError","getResumeStatusBadge","bg","getInterviewStatus","interview","find","StudentId","text","statusColors","Status","getDownloadOptions","options","fluid","variant","animation","now","style","height","defaultActiveKey","fill","justify","eventKey","title","tabClassName","xs","md","onStudentAdded","onExcelUploaded","Text","type","placeholder","value","onChange","e","target","onClick","canDownload","Toggle","disabled","withResumes","Menu","Header","Divider","Item","withoutResumes","ItemText","Body","overflowX","maxHeight","overflowY","striped","hover","position","top","zIndex","width","Check","colSpan","has","as","role","onSlotCreated","maxWidth","toDateString","toLocaleDateString","toLocaleTimeString","hour","minute","hour12","StudentEmail","MeetingLink","href","rel","cancelBooking","_error$response3","_error$response3$data","deleteSlot","_error$response4","_error$response4$data","onInterviewUpdated","show","onHide","centered","closeButton","Title","Footer"],"sources":["E:/Downloads/interview-scheduler/interview-scheduler-frontend/src/components/admin/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Tab,\r\n  Tabs,\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Alert,\r\n  Badge,\r\n  Table,\r\n  InputGroup,\r\n  FormControl,\r\n  Spinner,\r\n  Dropdown,\r\n  Modal,\r\n  ProgressBar,\r\n} from 'react-bootstrap';\r\nimport { \r\n  Trash, \r\n  PersonCheck, \r\n  Search, \r\n  Download, \r\n  Eye, \r\n  FileEarmarkText, \r\n  ExclamationTriangle,\r\n  CheckCircle,\r\n  XCircle,\r\n  FileEarmarkZip,\r\n  CloudDownload,\r\n  CameraVideo // Added for meeting links\r\n} from 'react-bootstrap-icons';\r\nimport { toast } from 'react-toastify';\r\nimport StudentForm from './StudentForm';\r\nimport ExcelUpload from './ExcelUpload';\r\nimport SlotCreator from './SlotCreator';\r\nimport InterviewList from './InterviewList';\r\nimport studentService from '../../services/studentService';\r\nimport slotService from '../../services/slotService';\r\nimport interviewService from '../../services/interviewService';\r\n\r\nconst AdminDashboard = () => {\r\n  const [students, setStudents] = useState([]);\r\n  const [filteredStudents, setFilteredStudents] = useState([]);\r\n  const [slots, setSlots] = useState([]);\r\n  const [filteredSlots, setFilteredSlots] = useState([]);\r\n  const [interviews, setInterviews] = useState([]);\r\n  const [selectedStudents, setSelectedStudents] = useState([]);\r\n  const [studentSearchTerm, setStudentSearchTerm] = useState('');\r\n  const [slotSearchTerm, setSlotSearchTerm] = useState('');\r\n  const [downloadingResumes, setDownloadingResumes] = useState(new Set());\r\n  const [bulkDownloading, setBulkDownloading] = useState(false);\r\n  const [zipDownloading, setZipDownloading] = useState(false);\r\n  const [loadingData, setLoadingData] = useState(true);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [studentToDelete, setStudentToDelete] = useState(null);\r\n  const [downloadProgress, setDownloadProgress] = useState({ current: 0, total: 0 });\r\n\r\n  // Load data function, memoized to prevent re-creation\r\n  const loadData = useCallback(async () => {\r\n    try {\r\n      setLoadingData(true);\r\n      const [studentsData, slotsData, interviewsData] = await Promise.all([\r\n        studentService.getStudents(),\r\n        slotService.getSlots(),\r\n        interviewService.getInterviews(),\r\n      ]);\r\n      setStudents(studentsData);\r\n      setSlots(slotsData);\r\n      setInterviews(interviewsData);\r\n      setFilteredStudents(studentsData);\r\n      setFilteredSlots(slotsData);\r\n      console.log('✅ Data loaded successfully');\r\n    } catch (error) {\r\n      toast.error('Failed to load data');\r\n      console.error('Load data error:', error);\r\n    } finally {\r\n      setLoadingData(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [loadData]);\r\n\r\n  // Filter students based on search term\r\n  useEffect(() => {\r\n    if (!studentSearchTerm.trim()) {\r\n      setFilteredStudents(students);\r\n    } else {\r\n      const lowerTerm = studentSearchTerm.toLowerCase();\r\n      setFilteredStudents(\r\n        students.filter(\r\n          (s) =>\r\n            (s.Name && s.Name.toLowerCase().includes(lowerTerm)) ||\r\n            (s.Email && s.Email.toLowerCase().includes(lowerTerm)) ||\r\n            (s.Phone && s.Phone.toLowerCase().includes(lowerTerm))\r\n        )\r\n      );\r\n    }\r\n  }, [studentSearchTerm, students]);\r\n\r\n  // Enhanced filter for slots based on search term\r\n  useEffect(() => {\r\n    if (!slotSearchTerm.trim()) {\r\n      setFilteredSlots(slots);\r\n    } else {\r\n      const lowerTerm = slotSearchTerm.toLowerCase();\r\n      setFilteredSlots(\r\n        slots.filter((slot) => {\r\n          const dateString = new Date(slot.SlotDateTime).toLocaleString().toLowerCase();\r\n          const status = slot.IsBooked ? 'booked' : 'available';\r\n          const interviewer = (slot.Interviewer || '').toLowerCase();\r\n          const studentName = (slot.StudentName || '').toLowerCase();\r\n          \r\n          return (\r\n            dateString.includes(lowerTerm) ||\r\n            interviewer.includes(lowerTerm) ||\r\n            studentName.includes(lowerTerm) ||\r\n            status.includes(lowerTerm)\r\n          );\r\n        })\r\n      );\r\n    }\r\n  }, [slotSearchTerm, slots]);\r\n\r\n  // Handler functions keeping minimal re-renders using useCallback\r\n  const handleStudentAdded = useCallback((result) => {\r\n    loadData();\r\n    toast.success(`Student \"${result.student.name}\" added successfully`);\r\n  }, [loadData]);\r\n\r\n  const handleExcelUploaded = useCallback((result) => {\r\n    loadData();\r\n    if (result.successful > 0) {\r\n      toast.success(`Excel processed: ${result.successful} students imported successfully`);\r\n      if (result.failed > 0 || result.duplicates > 0) {\r\n        toast.warning(`Note: ${result.failed} failed, ${result.duplicates || 0} duplicates skipped`);\r\n      }\r\n    } else {\r\n      toast.error('No students were imported from Excel file');\r\n    }\r\n  }, [loadData]);\r\n\r\n  const handleSlotCreated = useCallback(() => {\r\n    loadData();\r\n    toast.success('Interview slot created successfully');\r\n  }, [loadData]);\r\n\r\n  const handleSendInvitations = async () => {\r\n    if (selectedStudents.length === 0) {\r\n      toast.warning('Please select students to send invitations');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = await studentService.sendInvitations(selectedStudents);\r\n      if (result.summary.successful > 0) {\r\n        toast.success(`Invitations sent to ${result.summary.successful} students`);\r\n        if (result.summary.failed > 0) {\r\n          toast.warning(`${result.summary.failed} invitations failed to send`);\r\n        }\r\n      } else {\r\n        toast.error('No invitations were sent successfully');\r\n      }\r\n      setSelectedStudents([]);\r\n      loadData(); // Reload to show updated interview status\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.error || error.message;\r\n      toast.error('Failed to send invitations: ' + errorMessage);\r\n    }\r\n  };\r\n\r\n  const handleSelectAll = (checked) => {\r\n    if (checked) {\r\n      setSelectedStudents(filteredStudents.map((s) => s.Id));\r\n    } else {\r\n      setSelectedStudents([]);\r\n    }\r\n  };\r\n\r\n  const handleStudentSelect = (id, checked) => {\r\n    if (checked) {\r\n      setSelectedStudents((prev) => [...prev, id]);\r\n    } else {\r\n      setSelectedStudents((prev) => prev.filter((sid) => sid !== id));\r\n    }\r\n  };\r\n\r\n  // ENHANCED: Individual resume download handler with simple filename messaging\r\n  const handleResumeDownload = async (student) => {\r\n    if (!student.ResumeLink) {\r\n      toast.warning(`No resume uploaded for ${student.Name}`);\r\n      return;\r\n    }\r\n\r\n    setDownloadingResumes(prev => new Set(prev).add(student.Id));\r\n    \r\n    try {\r\n      console.log('📥 Downloading resume for:', student.Name);\r\n      const result = await studentService.downloadResumeWithFeedback(student.Id, student.Name);\r\n      \r\n      // Generate expected filename for display\r\n      const cleanName = student.Name.replace(/[^a-zA-Z0-9\\s]/g, '').replace(/\\s+/g, '_');\r\n      const expectedFilename = result.filename || `${cleanName}.pdf`;\r\n      \r\n      toast.success(\r\n        <div>\r\n          <strong>Resume Downloaded!</strong>\r\n          <br />\r\n          <small>Student: {student.Name}</small>\r\n          <br />\r\n          <small>File: {expectedFilename}</small>\r\n        </div>\r\n      );\r\n    } catch (error) {\r\n      console.error('❌ Resume download failed:', error);\r\n      const errorMessage = error.message || 'Failed to download resume';\r\n      toast.error(\r\n        <div>\r\n          <strong>Download Failed</strong>\r\n          <br />\r\n          <small>Student: {student.Name}</small>\r\n          <br />\r\n          <small>Error: {errorMessage}</small>\r\n        </div>\r\n      );\r\n    } finally {\r\n      setDownloadingResumes(prev => {\r\n        const newSet = new Set(prev);\r\n        newSet.delete(student.Id);\r\n        return newSet;\r\n      });\r\n    }\r\n  };\r\n\r\n  // ENHANCED: Individual bulk resume download with simple filename messaging\r\n  const handleBulkResumeDownload = async () => {\r\n    const studentsWithResumes = filteredStudents.filter(s => \r\n      selectedStudents.includes(s.Id) && s.ResumeLink\r\n    );\r\n\r\n    if (studentsWithResumes.length === 0) {\r\n      toast.warning('No students with resumes selected');\r\n      return;\r\n    }\r\n\r\n    if (studentsWithResumes.length > 15) {\r\n      const confirmed = window.confirm(\r\n        `You are about to download ${studentsWithResumes.length} individual resume files. This may take a while and could overwhelm your browser. Consider using ZIP download instead. Continue?`\r\n      );\r\n      if (!confirmed) return;\r\n    }\r\n\r\n    setBulkDownloading(true);\r\n    setDownloadProgress({ current: 0, total: studentsWithResumes.length });\r\n\r\n    try {\r\n      toast.info(\r\n        <div>\r\n          <strong>Bulk Download Started</strong>\r\n          <br />\r\n          <small>Downloading {studentsWithResumes.length} resumes individually...</small>\r\n          <br />\r\n          <small>Files will be named as: StudentName.pdf</small>\r\n          <br />\r\n          <small>Please wait and don't close this tab</small>\r\n        </div>, \r\n        { autoClose: 6000 }\r\n      );\r\n\r\n      // Custom progress tracking for individual downloads\r\n      const results = [];\r\n      for (let i = 0; i < studentsWithResumes.length; i++) {\r\n        const student = studentsWithResumes[i];\r\n        setDownloadProgress({ current: i + 1, total: studentsWithResumes.length });\r\n        \r\n        try {\r\n          const result = await studentService.downloadResumeWithFeedback(student.Id, student.Name);\r\n          results.push({\r\n            studentId: student.Id,\r\n            studentName: student.Name,\r\n            success: true,\r\n            filename: result.filename\r\n          });\r\n          \r\n          // Progressive delay (starts small, increases slightly)\r\n          const delay = Math.min(500 + (i * 100), 3000);\r\n          await new Promise(resolve => setTimeout(resolve, delay));\r\n        } catch (error) {\r\n          results.push({\r\n            studentId: student.Id,\r\n            studentName: student.Name,\r\n            success: false,\r\n            error: error.message\r\n          });\r\n          \r\n          // Shorter delay for failed downloads\r\n          await new Promise(resolve => setTimeout(resolve, 300));\r\n        }\r\n      }\r\n      \r\n      const successful = results.filter(r => r.success).length;\r\n      const failed = results.filter(r => !r.success).length;\r\n      \r\n      if (successful > 0) {\r\n        toast.success(\r\n          <div>\r\n            <strong>Bulk Download Complete!</strong>\r\n            <br />\r\n            <small>{successful} of {studentsWithResumes.length} resumes downloaded</small>\r\n            <br />\r\n            <small>Files are named as: StudentName.pdf</small>\r\n            {failed > 0 && (\r\n              <>\r\n                <br />\r\n                <small className=\"text-warning\">{failed} downloads failed</small>\r\n              </>\r\n            )}\r\n          </div>,\r\n          { autoClose: 8000 }\r\n        );\r\n      } else {\r\n        toast.error('No resumes were downloaded successfully');\r\n      }\r\n\r\n      // Show detailed results if there were failures\r\n      if (failed > 0) {\r\n        const failedStudents = results\r\n          .filter(r => !r.success)\r\n          .map(r => r.studentName)\r\n          .slice(0, 5) // Show only first 5\r\n          .join(', ');\r\n        \r\n        toast.warning(\r\n          <div>\r\n            <strong>Some Downloads Failed</strong>\r\n            <br />\r\n            <small>Failed students: {failedStudents}</small>\r\n            {failed > 5 && <small> and {failed - 5} more...</small>}\r\n          </div>,\r\n          { autoClose: 10000 }\r\n        );\r\n      }\r\n      \r\n    } catch (error) {\r\n      toast.error('Bulk download failed: ' + error.message);\r\n    } finally {\r\n      setBulkDownloading(false);\r\n      setDownloadProgress({ current: 0, total: 0 });\r\n    }\r\n  };\r\n\r\n  // ENHANCED: ZIP bulk resume download with simple filename messaging\r\n  const handleZipResumeDownload = async () => {\r\n    const studentsWithResumes = filteredStudents.filter(s => \r\n      selectedStudents.includes(s.Id) && s.ResumeLink\r\n    );\r\n\r\n    if (studentsWithResumes.length === 0) {\r\n      toast.warning('No students with resumes selected');\r\n      return;\r\n    }\r\n\r\n    setZipDownloading(true);\r\n\r\n    try {\r\n      toast.info(\r\n        <div>\r\n          <strong>Creating ZIP Archive</strong>\r\n          <br />\r\n          <small>Preparing {studentsWithResumes.length} resumes...</small>\r\n          <br />\r\n          <small>Files inside will be named as: StudentName.pdf</small>\r\n          <br />\r\n          <small>This may take a moment</small>\r\n        </div>, \r\n        { autoClose: 6000 }\r\n      );\r\n      \r\n      const result = await studentService.downloadBulkResumesAsZip(studentsWithResumes);\r\n      \r\n      toast.success(\r\n        <div>\r\n          <strong>ZIP Download Complete!</strong>\r\n          <br />\r\n          <small>File: {result.filename}</small>\r\n          <br />\r\n          <small>Size: {studentService.formatFileSize(result.size)}</small>\r\n          <br />\r\n          <small>{result.studentsCount} resumes included (named as StudentName.pdf)</small>\r\n        </div>,\r\n        { autoClose: 8000 }\r\n      );\r\n      \r\n    } catch (error) {\r\n      toast.error('ZIP download failed: ' + error.message);\r\n    } finally {\r\n      setZipDownloading(false);\r\n    }\r\n  };\r\n\r\n  // Enhanced delete handler\r\n  const handleDeleteStudent = (student) => {\r\n    setStudentToDelete(student);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  const confirmDeleteStudent = async () => {\r\n    if (!studentToDelete) return;\r\n\r\n    try {\r\n      await studentService.deleteStudent(studentToDelete.Id);\r\n      toast.success(`Student \"${studentToDelete.Name}\" deleted successfully`);\r\n      loadData();\r\n    } catch (error) {\r\n      const backendError = error.response?.data?.error || error.message;\r\n      toast.error(`Failed to delete student: ${backendError}`);\r\n    } finally {\r\n      setShowDeleteModal(false);\r\n      setStudentToDelete(null);\r\n    }\r\n  };\r\n\r\n  // Get resume status badge\r\n  const getResumeStatusBadge = (student) => {\r\n    if (student.ResumeLink) {\r\n      return (\r\n        <Badge bg=\"success\" className=\"d-flex align-items-center gap-1\">\r\n          <CheckCircle size={12} />\r\n          Uploaded\r\n        </Badge>\r\n      );\r\n    } else {\r\n      return (\r\n        <Badge bg=\"secondary\" className=\"d-flex align-items-center gap-1\">\r\n          <XCircle size={12} />\r\n          Not Uploaded\r\n        </Badge>\r\n      );\r\n    }\r\n  };\r\n\r\n  // Get student interview status\r\n  const getInterviewStatus = (studentId) => {\r\n    const interview = interviews.find(i => i.StudentId === studentId);\r\n    if (!interview) {\r\n      return <Badge bg=\"light\" text=\"dark\">Not Invited</Badge>;\r\n    }\r\n    \r\n    const statusColors = {\r\n      'Invited': 'primary',\r\n      'Scheduled': 'success', \r\n      'Completed': 'info',\r\n      'Cancelled': 'danger'\r\n    };\r\n    \r\n    return (\r\n      <Badge bg={statusColors[interview.Status] || 'secondary'}>\r\n        {interview.Status}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  // Get download options for selected students\r\n  const getDownloadOptions = () => {\r\n    const options = studentService.getDownloadOptions(selectedStudents, students);\r\n    return options;\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"py-4\">\r\n      <Row className=\"mb-4\">\r\n        <Col>\r\n          <h2 className=\"text-primary fw-bold\">\r\n            <i className=\"bi bi-speedometer2 me-2\"></i>\r\n            Admin Dashboard\r\n          </h2>\r\n          <p className=\"text-muted mb-0\">Manage students, slots, and interviews</p>\r\n        </Col>\r\n      </Row>\r\n\r\n      {loadingData && (\r\n        <Alert variant=\"info\" className=\"d-flex align-items-center\">\r\n          <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\r\n          Loading dashboard data...\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Bulk Download Progress */}\r\n      {(bulkDownloading || zipDownloading) && (\r\n        <Alert variant=\"info\" className=\"mb-4\">\r\n          <div className=\"d-flex align-items-center justify-content-between\">\r\n            <div>\r\n              <strong>\r\n                {zipDownloading ? 'Creating ZIP Archive...' : 'Downloading Resumes...'}\r\n              </strong>\r\n              {bulkDownloading && (\r\n                <small className=\"d-block text-muted\">\r\n                  Progress: {downloadProgress.current} of {downloadProgress.total}\r\n                </small>\r\n              )}\r\n              <small className=\"d-block text-muted\">\r\n                Files will be named as: StudentName.pdf\r\n              </small>\r\n            </div>\r\n            <Spinner animation=\"border\" size=\"sm\" />\r\n          </div>\r\n          {bulkDownloading && downloadProgress.total > 0 && (\r\n            <ProgressBar \r\n              now={(downloadProgress.current / downloadProgress.total) * 100} \r\n              className=\"mt-2\"\r\n              style={{ height: '8px' }}\r\n            />\r\n          )}\r\n        </Alert>\r\n      )}\r\n\r\n      <Tabs\r\n        defaultActiveKey=\"students\"\r\n        className=\"mb-4 shadow-sm rounded\"\r\n        fill\r\n        justify\r\n        id=\"admin-dashboard-tabs\"\r\n      >\r\n        <Tab eventKey=\"students\" title=\"Student Management\" tabClassName=\"fs-6 fw-semibold p-2\">\r\n          <Row className=\"g-4\">\r\n            <Col xs={12} md={6}>\r\n              <StudentForm onStudentAdded={handleStudentAdded} />\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n              <ExcelUpload onExcelUploaded={handleExcelUploaded} />\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* Search and Actions Row */}\r\n          <Row className=\"mt-4 mb-3\">\r\n            <Col xs={12} md={6}>\r\n              <InputGroup>\r\n                <InputGroup.Text id=\"search-icon\">\r\n                  <Search />\r\n                </InputGroup.Text>\r\n                <FormControl\r\n                  type=\"search\"\r\n                  placeholder=\"Search students by name, email, or phone\"\r\n                  aria-label=\"Search students\"\r\n                  aria-describedby=\"search-icon\"\r\n                  value={studentSearchTerm}\r\n                  onChange={(e) => setStudentSearchTerm(e.target.value)}\r\n                />\r\n              </InputGroup>\r\n            </Col>\r\n            <Col xs={12} md={6} className=\"d-flex gap-2 justify-content-md-end flex-wrap\">\r\n              {selectedStudents.length > 0 && (\r\n                <>\r\n                  <Button\r\n                    variant=\"success\"\r\n                    onClick={handleSendInvitations}\r\n                    className=\"fw-bold\"\r\n                  >\r\n                    <PersonCheck className=\"me-1\" />\r\n                    Send Invitations ({selectedStudents.length})\r\n                  </Button>\r\n                  \r\n                  {/* Enhanced Download Dropdown */}\r\n                  {getDownloadOptions().canDownload && (\r\n                    <Dropdown>\r\n                      <Dropdown.Toggle \r\n                        variant=\"outline-primary\" \r\n                        disabled={bulkDownloading || zipDownloading}\r\n                      >\r\n                        <Download className=\"me-1\" />\r\n                        Download Resumes ({getDownloadOptions().withResumes})\r\n                      </Dropdown.Toggle>\r\n\r\n                      <Dropdown.Menu>\r\n                        <Dropdown.Header>\r\n                          <small>\r\n                            {getDownloadOptions().withResumes} students with resumes selected\r\n                          </small>\r\n                        </Dropdown.Header>\r\n                        <Dropdown.Divider />\r\n                        \r\n                        <Dropdown.Item \r\n                          onClick={handleZipResumeDownload}\r\n                          disabled={zipDownloading}\r\n                          className=\"d-flex align-items-center\"\r\n                        >\r\n                          <FileEarmarkZip className=\"me-2 text-primary\" size={16} />\r\n                          <div>\r\n                            <div className=\"fw-bold\">Download as ZIP</div>\r\n                            <small className=\"text-muted\">Single archive with StudentName.pdf files (Recommended)</small>\r\n                          </div>\r\n                        </Dropdown.Item>\r\n                        \r\n                        <Dropdown.Item \r\n                          onClick={handleBulkResumeDownload}\r\n                          disabled={bulkDownloading}\r\n                          className=\"d-flex align-items-center\"\r\n                        >\r\n                          <CloudDownload className=\"me-2 text-success\" size={16} />\r\n                          <div>\r\n                            <div className=\"fw-bold\">Download Individual Files</div>\r\n                            <small className=\"text-muted\">Separate StudentName.pdf files (Better for few files)</small>\r\n                          </div>\r\n                        </Dropdown.Item>\r\n                        \r\n                        {getDownloadOptions().withoutResumes > 0 && (\r\n                          <>\r\n                            <Dropdown.Divider />\r\n                            <Dropdown.ItemText>\r\n                              <small className=\"text-warning\">\r\n                                <XCircle size={14} className=\"me-1\" />\r\n                                {getDownloadOptions().withoutResumes} selected students have no resume\r\n                              </small>\r\n                            </Dropdown.ItemText>\r\n                          </>\r\n                        )}\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                  )}\r\n                </>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* Students Summary */}\r\n          <Row className=\"mb-3\">\r\n            <Col>\r\n              <div className=\"d-flex gap-3 flex-wrap\">\r\n                <Badge bg=\"info\" className=\"fs-6 px-3 py-2\">\r\n                  Total: {students.length}\r\n                </Badge>\r\n                <Badge bg=\"success\" className=\"fs-6 px-3 py-2\">\r\n                  With Resume: {students.filter(s => s.ResumeLink).length}\r\n                </Badge>\r\n                <Badge bg=\"warning\" className=\"fs-6 px-3 py-2\">\r\n                  No Resume: {students.filter(s => !s.ResumeLink).length}\r\n                </Badge>\r\n                <Badge bg=\"primary\" className=\"fs-6 px-3 py-2\">\r\n                  Selected: {selectedStudents.length}\r\n                </Badge>\r\n                {selectedStudents.length > 0 && (\r\n                  <Badge bg=\"secondary\" className=\"fs-6 px-3 py-2\">\r\n                    Selected with Resume: {getDownloadOptions().withResumes}\r\n                  </Badge>\r\n                )}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs={12}>\r\n              <Card className=\"shadow-sm rounded\">\r\n                <Card.Header className=\"bg-primary d-flex justify-content-between align-items-center text-white fw-semibold\">\r\n                  <h5 className=\"mb-0\">\r\n                    <FileEarmarkText className=\"me-2\" />\r\n                    Students List ({filteredStudents.length})\r\n                  </h5>\r\n                </Card.Header>\r\n                <Card.Body className=\"p-0\">\r\n                  <div\r\n                    className=\"table-responsive\"\r\n                    style={{ overflowX: 'auto', maxHeight: '70vh', overflowY: 'auto' }}\r\n                  >\r\n                    <Table striped hover className=\"mb-0 align-middle\">\r\n                      <thead\r\n                        className=\"table-primary\"\r\n                        style={{ position: 'sticky', top: 0, zIndex: 1 }}\r\n                      >\r\n                        <tr>\r\n                          <th style={{ width: '3rem' }}>\r\n                            <Form.Check\r\n                              type=\"checkbox\"\r\n                              id=\"selectAllStudents\"\r\n                              onChange={(e) => handleSelectAll(e.target.checked)}\r\n                              checked={\r\n                                filteredStudents.length > 0 &&\r\n                                selectedStudents.length === filteredStudents.length\r\n                              }\r\n                              aria-label=\"Select all students\"\r\n                            />\r\n                          </th>\r\n                          <th className=\"text-break\">Name</th>\r\n                          <th className=\"text-break\">Email</th>\r\n                          <th className=\"text-break\">Phone</th>\r\n                          <th className=\"text-break\">Resume</th>\r\n                          <th className=\"text-break\">Status</th>\r\n                          <th style={{ width: '120px' }}>Actions</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {filteredStudents.length === 0 ? (\r\n                          <tr>\r\n                            <td colSpan={7} className=\"text-center py-5 text-muted\">\r\n                              <div>\r\n                                <Search size={48} className=\"text-muted mb-3\" />\r\n                                <h5>No students found</h5>\r\n                                <p>Try adjusting your search or add new students</p>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        ) : (\r\n                          filteredStudents.map((student) => (\r\n                            <tr key={student.Id}>\r\n                              <td>\r\n                                <Form.Check\r\n                                  type=\"checkbox\"\r\n                                  id={`student-${student.Id}`}\r\n                                  checked={selectedStudents.includes(student.Id)}\r\n                                  onChange={(e) =>\r\n                                    handleStudentSelect(student.Id, e.target.checked)\r\n                                  }\r\n                                  aria-label={`Select student ${student.Name}`}\r\n                                />\r\n                              </td>\r\n                              <td className=\"fw-semibold\">{student.Name}</td>\r\n                              <td>{student.Email}</td>\r\n                              <td>{student.Phone || '-'}</td>\r\n                              <td>\r\n                                <div className=\"d-flex align-items-center gap-2\">\r\n                                  {getResumeStatusBadge(student)}\r\n                                  {student.ResumeLink && (\r\n                                    <Button\r\n                                      variant=\"outline-success\"\r\n                                      size=\"sm\"\r\n                                      onClick={() => handleResumeDownload(student)}\r\n                                      disabled={downloadingResumes.has(student.Id)}\r\n                                      title={`Download ${student.Name.replace(/[^a-zA-Z0-9\\s]/g, '').replace(/\\s+/g, '_')}.pdf`}\r\n                                    >\r\n                                      {downloadingResumes.has(student.Id) ? (\r\n                                        <Spinner\r\n                                          as=\"span\"\r\n                                          animation=\"border\"\r\n                                          size=\"sm\"\r\n                                          role=\"status\"\r\n                                          aria-hidden=\"true\"\r\n                                        />\r\n                                      ) : (\r\n                                        <Download size={14} />\r\n                                      )}\r\n                                    </Button>\r\n                                  )}\r\n                                </div>\r\n                              </td>\r\n                              <td>\r\n                                {getInterviewStatus(student.Id)}\r\n                              </td>\r\n                              <td>\r\n                                <Button\r\n                                  variant=\"outline-danger\"\r\n                                  size=\"sm\"\r\n                                  onClick={() => handleDeleteStudent(student)}\r\n                                  aria-label={`Delete student ${student.Name}`}\r\n                                >\r\n                                  <Trash size={14} />\r\n                                </Button>\r\n                              </td>\r\n                            </tr>\r\n                          ))\r\n                        )}\r\n                      </tbody>\r\n                    </Table>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Tab>\r\n\r\n        {/* ENHANCED INTERVIEW SLOTS TAB */}\r\n        <Tab eventKey=\"slots\" title=\"Interview Slots\" tabClassName=\"fs-6 fw-semibold p-2\">\r\n          <Row className=\"g-4\">\r\n            <Col xs={12} md={4}>\r\n              <SlotCreator onSlotCreated={handleSlotCreated} />\r\n            </Col>\r\n            <Col xs={12} md={8}>\r\n              <Card className=\"shadow-sm rounded\">\r\n                <Card.Header className=\"d-flex justify-content-between align-items-center bg-success text-white fw-semibold\">\r\n                  <h5 className=\"mb-0\">\r\n                    All Slots ({filteredSlots.length})\r\n                  </h5>\r\n                  <InputGroup style={{ maxWidth: '300px' }} className=\"ms-auto\">\r\n                    <InputGroup.Text>\r\n                      <Search />\r\n                    </InputGroup.Text>\r\n                    <FormControl\r\n                      placeholder=\"Search slots by date, interviewer, or student\"\r\n                      aria-label=\"Search slots\"\r\n                      value={slotSearchTerm}\r\n                      onChange={(e) => setSlotSearchTerm(e.target.value)}\r\n                    />\r\n                  </InputGroup>\r\n                </Card.Header>\r\n\r\n                {/* Slots Summary */}\r\n                <div className=\"p-3 bg-light border-bottom\">\r\n                  <div className=\"d-flex gap-3 flex-wrap\">\r\n                    <Badge bg=\"info\" className=\"fs-6 px-3 py-2\">\r\n                      Total: {slots.length}\r\n                    </Badge>\r\n                    <Badge bg=\"success\" className=\"fs-6 px-3 py-2\">\r\n                      Available: {slots.filter(s => !s.IsBooked).length}\r\n                    </Badge>\r\n                    <Badge bg=\"danger\" className=\"fs-6 px-3 py-2\">\r\n                      Booked: {slots.filter(s => s.IsBooked).length}\r\n                    </Badge>\r\n                    <Badge bg=\"warning\" className=\"fs-6 px-3 py-2\">\r\n                      Today: {slots.filter(s => \r\n                        new Date(s.SlotDateTime).toDateString() === new Date().toDateString()\r\n                      ).length}\r\n                    </Badge>\r\n                  </div>\r\n                </div>\r\n\r\n                <Card.Body className=\"p-0\">\r\n                  <div className=\"table-responsive\" style={{ maxHeight: '70vh', overflowY: 'auto', overflowX: 'auto' }}>\r\n                    <Table striped hover className=\"mb-0 align-middle\">\r\n                      <thead\r\n                        className=\"table-success bg-success text-white\"\r\n                        style={{ position: 'sticky', top: 0, zIndex: 1 }}\r\n                      >\r\n                        <tr>\r\n                          <th>Date & Time</th>\r\n                          <th>Interviewer</th>\r\n                          <th>Status</th>\r\n                          <th>Booked By</th>\r\n                          <th>Meeting Link</th>\r\n                          <th style={{ width: '160px' }}>Actions</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {filteredSlots.length === 0 ? (\r\n                          <tr>\r\n                            <td colSpan={6} className=\"text-center py-5 text-muted\">\r\n                              <div>\r\n                                <Search size={48} className=\"text-muted mb-3\" />\r\n                                <h6>No slots found</h6>\r\n                                <p>Try adjusting your search or create new slots</p>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        ) : (\r\n                          filteredSlots.map((slot) => (\r\n                            <tr key={slot.Id}>\r\n                              <td className=\"fw-semibold\">\r\n                                <div>{new Date(slot.SlotDateTime).toLocaleDateString()}</div>\r\n                                <small className=\"text-muted\">\r\n                                  {new Date(slot.SlotDateTime).toLocaleTimeString('en-US', {\r\n                                    hour: 'numeric',\r\n                                    minute: '2-digit',\r\n                                    hour12: true\r\n                                  })}\r\n                                </small>\r\n                              </td>\r\n                              <td>\r\n                                <span className=\"fw-medium\">{slot.Interviewer || 'Not assigned'}</span>\r\n                              </td>\r\n                              <td>\r\n                                <Badge\r\n                                  bg={slot.IsBooked ? 'danger' : 'success'}\r\n                                  className=\"py-2 px-3\"\r\n                                >\r\n                                  {slot.IsBooked ? 'Booked' : 'Available'}\r\n                                </Badge>\r\n                              </td>\r\n                              <td>\r\n                                {slot.IsBooked && slot.StudentName ? (\r\n                                  <div>\r\n                                    <div className=\"fw-medium\">{slot.StudentName}</div>\r\n                                    <small className=\"text-muted\">{slot.StudentEmail}</small>\r\n                                  </div>\r\n                                ) : (\r\n                                  <span className=\"text-muted\">-</span>\r\n                                )}\r\n                              </td>\r\n                              <td>\r\n                                {slot.MeetingLink ? (\r\n                                  <Button\r\n                                    as=\"a\"\r\n                                    href={slot.MeetingLink}\r\n                                    target=\"_blank\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                    size=\"sm\"\r\n                                    variant=\"outline-primary\"\r\n                                    className=\"d-flex align-items-center gap-1\"\r\n                                  >\r\n                                    <CameraVideo size={14} />\r\n                                    <span className=\"small\">Join</span>\r\n                                  </Button>\r\n                                ) : (\r\n                                  <Badge bg=\"light\" text=\"dark\" className=\"small\">No Link</Badge>\r\n                                )}\r\n                              </td>\r\n                              <td>\r\n                                <div className=\"d-flex gap-1 flex-wrap\">\r\n                                  {/* Cancel Booking Button - Only show if slot is booked */}\r\n                                  {slot.IsBooked && (\r\n                                    <Button\r\n                                      variant=\"outline-warning\"\r\n                                      size=\"sm\"\r\n                                      onClick={async () => {\r\n                                        const confirmed = window.confirm(\r\n                                          `Cancel booking for ${slot.StudentName}?\\n\\n` +\r\n                                          `Slot: ${new Date(slot.SlotDateTime).toLocaleString()}\\n` +\r\n                                          `Student: ${slot.StudentName} (${slot.StudentEmail})\\n\\n` +\r\n                                          `This will free up the slot and cancel the student's interview.`\r\n                                        );\r\n                                        \r\n                                        if (confirmed) {\r\n                                          try {\r\n                                            await slotService.cancelBooking(slot.Id, 'Cancelled by admin');\r\n                                            toast.success(\r\n                                              <div>\r\n                                                <strong>Booking Cancelled</strong>\r\n                                                <br />\r\n                                                <small>Student: {slot.StudentName}</small>\r\n                                                <br />\r\n                                                <small>Slot is now available</small>\r\n                                              </div>\r\n                                            );\r\n                                            loadData();\r\n                                          } catch (error) {\r\n                                            const errorMessage = error.response?.data?.error || error.message;\r\n                                            toast.error('Failed to cancel booking: ' + errorMessage);\r\n                                          }\r\n                                        }\r\n                                      }}\r\n                                      title={`Cancel booking for ${slot.StudentName}`}\r\n                                    >\r\n                                      <XCircle size={14} />\r\n                                    </Button>\r\n                                  )}\r\n\r\n                                  {/* View Student Button - Only show if slot is booked */}\r\n                                  {slot.IsBooked && slot.StudentEmail && (\r\n                                    <Button\r\n                                      variant=\"outline-info\"\r\n                                      size=\"sm\"\r\n                                      onClick={() => {\r\n                                        // You can implement a modal to show student details\r\n                                        toast.info(\r\n                                          <div>\r\n                                            <strong>{slot.StudentName}</strong>\r\n                                            <br />\r\n                                            <small>Email: {slot.StudentEmail}</small>\r\n                                            <br />\r\n                                            <small>Slot: {new Date(slot.SlotDateTime).toLocaleString()}</small>\r\n                                          </div>,\r\n                                          { autoClose: 5000 }\r\n                                        );\r\n                                      }}\r\n                                      title={`View details for ${slot.StudentName}`}\r\n                                    >\r\n                                      <Eye size={14} />\r\n                                    </Button>\r\n                                  )}\r\n\r\n                                  {/* Delete Button - Only show for unbooked slots */}\r\n                                  {!slot.IsBooked && (\r\n                                    <Button\r\n                                      variant=\"outline-danger\"\r\n                                      size=\"sm\"\r\n                                      onClick={async () => {\r\n                                        if (window.confirm(\r\n                                          `Delete this slot?\\n\\n` +\r\n                                          `Date: ${new Date(slot.SlotDateTime).toLocaleString()}\\n` +\r\n                                          `Interviewer: ${slot.Interviewer}\\n\\n` +\r\n                                          `This action cannot be undone.`\r\n                                        )) {\r\n                                          try {\r\n                                            await slotService.deleteSlot(slot.Id);\r\n                                            toast.success('Slot deleted successfully');\r\n                                            loadData();\r\n                                          } catch (error) {\r\n                                            const errorMessage = error.response?.data?.error || error.message;\r\n                                            toast.error('Failed to delete slot: ' + errorMessage);\r\n                                          }\r\n                                        }\r\n                                      }}\r\n                                      title=\"Delete this slot\"\r\n                                    >\r\n                                      <Trash size={14} />\r\n                                    </Button>\r\n                                  )}\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                          ))\r\n                        )}\r\n                      </tbody>\r\n                    </Table>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Tab>\r\n\r\n        <Tab eventKey=\"interviews\" title=\"Scheduled Interviews\" tabClassName=\"fs-6 fw-semibold p-2\">\r\n          <InterviewList interviews={interviews} onInterviewUpdated={loadData} />\r\n        </Tab>\r\n      </Tabs>\r\n\r\n      {/* Delete Confirmation Modal */}\r\n      <Modal show={showDeleteModal} onHide={() => setShowDeleteModal(false)} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"d-flex align-items-center\">\r\n            <ExclamationTriangle className=\"text-danger me-2\" />\r\n            Confirm Delete\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Are you sure you want to delete student <strong>\"{studentToDelete?.Name}\"</strong>?</p>\r\n          <Alert variant=\"warning\" className=\"mb-0\">\r\n            <small>This action cannot be undone. The student's data and any uploaded resume will be permanently deleted.</small>\r\n          </Alert>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowDeleteModal(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={confirmDeleteStudent}>\r\n            <Trash className=\"me-1\" />\r\n            Delete Student\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}