{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\nclass AuthService {\n  constructor() {\n    this.token = localStorage.getItem('admin_token');\n    this.setupInterceptors();\n  }\n  setupInterceptors() {\n    // Request interceptor to add auth token\n    axios.interceptors.request.use(config => {\n      const token = localStorage.getItem('admin_token');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    });\n\n    // Response interceptor to handle auth errors\n    axios.interceptors.response.use(response => {\n      return response;\n    }, error => {\n      var _error$response;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        this.logout();\n        window.location.href = '/login';\n      }\n      return Promise.reject(error);\n    });\n  }\n  async login(credentials) {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\n      if (response.data.success) {\n        const {\n          token,\n          admin\n        } = response.data.data;\n\n        // Store token and admin info\n        localStorage.setItem('admin_token', token);\n        localStorage.setItem('admin_info', JSON.stringify(admin));\n        this.token = token;\n        return {\n          success: true,\n          admin: admin,\n          token: token\n        };\n      }\n      return {\n        success: false,\n        message: response.data.message || 'Login failed'\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Network error. Please try again.'\n      };\n    }\n  }\n  async logout() {\n    try {\n      // Call logout endpoint (optional)\n      if (this.token) {\n        await axios.post(`${API_BASE_URL}/auth/logout`);\n      }\n    } catch (error) {\n      // Silent fail - we're logging out anyway\n    } finally {\n      // Clear local storage\n      localStorage.removeItem('admin_token');\n      localStorage.removeItem('admin_info');\n      this.token = null;\n    }\n  }\n  async getProfile() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/auth/profile`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async changePassword(passwordData) {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth/change-password`, passwordData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  isAuthenticated() {\n    return !!this.token && !!localStorage.getItem('admin_token');\n  }\n  getToken() {\n    return this.token || localStorage.getItem('admin_token');\n  }\n  getAdminInfo() {\n    const adminInfo = localStorage.getItem('admin_info');\n    return adminInfo ? JSON.parse(adminInfo) : null;\n  }\n\n  // Check if token is expired (basic check)\n  isTokenExpired() {\n    const token = this.getToken();\n    if (!token) return true;\n    try {\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      const currentTime = Math.floor(Date.now() / 1000);\n      return payload.exp < currentTime;\n    } catch (error) {\n      return true;\n    }\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","AuthService","constructor","token","localStorage","getItem","setupInterceptors","interceptors","request","use","config","headers","Authorization","error","Promise","reject","response","_error$response","status","logout","window","location","href","login","credentials","post","data","success","admin","setItem","JSON","stringify","message","_error$response2","_error$response2$data","removeItem","getProfile","get","changePassword","passwordData","isAuthenticated","getToken","getAdminInfo","adminInfo","parse","isTokenExpired","payload","atob","split","currentTime","Math","floor","Date","now","exp"],"sources":["E:/Downloads/interview-scheduler/interview-scheduler-frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\r\n\r\nclass AuthService {\r\n  constructor() {\r\n    this.token = localStorage.getItem('admin_token');\r\n    this.setupInterceptors();\r\n  }\r\n\r\n  setupInterceptors() {\r\n    // Request interceptor to add auth token\r\n    axios.interceptors.request.use(\r\n      (config) => {\r\n        const token = localStorage.getItem('admin_token');\r\n        if (token) {\r\n          config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n      },\r\n      (error) => {\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    // Response interceptor to handle auth errors\r\n    axios.interceptors.response.use(\r\n      (response) => {\r\n        return response;\r\n      },\r\n      (error) => {\r\n        if (error.response?.status === 401) {\r\n          this.logout();\r\n          window.location.href = '/login';\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  async login(credentials) {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\r\n      \r\n      if (response.data.success) {\r\n        const { token, admin } = response.data.data;\r\n        \r\n        // Store token and admin info\r\n        localStorage.setItem('admin_token', token);\r\n        localStorage.setItem('admin_info', JSON.stringify(admin));\r\n        \r\n        this.token = token;\r\n        \r\n        return {\r\n          success: true,\r\n          admin: admin,\r\n          token: token\r\n        };\r\n      }\r\n      \r\n      return {\r\n        success: false,\r\n        message: response.data.message || 'Login failed'\r\n      };\r\n      \r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Network error. Please try again.'\r\n      };\r\n    }\r\n  }\r\n\r\n  async logout() {\r\n    try {\r\n      // Call logout endpoint (optional)\r\n      if (this.token) {\r\n        await axios.post(`${API_BASE_URL}/auth/logout`);\r\n      }\r\n    } catch (error) {\r\n      // Silent fail - we're logging out anyway\r\n    } finally {\r\n      // Clear local storage\r\n      localStorage.removeItem('admin_token');\r\n      localStorage.removeItem('admin_info');\r\n      this.token = null;\r\n    }\r\n  }\r\n\r\n  async getProfile() {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/auth/profile`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async changePassword(passwordData) {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/auth/change-password`, passwordData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return !!this.token && !!localStorage.getItem('admin_token');\r\n  }\r\n\r\n  getToken() {\r\n    return this.token || localStorage.getItem('admin_token');\r\n  }\r\n\r\n  getAdminInfo() {\r\n    const adminInfo = localStorage.getItem('admin_info');\r\n    return adminInfo ? JSON.parse(adminInfo) : null;\r\n  }\r\n\r\n  // Check if token is expired (basic check)\r\n  isTokenExpired() {\r\n    const token = this.getToken();\r\n    if (!token) return true;\r\n\r\n    try {\r\n      const payload = JSON.parse(atob(token.split('.')[1]));\r\n      const currentTime = Math.floor(Date.now() / 1000);\r\n      return payload.exp < currentTime;\r\n    } catch (error) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}