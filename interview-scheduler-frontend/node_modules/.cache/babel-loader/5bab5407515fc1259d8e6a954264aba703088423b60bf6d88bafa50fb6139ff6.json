{"ast":null,"code":"var _jsxFileName = \"E:\\\\Downloads\\\\interview-scheduler\\\\interview-scheduler-frontend\\\\src\\\\components\\\\admin\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Tab, Tabs, Button, Card, Form, Alert, Badge, Table, InputGroup, FormControl, Spinner, Dropdown, Modal, ProgressBar } from 'react-bootstrap';\nimport { Trash, PersonCheck, Search, Download, Eye, FileEarmarkText, ExclamationTriangle, CheckCircle, XCircle, FileEarmarkZip, CloudDownload, CameraVideo, BoxArrowRight, PersonCircle } from 'react-bootstrap-icons';\nimport { toast } from 'react-toastify';\nimport StudentForm from './StudentForm';\nimport ExcelUpload from './ExcelUpload';\nimport SlotCreator from './SlotCreator';\nimport InterviewList from './InterviewList';\nimport studentService from '../../services/studentService';\nimport slotService from '../../services/slotService';\nimport interviewService from '../../services/interviewService';\nimport authService from '../../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // State variables\n  const [students, setStudents] = useState([]);\n  const [filteredStudents, setFilteredStudents] = useState([]);\n  const [slots, setSlots] = useState([]);\n  const [filteredSlots, setFilteredSlots] = useState([]);\n  const [interviews, setInterviews] = useState([]);\n  const [selectedStudents, setSelectedStudents] = useState([]);\n  const [studentSearchTerm, setStudentSearchTerm] = useState('');\n  const [slotSearchTerm, setSlotSearchTerm] = useState('');\n  const [downloadingResumes, setDownloadingResumes] = useState(new Set());\n  const [bulkDownloading, setBulkDownloading] = useState(false);\n  const [zipDownloading, setZipDownloading] = useState(false);\n  const [loadingData, setLoadingData] = useState(true);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [studentToDelete, setStudentToDelete] = useState(null);\n  const [downloadProgress, setDownloadProgress] = useState({\n    current: 0,\n    total: 0\n  });\n\n  // Get admin info\n  const adminInfo = authService.getAdminInfo();\n\n  // Handle logout\n  const handleLogout = async () => {\n    if (window.confirm('Are you sure you want to logout?')) {\n      try {\n        await authService.logout();\n        toast.success('Logged out successfully');\n        navigate('/login');\n      } catch (error) {\n        console.error('Logout error:', error);\n        authService.logout();\n        navigate('/login');\n      }\n    }\n  };\n\n  // SIMPLIFIED: Load data function without auth checks\n  const loadData = useCallback(async () => {\n    try {\n      setLoadingData(true);\n      console.log('📊 AdminDashboard: Loading data...');\n      const [studentsData, slotsData, interviewsData] = await Promise.all([studentService.getStudents(), slotService.getSlots(), interviewService.getInterviews()]);\n      setStudents(studentsData);\n      setSlots(slotsData);\n      setInterviews(interviewsData);\n      setFilteredStudents(studentsData);\n      setFilteredSlots(slotsData);\n      console.log('✅ AdminDashboard: Data loaded successfully');\n    } catch (error) {\n      var _error$response;\n      console.error('❌ AdminDashboard: Load data error:', error);\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        console.log('🔐 AdminDashboard: Auth error during data loading');\n        toast.error('Session expired. Please login again.');\n        authService.logout();\n        navigate('/login');\n      } else {\n        toast.error('Failed to load data. Please try refreshing the page.');\n      }\n    } finally {\n      setLoadingData(false);\n    }\n  }, [navigate]);\n\n  // SIMPLIFIED: Just load data on mount - NO auth checks\n  useEffect(() => {\n    console.log('📊 AdminDashboard: Component mounted, loading data...');\n    loadData();\n  }, []); // FIXED: No dependencies, loadData is stable\n\n  // Filter students based on search term\n  useEffect(() => {\n    if (!studentSearchTerm.trim()) {\n      setFilteredStudents(students);\n    } else {\n      const lowerTerm = studentSearchTerm.toLowerCase();\n      setFilteredStudents(students.filter(s => s.Name && s.Name.toLowerCase().includes(lowerTerm) || s.Email && s.Email.toLowerCase().includes(lowerTerm) || s.Phone && s.Phone.toLowerCase().includes(lowerTerm)));\n    }\n  }, [studentSearchTerm, students]);\n\n  // Enhanced filter for slots based on search term\n  useEffect(() => {\n    if (!slotSearchTerm.trim()) {\n      setFilteredSlots(slots);\n    } else {\n      const lowerTerm = slotSearchTerm.toLowerCase();\n      setFilteredSlots(slots.filter(slot => {\n        const dateString = new Date(slot.SlotDateTime).toLocaleString().toLowerCase();\n        const status = slot.IsBooked ? 'booked' : 'available';\n        const interviewer = (slot.Interviewer || '').toLowerCase();\n        const studentName = (slot.StudentName || '').toLowerCase();\n        return dateString.includes(lowerTerm) || interviewer.includes(lowerTerm) || studentName.includes(lowerTerm) || status.includes(lowerTerm);\n      }));\n    }\n  }, [slotSearchTerm, slots]);\n\n  // Handler functions\n  const handleStudentAdded = useCallback(result => {\n    loadData();\n    toast.success(`Student \"${result.student.name}\" added successfully`);\n  }, [loadData]);\n  const handleExcelUploaded = useCallback(result => {\n    loadData();\n    if (result.successful > 0) {\n      toast.success(`Excel processed: ${result.successful} students imported successfully`);\n      if (result.failed > 0 || result.duplicates > 0) {\n        toast.warning(`Note: ${result.failed} failed, ${result.duplicates || 0} duplicates skipped`);\n      }\n    } else {\n      toast.error('No students were imported from Excel file');\n    }\n  }, [loadData]);\n  const handleSlotCreated = useCallback(() => {\n    loadData();\n    toast.success('Interview slot created successfully');\n  }, [loadData]);\n\n  // ... keep ALL your existing handler functions exactly as they were ...\n  // (handleSendInvitations, handleSelectAll, handleStudentSelect, etc.)\n  // I'm not rewriting them here to save space, but keep them all\n\n  const handleSendInvitations = async () => {\n    if (selectedStudents.length === 0) {\n      toast.warning('Please select students to send invitations');\n      return;\n    }\n    if (selectedStudents.length > 10) {\n      const confirmed = window.confirm(`You are about to send ${selectedStudents.length} invitation emails.\\n\\n` + `This process will take approximately ${Math.ceil(selectedStudents.length * 2 / 60)} minutes ` + `as emails are sent sequentially to ensure delivery.\\n\\n` + `Continue?`);\n      if (!confirmed) return;\n    }\n    try {\n      toast.info(/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Sending Invitations...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Processing \", selectedStudents.length, \" students\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"This may take a few minutes - please wait\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), {\n        autoClose: false,\n        toastId: 'bulk-sending',\n        closeButton: false\n      });\n      console.log(`🚀 Starting bulk invitation for ${selectedStudents.length} students`);\n      const result = await studentService.sendBulkInvitations(selectedStudents);\n      toast.dismiss('bulk-sending');\n      if (result.success) {\n        toast.success(/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"All Invitations Sent Successfully! \\uD83C\\uDF89\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"\\u2705 \", result.data.successCount, \" emails sent\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"\\uD83D\\uDCE7 Provider: \", result.data.provider]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), {\n          autoClose: 8000\n        });\n      } else {\n        toast.warning(/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Partial Success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"\\u2705 Sent: \", result.data.successCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"\\u274C Failed: \", result.data.errorCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), {\n          autoClose: 10000\n        });\n        if (result.data.errors && result.data.errors.length > 0) {\n          result.data.errors.slice(0, 3).forEach(error => {\n            toast.error(`Failed: ${error.studentName} - ${error.error}`);\n          });\n          if (result.data.errors.length > 3) {\n            toast.info(`And ${result.data.errors.length - 3} more errors. Check console for details.`);\n          }\n        }\n      }\n      if (result.data.skippedExisting > 0) {\n        toast.info(`Info: ${result.data.skippedExisting} students already had invitations`);\n      }\n      setSelectedStudents([]);\n      loadData();\n    } catch (error) {\n      var _error$response2;\n      toast.dismiss('bulk-sending');\n      console.error('❌ Bulk invitation error:', error);\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        toast.error('Session expired. Please login again.');\n        authService.logout();\n        navigate('/login');\n        return;\n      }\n      const errorMessage = error.message || 'Unknown error occurred';\n      toast.error(/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Bulk Send Failed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Please try again or contact support\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this));\n    }\n  };\n  const handleSelectAll = checked => {\n    if (checked) {\n      setSelectedStudents(filteredStudents.map(s => s.Id));\n    } else {\n      setSelectedStudents([]);\n    }\n  };\n  const handleStudentSelect = (id, checked) => {\n    if (checked) {\n      setSelectedStudents(prev => [...prev, id]);\n    } else {\n      setSelectedStudents(prev => prev.filter(sid => sid !== id));\n    }\n  };\n\n  // ... Keep ALL your other handler functions ...\n  // (handleResumeDownload, handleBulkResumeDownload, handleZipResumeDownload, \n  //  handleDeleteStudent, confirmDeleteStudent, getResumeStatusBadge, \n  //  getInterviewStatus, getDownloadOptions)\n\n  const handleResumeDownload = async student => {\n    if (!student.ResumeLink) {\n      toast.warning(`No resume uploaded for ${student.Name}`);\n      return;\n    }\n    setDownloadingResumes(prev => new Set(prev).add(student.Id));\n    try {\n      console.log('📥 Downloading resume for:', student.Name);\n      const result = await studentService.downloadResumeWithFeedback(student.Id, student.Name);\n      const cleanName = student.Name.replace(/[^a-zA-Z0-9\\s]/g, '').replace(/\\s+/g, '_');\n      const expectedFilename = result.filename || `${cleanName}.pdf`;\n      toast.success(/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Resume Downloaded!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Student: \", student.Name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"File: \", expectedFilename]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this));\n    } catch (error) {\n      console.error('❌ Resume download failed:', error);\n      const errorMessage = error.message || 'Failed to download resume';\n      toast.error(/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Download Failed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Student: \", student.Name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Error: \", errorMessage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this));\n    } finally {\n      setDownloadingResumes(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(student.Id);\n        return newSet;\n      });\n    }\n  };\n  const handleDeleteStudent = student => {\n    setStudentToDelete(student);\n    setShowDeleteModal(true);\n  };\n  const confirmDeleteStudent = async () => {\n    if (!studentToDelete) return;\n    try {\n      await studentService.deleteStudent(studentToDelete.Id);\n      toast.success(`Student \"${studentToDelete.Name}\" deleted successfully`);\n      loadData();\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const backendError = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || error.message;\n      toast.error(`Failed to delete student: ${backendError}`);\n    } finally {\n      setShowDeleteModal(false);\n      setStudentToDelete(null);\n    }\n  };\n  const getResumeStatusBadge = student => {\n    if (student.ResumeLink) {\n      return /*#__PURE__*/_jsxDEV(Badge, {\n        bg: \"success\",\n        className: \"d-flex align-items-center gap-1\",\n        children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n          size: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), \"Uploaded\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Badge, {\n        bg: \"secondary\",\n        className: \"d-flex align-items-center gap-1\",\n        children: [/*#__PURE__*/_jsxDEV(XCircle, {\n          size: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), \"Not Uploaded\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const getInterviewStatus = studentId => {\n    const interview = interviews.find(i => i.StudentId === studentId);\n    if (!interview) {\n      return /*#__PURE__*/_jsxDEV(Badge, {\n        bg: \"light\",\n        text: \"dark\",\n        children: \"Not Invited\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 14\n      }, this);\n    }\n    const statusColors = {\n      'Invited': 'primary',\n      'Scheduled': 'success',\n      'Completed': 'info',\n      'Cancelled': 'danger'\n    };\n    return /*#__PURE__*/_jsxDEV(Badge, {\n      bg: statusColors[interview.Status] || 'secondary',\n      children: interview.Status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this);\n  };\n  const getDownloadOptions = () => {\n    const studentsWithResumes = selectedStudents.filter(id => {\n      const student = students.find(s => s.Id === id);\n      return student && student.ResumeLink;\n    });\n    return {\n      canDownload: studentsWithResumes.length > 0,\n      withResumes: studentsWithResumes.length,\n      withoutResumes: selectedStudents.length - studentsWithResumes.length\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"py-4\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-primary fw-bold\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-speedometer2 me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 17\n              }, this), \"Admin Dashboard\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted mb-0\",\n              children: \"Manage students, slots, and interviews\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex align-items-center gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-muted d-flex align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(PersonCircle, {\n                className: \"me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 17\n              }, this), \"Welcome, \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                className: \"ms-1\",\n                children: (adminInfo === null || adminInfo === void 0 ? void 0 : adminInfo.Username) || 'Admin'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 26\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-danger\",\n              size: \"sm\",\n              onClick: handleLogout,\n              children: [/*#__PURE__*/_jsxDEV(BoxArrowRight, {\n                className: \"me-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 17\n              }, this), \"Logout\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this), loadingData && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"info\",\n      className: \"d-flex align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        size: \"sm\",\n        className: \"me-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 11\n      }, this), \"Loading dashboard data...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showDeleteModal,\n      onHide: () => setShowDeleteModal(false),\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          className: \"d-flex align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(ExclamationTriangle, {\n            className: \"text-danger me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this), \"Confirm Delete\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Are you sure you want to delete student \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"\\\"\", studentToDelete === null || studentToDelete === void 0 ? void 0 : studentToDelete.Name, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 54\n          }, this), \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"warning\",\n          className: \"mb-0\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"This action cannot be undone. The student's data and any uploaded resume will be permanently deleted.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowDeleteModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: confirmDeleteStudent,\n          children: [/*#__PURE__*/_jsxDEV(Trash, {\n            className: \"me-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this), \"Delete Student\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 436,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"gRoRmjLdvevz6P/QbtBE1wspOp4=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","Container","Row","Col","Tab","Tabs","Button","Card","Form","Alert","Badge","Table","InputGroup","FormControl","Spinner","Dropdown","Modal","ProgressBar","Trash","PersonCheck","Search","Download","Eye","FileEarmarkText","ExclamationTriangle","CheckCircle","XCircle","FileEarmarkZip","CloudDownload","CameraVideo","BoxArrowRight","PersonCircle","toast","StudentForm","ExcelUpload","SlotCreator","InterviewList","studentService","slotService","interviewService","authService","jsxDEV","_jsxDEV","AdminDashboard","_s","navigate","students","setStudents","filteredStudents","setFilteredStudents","slots","setSlots","filteredSlots","setFilteredSlots","interviews","setInterviews","selectedStudents","setSelectedStudents","studentSearchTerm","setStudentSearchTerm","slotSearchTerm","setSlotSearchTerm","downloadingResumes","setDownloadingResumes","Set","bulkDownloading","setBulkDownloading","zipDownloading","setZipDownloading","loadingData","setLoadingData","showDeleteModal","setShowDeleteModal","studentToDelete","setStudentToDelete","downloadProgress","setDownloadProgress","current","total","adminInfo","getAdminInfo","handleLogout","window","confirm","logout","success","error","console","loadData","log","studentsData","slotsData","interviewsData","Promise","all","getStudents","getSlots","getInterviews","_error$response","response","status","trim","lowerTerm","toLowerCase","filter","s","Name","includes","Email","Phone","slot","dateString","Date","SlotDateTime","toLocaleString","IsBooked","interviewer","Interviewer","studentName","StudentName","handleStudentAdded","result","student","name","handleExcelUploaded","successful","failed","duplicates","warning","handleSlotCreated","handleSendInvitations","length","confirmed","Math","ceil","info","children","fileName","_jsxFileName","lineNumber","columnNumber","autoClose","toastId","closeButton","sendBulkInvitations","dismiss","data","successCount","provider","errorCount","errors","slice","forEach","skippedExisting","_error$response2","errorMessage","message","handleSelectAll","checked","map","Id","handleStudentSelect","id","prev","sid","handleResumeDownload","ResumeLink","add","downloadResumeWithFeedback","cleanName","replace","expectedFilename","filename","newSet","delete","handleDeleteStudent","confirmDeleteStudent","deleteStudent","_error$response3","_error$response3$data","backendError","getResumeStatusBadge","bg","className","size","getInterviewStatus","studentId","interview","find","i","StudentId","text","statusColors","Status","getDownloadOptions","studentsWithResumes","canDownload","withResumes","withoutResumes","fluid","Username","variant","onClick","animation","show","onHide","centered","Header","Title","Body","Footer","_c","$RefreshReg$"],"sources":["E:/Downloads/interview-scheduler/interview-scheduler-frontend/src/components/admin/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Tab,\r\n  Tabs,\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Alert,\r\n  Badge,\r\n  Table,\r\n  InputGroup,\r\n  FormControl,\r\n  Spinner,\r\n  Dropdown,\r\n  Modal,\r\n  ProgressBar,\r\n} from 'react-bootstrap';\r\nimport { \r\n  Trash, \r\n  PersonCheck, \r\n  Search, \r\n  Download, \r\n  Eye, \r\n  FileEarmarkText, \r\n  ExclamationTriangle,\r\n  CheckCircle,\r\n  XCircle,\r\n  FileEarmarkZip,\r\n  CloudDownload,\r\n  CameraVideo,\r\n  BoxArrowRight,\r\n  PersonCircle\r\n} from 'react-bootstrap-icons';\r\nimport { toast } from 'react-toastify';\r\nimport StudentForm from './StudentForm';\r\nimport ExcelUpload from './ExcelUpload';\r\nimport SlotCreator from './SlotCreator';\r\nimport InterviewList from './InterviewList';\r\nimport studentService from '../../services/studentService';\r\nimport slotService from '../../services/slotService';\r\nimport interviewService from '../../services/interviewService';\r\nimport authService from '../../services/authService';\r\n\r\nconst AdminDashboard = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // State variables\r\n  const [students, setStudents] = useState([]);\r\n  const [filteredStudents, setFilteredStudents] = useState([]);\r\n  const [slots, setSlots] = useState([]);\r\n  const [filteredSlots, setFilteredSlots] = useState([]);\r\n  const [interviews, setInterviews] = useState([]);\r\n  const [selectedStudents, setSelectedStudents] = useState([]);\r\n  const [studentSearchTerm, setStudentSearchTerm] = useState('');\r\n  const [slotSearchTerm, setSlotSearchTerm] = useState('');\r\n  const [downloadingResumes, setDownloadingResumes] = useState(new Set());\r\n  const [bulkDownloading, setBulkDownloading] = useState(false);\r\n  const [zipDownloading, setZipDownloading] = useState(false);\r\n  const [loadingData, setLoadingData] = useState(true);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [studentToDelete, setStudentToDelete] = useState(null);\r\n  const [downloadProgress, setDownloadProgress] = useState({ current: 0, total: 0 });\r\n\r\n  // Get admin info\r\n  const adminInfo = authService.getAdminInfo();\r\n\r\n  // Handle logout\r\n  const handleLogout = async () => {\r\n    if (window.confirm('Are you sure you want to logout?')) {\r\n      try {\r\n        await authService.logout();\r\n        toast.success('Logged out successfully');\r\n        navigate('/login');\r\n      } catch (error) {\r\n        console.error('Logout error:', error);\r\n        authService.logout();\r\n        navigate('/login');\r\n      }\r\n    }\r\n  };\r\n\r\n  // SIMPLIFIED: Load data function without auth checks\r\n  const loadData = useCallback(async () => {\r\n    try {\r\n      setLoadingData(true);\r\n      console.log('📊 AdminDashboard: Loading data...');\r\n      \r\n      const [studentsData, slotsData, interviewsData] = await Promise.all([\r\n        studentService.getStudents(),\r\n        slotService.getSlots(),\r\n        interviewService.getInterviews(),\r\n      ]);\r\n      \r\n      setStudents(studentsData);\r\n      setSlots(slotsData);\r\n      setInterviews(interviewsData);\r\n      setFilteredStudents(studentsData);\r\n      setFilteredSlots(slotsData);\r\n      console.log('✅ AdminDashboard: Data loaded successfully');\r\n      \r\n    } catch (error) {\r\n      console.error('❌ AdminDashboard: Load data error:', error);\r\n      \r\n      if (error.response?.status === 401) {\r\n        console.log('🔐 AdminDashboard: Auth error during data loading');\r\n        toast.error('Session expired. Please login again.');\r\n        authService.logout();\r\n        navigate('/login');\r\n      } else {\r\n        toast.error('Failed to load data. Please try refreshing the page.');\r\n      }\r\n    } finally {\r\n      setLoadingData(false);\r\n    }\r\n  }, [navigate]);\r\n\r\n  // SIMPLIFIED: Just load data on mount - NO auth checks\r\n  useEffect(() => {\r\n    console.log('📊 AdminDashboard: Component mounted, loading data...');\r\n    loadData();\r\n  }, []); // FIXED: No dependencies, loadData is stable\r\n\r\n  // Filter students based on search term\r\n  useEffect(() => {\r\n    if (!studentSearchTerm.trim()) {\r\n      setFilteredStudents(students);\r\n    } else {\r\n      const lowerTerm = studentSearchTerm.toLowerCase();\r\n      setFilteredStudents(\r\n        students.filter(\r\n          (s) =>\r\n            (s.Name && s.Name.toLowerCase().includes(lowerTerm)) ||\r\n            (s.Email && s.Email.toLowerCase().includes(lowerTerm)) ||\r\n            (s.Phone && s.Phone.toLowerCase().includes(lowerTerm))\r\n        )\r\n      );\r\n    }\r\n  }, [studentSearchTerm, students]);\r\n\r\n  // Enhanced filter for slots based on search term\r\n  useEffect(() => {\r\n    if (!slotSearchTerm.trim()) {\r\n      setFilteredSlots(slots);\r\n    } else {\r\n      const lowerTerm = slotSearchTerm.toLowerCase();\r\n      setFilteredSlots(\r\n        slots.filter((slot) => {\r\n          const dateString = new Date(slot.SlotDateTime).toLocaleString().toLowerCase();\r\n          const status = slot.IsBooked ? 'booked' : 'available';\r\n          const interviewer = (slot.Interviewer || '').toLowerCase();\r\n          const studentName = (slot.StudentName || '').toLowerCase();\r\n          \r\n          return (\r\n            dateString.includes(lowerTerm) ||\r\n            interviewer.includes(lowerTerm) ||\r\n            studentName.includes(lowerTerm) ||\r\n            status.includes(lowerTerm)\r\n          );\r\n        })\r\n      );\r\n    }\r\n  }, [slotSearchTerm, slots]);\r\n\r\n  // Handler functions\r\n  const handleStudentAdded = useCallback((result) => {\r\n    loadData();\r\n    toast.success(`Student \"${result.student.name}\" added successfully`);\r\n  }, [loadData]);\r\n\r\n  const handleExcelUploaded = useCallback((result) => {\r\n    loadData();\r\n    if (result.successful > 0) {\r\n      toast.success(`Excel processed: ${result.successful} students imported successfully`);\r\n      if (result.failed > 0 || result.duplicates > 0) {\r\n        toast.warning(`Note: ${result.failed} failed, ${result.duplicates || 0} duplicates skipped`);\r\n      }\r\n    } else {\r\n      toast.error('No students were imported from Excel file');\r\n    }\r\n  }, [loadData]);\r\n\r\n  const handleSlotCreated = useCallback(() => {\r\n    loadData();\r\n    toast.success('Interview slot created successfully');\r\n  }, [loadData]);\r\n\r\n  // ... keep ALL your existing handler functions exactly as they were ...\r\n  // (handleSendInvitations, handleSelectAll, handleStudentSelect, etc.)\r\n  // I'm not rewriting them here to save space, but keep them all\r\n\r\n  const handleSendInvitations = async () => {\r\n    if (selectedStudents.length === 0) {\r\n      toast.warning('Please select students to send invitations');\r\n      return;\r\n    }\r\n\r\n    if (selectedStudents.length > 10) {\r\n      const confirmed = window.confirm(\r\n        `You are about to send ${selectedStudents.length} invitation emails.\\n\\n` +\r\n        `This process will take approximately ${Math.ceil(selectedStudents.length * 2 / 60)} minutes ` +\r\n        `as emails are sent sequentially to ensure delivery.\\n\\n` +\r\n        `Continue?`\r\n      );\r\n      if (!confirmed) return;\r\n    }\r\n\r\n    try {\r\n      toast.info(\r\n        <div>\r\n          <strong>Sending Invitations...</strong>\r\n          <br />\r\n          <small>Processing {selectedStudents.length} students</small>\r\n          <br />\r\n          <small>This may take a few minutes - please wait</small>\r\n        </div>,\r\n        { \r\n          autoClose: false, \r\n          toastId: 'bulk-sending',\r\n          closeButton: false\r\n        }\r\n      );\r\n\r\n      console.log(`🚀 Starting bulk invitation for ${selectedStudents.length} students`);\r\n      \r\n      const result = await studentService.sendBulkInvitations(selectedStudents);\r\n      \r\n      toast.dismiss('bulk-sending');\r\n\r\n      if (result.success) {\r\n        toast.success(\r\n          <div>\r\n            <strong>All Invitations Sent Successfully! 🎉</strong>\r\n            <br />\r\n            <small>✅ {result.data.successCount} emails sent</small>\r\n            <br />\r\n            <small>📧 Provider: {result.data.provider}</small>\r\n          </div>,\r\n          { autoClose: 8000 }\r\n        );\r\n      } else {\r\n        toast.warning(\r\n          <div>\r\n            <strong>Partial Success</strong>\r\n            <br />\r\n            <small>✅ Sent: {result.data.successCount}</small>\r\n            <br />\r\n            <small>❌ Failed: {result.data.errorCount}</small>\r\n          </div>,\r\n          { autoClose: 10000 }\r\n        );\r\n        \r\n        if (result.data.errors && result.data.errors.length > 0) {\r\n          result.data.errors.slice(0, 3).forEach(error => {\r\n            toast.error(`Failed: ${error.studentName} - ${error.error}`);\r\n          });\r\n          \r\n          if (result.data.errors.length > 3) {\r\n            toast.info(`And ${result.data.errors.length - 3} more errors. Check console for details.`);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (result.data.skippedExisting > 0) {\r\n        toast.info(`Info: ${result.data.skippedExisting} students already had invitations`);\r\n      }\r\n\r\n      setSelectedStudents([]);\r\n      loadData();\r\n    } catch (error) {\r\n      toast.dismiss('bulk-sending');\r\n      console.error('❌ Bulk invitation error:', error);\r\n      \r\n      if (error.response?.status === 401) {\r\n        toast.error('Session expired. Please login again.');\r\n        authService.logout();\r\n        navigate('/login');\r\n        return;\r\n      }\r\n      \r\n      const errorMessage = error.message || 'Unknown error occurred';\r\n      toast.error(\r\n        <div>\r\n          <strong>Bulk Send Failed</strong>\r\n          <br />\r\n          <small>{errorMessage}</small>\r\n          <br />\r\n          <small>Please try again or contact support</small>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSelectAll = (checked) => {\r\n    if (checked) {\r\n      setSelectedStudents(filteredStudents.map((s) => s.Id));\r\n    } else {\r\n      setSelectedStudents([]);\r\n    }\r\n  };\r\n\r\n  const handleStudentSelect = (id, checked) => {\r\n    if (checked) {\r\n      setSelectedStudents((prev) => [...prev, id]);\r\n    } else {\r\n      setSelectedStudents((prev) => prev.filter((sid) => sid !== id));\r\n    }\r\n  };\r\n\r\n  // ... Keep ALL your other handler functions ...\r\n  // (handleResumeDownload, handleBulkResumeDownload, handleZipResumeDownload, \r\n  //  handleDeleteStudent, confirmDeleteStudent, getResumeStatusBadge, \r\n  //  getInterviewStatus, getDownloadOptions)\r\n\r\n  const handleResumeDownload = async (student) => {\r\n    if (!student.ResumeLink) {\r\n      toast.warning(`No resume uploaded for ${student.Name}`);\r\n      return;\r\n    }\r\n\r\n    setDownloadingResumes(prev => new Set(prev).add(student.Id));\r\n    \r\n    try {\r\n      console.log('📥 Downloading resume for:', student.Name);\r\n      const result = await studentService.downloadResumeWithFeedback(student.Id, student.Name);\r\n      \r\n      const cleanName = student.Name.replace(/[^a-zA-Z0-9\\s]/g, '').replace(/\\s+/g, '_');\r\n      const expectedFilename = result.filename || `${cleanName}.pdf`;\r\n      \r\n      toast.success(\r\n        <div>\r\n          <strong>Resume Downloaded!</strong>\r\n          <br />\r\n          <small>Student: {student.Name}</small>\r\n          <br />\r\n          <small>File: {expectedFilename}</small>\r\n        </div>\r\n      );\r\n    } catch (error) {\r\n      console.error('❌ Resume download failed:', error);\r\n      const errorMessage = error.message || 'Failed to download resume';\r\n      toast.error(\r\n        <div>\r\n          <strong>Download Failed</strong>\r\n          <br />\r\n          <small>Student: {student.Name}</small>\r\n          <br />\r\n          <small>Error: {errorMessage}</small>\r\n        </div>\r\n      );\r\n    } finally {\r\n      setDownloadingResumes(prev => {\r\n        const newSet = new Set(prev);\r\n        newSet.delete(student.Id);\r\n        return newSet;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeleteStudent = (student) => {\r\n    setStudentToDelete(student);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  const confirmDeleteStudent = async () => {\r\n    if (!studentToDelete) return;\r\n\r\n    try {\r\n      await studentService.deleteStudent(studentToDelete.Id);\r\n      toast.success(`Student \"${studentToDelete.Name}\" deleted successfully`);\r\n      loadData();\r\n    } catch (error) {\r\n      const backendError = error.response?.data?.error || error.message;\r\n      toast.error(`Failed to delete student: ${backendError}`);\r\n    } finally {\r\n      setShowDeleteModal(false);\r\n      setStudentToDelete(null);\r\n    }\r\n  };\r\n\r\n  const getResumeStatusBadge = (student) => {\r\n    if (student.ResumeLink) {\r\n      return (\r\n        <Badge bg=\"success\" className=\"d-flex align-items-center gap-1\">\r\n          <CheckCircle size={12} />\r\n          Uploaded\r\n        </Badge>\r\n      );\r\n    } else {\r\n      return (\r\n        <Badge bg=\"secondary\" className=\"d-flex align-items-center gap-1\">\r\n          <XCircle size={12} />\r\n          Not Uploaded\r\n        </Badge>\r\n      );\r\n    }\r\n  };\r\n\r\n  const getInterviewStatus = (studentId) => {\r\n    const interview = interviews.find(i => i.StudentId === studentId);\r\n    if (!interview) {\r\n      return <Badge bg=\"light\" text=\"dark\">Not Invited</Badge>;\r\n    }\r\n    \r\n    const statusColors = {\r\n      'Invited': 'primary',\r\n      'Scheduled': 'success', \r\n      'Completed': 'info',\r\n      'Cancelled': 'danger'\r\n    };\r\n    \r\n    return (\r\n      <Badge bg={statusColors[interview.Status] || 'secondary'}>\r\n        {interview.Status}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  const getDownloadOptions = () => {\r\n    const studentsWithResumes = selectedStudents.filter(id => {\r\n      const student = students.find(s => s.Id === id);\r\n      return student && student.ResumeLink;\r\n    });\r\n    \r\n    return {\r\n      canDownload: studentsWithResumes.length > 0,\r\n      withResumes: studentsWithResumes.length,\r\n      withoutResumes: selectedStudents.length - studentsWithResumes.length\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"py-4\">\r\n      {/* Header with logout */}\r\n      <Row className=\"mb-4\">\r\n        <Col>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div>\r\n              <h2 className=\"text-primary fw-bold\">\r\n                <i className=\"bi bi-speedometer2 me-2\"></i>\r\n                Admin Dashboard\r\n              </h2>\r\n              <p className=\"text-muted mb-0\">Manage students, slots, and interviews</p>\r\n            </div>\r\n            <div className=\"d-flex align-items-center gap-3\">\r\n              <span className=\"text-muted d-flex align-items-center\">\r\n                <PersonCircle className=\"me-2\" />\r\n                Welcome, <strong className=\"ms-1\">{adminInfo?.Username || 'Admin'}</strong>\r\n              </span>\r\n              <Button variant=\"outline-danger\" size=\"sm\" onClick={handleLogout}>\r\n                <BoxArrowRight className=\"me-1\" />\r\n                Logout\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {loadingData && (\r\n        <Alert variant=\"info\" className=\"d-flex align-items-center\">\r\n          <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\r\n          Loading dashboard data...\r\n        </Alert>\r\n      )}\r\n\r\n      {/* ... Keep ALL your existing JSX (tabs, tables, modals, etc.) ... */}\r\n      {/* I'm not rewriting the full JSX here to save space */}\r\n\r\n      {/* Delete Confirmation Modal */}\r\n      <Modal show={showDeleteModal} onHide={() => setShowDeleteModal(false)} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"d-flex align-items-center\">\r\n            <ExclamationTriangle className=\"text-danger me-2\" />\r\n            Confirm Delete\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Are you sure you want to delete student <strong>\"{studentToDelete?.Name}\"</strong>?</p>\r\n          <Alert variant=\"warning\" className=\"mb-0\">\r\n            <small>This action cannot be undone. The student's data and any uploaded resume will be permanently deleted.</small>\r\n          </Alert>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowDeleteModal(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={confirmDeleteStudent}>\r\n            <Trash className=\"me-1\" />\r\n            Delete Student\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}