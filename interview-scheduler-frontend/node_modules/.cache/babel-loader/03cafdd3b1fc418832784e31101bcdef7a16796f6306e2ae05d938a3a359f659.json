{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{Container,Row,Col,Tab,Tabs,Button,Card,Form,Alert,Badge,Table,InputGroup,FormControl}from'react-bootstrap';import{Trash,PersonCheck,Search}from'react-bootstrap-icons';import{toast}from'react-toastify';import StudentForm from'./StudentForm';import ExcelUpload from'./ExcelUpload';import SlotCreator from'./SlotCreator';import InterviewList from'./InterviewList';import studentService from'../../services/studentService';import slotService from'../../services/slotService';import interviewService from'../../services/interviewService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminDashboard=()=>{const[students,setStudents]=useState([]);const[filteredStudents,setFilteredStudents]=useState([]);const[slots,setSlots]=useState([]);const[filteredSlots,setFilteredSlots]=useState([]);const[interviews,setInterviews]=useState([]);const[selectedStudents,setSelectedStudents]=useState([]);const[studentSearchTerm,setStudentSearchTerm]=useState('');const[slotSearchTerm,setSlotSearchTerm]=useState('');// Load data function, memoized to prevent re-creation\nconst loadData=useCallback(async()=>{try{const[studentsData,slotsData,interviewsData]=await Promise.all([studentService.getStudents(),slotService.getSlots(),interviewService.getInterviews()]);setStudents(studentsData);setSlots(slotsData);setInterviews(interviewsData);setFilteredStudents(studentsData);setFilteredSlots(slotsData);}catch(error){toast.error('Failed to load data');console.error('Load data error:',error);}},[]);useEffect(()=>{loadData();},[loadData]);// Filter students based on search term\nuseEffect(()=>{if(!studentSearchTerm.trim()){setFilteredStudents(students);}else{const lowerTerm=studentSearchTerm.toLowerCase();setFilteredStudents(students.filter(s=>s.Name&&s.Name.toLowerCase().includes(lowerTerm)||s.Email&&s.Email.toLowerCase().includes(lowerTerm)||s.Phone&&s.Phone.toLowerCase().includes(lowerTerm)));}},[studentSearchTerm,students]);// Filter slots based on search term\nuseEffect(()=>{if(!slotSearchTerm.trim()){setFilteredSlots(slots);}else{const lowerTerm=slotSearchTerm.toLowerCase();setFilteredSlots(slots.filter(slot=>{const dateString=new Date(slot.SlotDateTime).toLocaleString().toLowerCase();const status=slot.IsBooked?'booked':'available';return dateString.includes(lowerTerm)||slot.StudentName&&slot.StudentName.toLowerCase().includes(lowerTerm)||status.includes(lowerTerm);}));}},[slotSearchTerm,slots]);// Handler functions keeping minimal re-renders using useCallback\nconst handleStudentAdded=useCallback(()=>{loadData();toast.success('Student added successfully');},[loadData]);const handleExcelUploaded=useCallback(result=>{loadData();toast.success(\"Excel processed: \".concat(result.successful,\" successful, \").concat(result.failed,\" failed\"));},[loadData]);const handleSlotCreated=useCallback(()=>{loadData();toast.success('Interview slot created successfully');},[loadData]);const handleSendInvitations=async()=>{if(selectedStudents.length===0){toast.warning('Please select students to send invitations');return;}try{await studentService.sendInvitations(selectedStudents);toast.success('Invitations sent successfully');setSelectedStudents([]);}catch(_unused){toast.error('Failed to send invitations');}};const handleSelectAll=checked=>{if(checked){setSelectedStudents(filteredStudents.map(s=>s.Id));}else{setSelectedStudents([]);}};const handleStudentSelect=(id,checked)=>{if(checked){setSelectedStudents(prev=>[...prev,id]);}else{setSelectedStudents(prev=>prev.filter(sid=>sid!==id));}};return/*#__PURE__*/_jsxs(Container,{fluid:true,className:\"py-4\",children:[/*#__PURE__*/_jsx(Row,{className:\"mb-4\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(\"h2\",{className:\"text-primary fw-bold\",children:\"Dashboard\"})})}),/*#__PURE__*/_jsxs(Tabs,{defaultActiveKey:\"students\",className:\"mb-4 shadow-sm rounded\",fill:true,justify:true,id:\"admin-dashboard-tabs\",children:[/*#__PURE__*/_jsxs(Tab,{eventKey:\"students\",title:\"Student Management\",tabClassName:\"fs-6 fw-semibold p-2\",children:[/*#__PURE__*/_jsxs(Row,{className:\"g-4\",children:[/*#__PURE__*/_jsx(Col,{xs:12,md:6,children:/*#__PURE__*/_jsx(StudentForm,{onStudentAdded:handleStudentAdded})}),/*#__PURE__*/_jsx(Col,{xs:12,md:6,children:/*#__PURE__*/_jsx(ExcelUpload,{onExcelUploaded:handleExcelUploaded})})]}),/*#__PURE__*/_jsx(Row,{className:\"mt-4 mb-3\",children:/*#__PURE__*/_jsx(Col,{xs:12,md:6,children:/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(InputGroup.Text,{id:\"search-icon\",children:/*#__PURE__*/_jsx(Search,{})}),/*#__PURE__*/_jsx(FormControl,{type:\"search\",placeholder:\"Search students by name, email, or phone\",\"aria-label\":\"Search students\",\"aria-describedby\":\"search-icon\",value:studentSearchTerm,onChange:e=>setStudentSearchTerm(e.target.value)})]})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{xs:12,children:/*#__PURE__*/_jsxs(Card,{className:\"shadow-sm rounded\",children:[/*#__PURE__*/_jsxs(Card.Header,{className:\"bg-primary d-flex justify-content-between align-items-center text-white fw-semibold\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"Students List\"}),/*#__PURE__*/_jsxs(Button,{variant:\"light\",className:\"fw-semibold\",onClick:handleSendInvitations,disabled:selectedStudents.length===0,\"aria-label\":\"Send Invitations\",children:[/*#__PURE__*/_jsx(PersonCheck,{className:\"me-1\"}),\"Send Invitations (\",selectedStudents.length,\")\"]})]}),/*#__PURE__*/_jsx(Card.Body,{className:\"p-0\",children:/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",style:{overflowX:'auto',maxHeight:'60vh',overflowY:'auto'},children:/*#__PURE__*/_jsxs(Table,{striped:true,hover:true,className:\"mb-0 align-middle\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"table-primary\",style:{position:'sticky',top:0,zIndex:1},children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{style:{width:'3rem'},children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",id:\"selectAllStudents\",onChange:e=>handleSelectAll(e.target.checked),checked:filteredStudents.length>0&&selectedStudents.length===filteredStudents.length,\"aria-label\":\"Select all students\"})}),/*#__PURE__*/_jsx(\"th\",{className:\"text-break\",children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{className:\"text-break\",children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{className:\"text-break\",children:\"Phone\"}),/*#__PURE__*/_jsx(\"th\",{className:\"text-break\",children:\"Resume\"}),/*#__PURE__*/_jsx(\"th\",{style:{width:'100px'},children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredStudents.length===0?/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:6,className:\"text-center py-4 text-muted\",children:\"No students found\"})}):filteredStudents.map(student=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",id:\"student-\".concat(student.Id),checked:selectedStudents.includes(student.Id),onChange:e=>handleStudentSelect(student.Id,e.target.checked),\"aria-label\":\"Select student \".concat(student.Name)})}),/*#__PURE__*/_jsx(\"td\",{children:student.Name}),/*#__PURE__*/_jsx(\"td\",{children:student.Email}),/*#__PURE__*/_jsx(\"td\",{children:student.Phone||'-'}),/*#__PURE__*/_jsx(\"td\",{children:student.ResumeLink?/*#__PURE__*/_jsx(\"a\",{href:student.ResumeLink,target:\"_blank\",rel:\"noopener noreferrer\",className:\"text-decoration-none\",\"aria-label\":\"View resume of \".concat(student.Name),children:\"View Resume\"}):'-'}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Button,{variant:\"danger\",size:\"sm\",onClick:async()=>{if(window.confirm('Are you sure you want to delete this student?')){try{await studentService.deleteStudent(student.Id);toast.success('Student deleted successfully');loadData();}catch(error){var _error$response,_error$response$data;const backendError=(_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error;toast.error(backendError||'Failed to delete student');}}},\"aria-label\":\"Delete student \".concat(student.Name),children:/*#__PURE__*/_jsx(Trash,{})})})]},student.Id))})]})})})]})})})]}),/*#__PURE__*/_jsx(Tab,{eventKey:\"slots\",title:\"Interview Slots\",tabClassName:\"fs-6 fw-semibold p-2\",children:/*#__PURE__*/_jsxs(Row,{className:\"g-4\",children:[/*#__PURE__*/_jsx(Col,{xs:12,md:4,children:/*#__PURE__*/_jsx(SlotCreator,{onSlotCreated:handleSlotCreated})}),/*#__PURE__*/_jsx(Col,{xs:12,md:8,children:/*#__PURE__*/_jsxs(Card,{className:\"shadow-sm rounded\",children:[/*#__PURE__*/_jsxs(Card.Header,{className:\"d-flex justify-content-between align-items-center bg-success text-white fw-semibold\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"Available Slots\"}),/*#__PURE__*/_jsxs(InputGroup,{style:{maxWidth:'300px'},className:\"ms-auto\",children:[/*#__PURE__*/_jsx(InputGroup.Text,{children:/*#__PURE__*/_jsx(Search,{})}),/*#__PURE__*/_jsx(FormControl,{placeholder:\"Search slots\",\"aria-label\":\"Search slots\",value:slotSearchTerm,onChange:e=>setSlotSearchTerm(e.target.value)})]})]}),/*#__PURE__*/_jsx(Card.Body,{className:\"p-0\",children:/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",style:{maxHeight:'60vh',overflowY:'auto',overflowX:'auto'},children:/*#__PURE__*/_jsxs(Table,{striped:true,hover:true,className:\"mb-0 align-middle\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"table-success bg-success text-white\",style:{position:'sticky',top:0,zIndex:1},children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Date & Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Booked By\"}),/*#__PURE__*/_jsx(\"th\",{style:{width:'100px'},children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredSlots.length===0?/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:4,className:\"text-center py-4 text-muted\",children:\"No slots found\"})}):filteredSlots.map(slot=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:new Date(slot.SlotDateTime).toLocaleString()}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Badge,{bg:slot.IsBooked?'danger':'success',className:\"py-1\",children:slot.IsBooked?'Booked':'Available'})}),/*#__PURE__*/_jsx(\"td\",{children:slot.IsBooked?slot.StudentName:'-'}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Button,{variant:\"danger\",size:\"sm\",onClick:async()=>{if(window.confirm('Are you sure you want to delete this slot?')){try{await slotService.deleteSlot(slot.Id);toast.success('Slot deleted');loadData();}catch(_unused2){toast.error('Failed to delete slot');}}},\"aria-label\":\"Delete slot on \".concat(new Date(slot.SlotDateTime).toLocaleString()),children:/*#__PURE__*/_jsx(Trash,{})})})]},slot.Id))})]})})})]})})]})}),/*#__PURE__*/_jsx(Tab,{eventKey:\"interviews\",title:\"Scheduled Interviews\",tabClassName:\"fs-6 fw-semibold p-2\",children:/*#__PURE__*/_jsx(InterviewList,{interviews:interviews})})]})]});};export default AdminDashboard;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Container","Row","Col","Tab","Tabs","Button","Card","Form","Alert","Badge","Table","InputGroup","FormControl","Trash","PersonCheck","Search","toast","StudentForm","ExcelUpload","SlotCreator","InterviewList","studentService","slotService","interviewService","jsx","_jsx","jsxs","_jsxs","AdminDashboard","students","setStudents","filteredStudents","setFilteredStudents","slots","setSlots","filteredSlots","setFilteredSlots","interviews","setInterviews","selectedStudents","setSelectedStudents","studentSearchTerm","setStudentSearchTerm","slotSearchTerm","setSlotSearchTerm","loadData","studentsData","slotsData","interviewsData","Promise","all","getStudents","getSlots","getInterviews","error","console","trim","lowerTerm","toLowerCase","filter","s","Name","includes","Email","Phone","slot","dateString","Date","SlotDateTime","toLocaleString","status","IsBooked","StudentName","handleStudentAdded","success","handleExcelUploaded","result","concat","successful","failed","handleSlotCreated","handleSendInvitations","length","warning","sendInvitations","_unused","handleSelectAll","checked","map","Id","handleStudentSelect","id","prev","sid","fluid","className","children","defaultActiveKey","fill","justify","eventKey","title","tabClassName","xs","md","onStudentAdded","onExcelUploaded","Text","type","placeholder","value","onChange","e","target","Header","variant","onClick","disabled","Body","style","overflowX","maxHeight","overflowY","striped","hover","position","top","zIndex","width","Check","colSpan","student","ResumeLink","href","rel","size","window","confirm","deleteStudent","_error$response","_error$response$data","backendError","response","data","onSlotCreated","maxWidth","bg","deleteSlot","_unused2"],"sources":["E:/Downloads/interview-scheduler/interview-scheduler-frontend/src/components/admin/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Tab,\r\n  Tabs,\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Alert,\r\n  Badge,\r\n  Table,\r\n  InputGroup,\r\n  FormControl,\r\n} from 'react-bootstrap';\r\nimport { Trash, PersonCheck, Search } from 'react-bootstrap-icons';\r\nimport { toast } from 'react-toastify';\r\nimport StudentForm from './StudentForm';\r\nimport ExcelUpload from './ExcelUpload';\r\nimport SlotCreator from './SlotCreator';\r\nimport InterviewList from './InterviewList';\r\nimport studentService from '../../services/studentService';\r\nimport slotService from '../../services/slotService';\r\nimport interviewService from '../../services/interviewService';\r\n\r\nconst AdminDashboard = () => {\r\n  const [students, setStudents] = useState([]);\r\n  const [filteredStudents, setFilteredStudents] = useState([]);\r\n  const [slots, setSlots] = useState([]);\r\n  const [filteredSlots, setFilteredSlots] = useState([]);\r\n  const [interviews, setInterviews] = useState([]);\r\n  const [selectedStudents, setSelectedStudents] = useState([]);\r\n  const [studentSearchTerm, setStudentSearchTerm] = useState('');\r\n  const [slotSearchTerm, setSlotSearchTerm] = useState('');\r\n\r\n  // Load data function, memoized to prevent re-creation\r\n  const loadData = useCallback(async () => {\r\n    try {\r\n      const [studentsData, slotsData, interviewsData] = await Promise.all([\r\n        studentService.getStudents(),\r\n        slotService.getSlots(),\r\n        interviewService.getInterviews(),\r\n      ]);\r\n      setStudents(studentsData);\r\n      setSlots(slotsData);\r\n      setInterviews(interviewsData);\r\n      setFilteredStudents(studentsData);\r\n      setFilteredSlots(slotsData);\r\n    } catch (error) {\r\n      toast.error('Failed to load data');\r\n      console.error('Load data error:', error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [loadData]);\r\n\r\n  // Filter students based on search term\r\n  useEffect(() => {\r\n    if (!studentSearchTerm.trim()) {\r\n      setFilteredStudents(students);\r\n    } else {\r\n      const lowerTerm = studentSearchTerm.toLowerCase();\r\n      setFilteredStudents(\r\n        students.filter(\r\n          (s) =>\r\n            (s.Name && s.Name.toLowerCase().includes(lowerTerm)) ||\r\n            (s.Email && s.Email.toLowerCase().includes(lowerTerm)) ||\r\n            (s.Phone && s.Phone.toLowerCase().includes(lowerTerm))\r\n        )\r\n      );\r\n    }\r\n  }, [studentSearchTerm, students]);\r\n\r\n  // Filter slots based on search term\r\n  useEffect(() => {\r\n    if (!slotSearchTerm.trim()) {\r\n      setFilteredSlots(slots);\r\n    } else {\r\n      const lowerTerm = slotSearchTerm.toLowerCase();\r\n      setFilteredSlots(\r\n        slots.filter((slot) => {\r\n          const dateString = new Date(slot.SlotDateTime).toLocaleString().toLowerCase();\r\n          const status = slot.IsBooked ? 'booked' : 'available';\r\n          return (\r\n            dateString.includes(lowerTerm) ||\r\n            (slot.StudentName && slot.StudentName.toLowerCase().includes(lowerTerm)) ||\r\n            status.includes(lowerTerm)\r\n          );\r\n        })\r\n      );\r\n    }\r\n  }, [slotSearchTerm, slots]);\r\n\r\n  // Handler functions keeping minimal re-renders using useCallback\r\n  const handleStudentAdded = useCallback(() => {\r\n    loadData();\r\n    toast.success('Student added successfully');\r\n  }, [loadData]);\r\n\r\n  const handleExcelUploaded = useCallback(\r\n    (result) => {\r\n      loadData();\r\n      toast.success(`Excel processed: ${result.successful} successful, ${result.failed} failed`);\r\n    },\r\n    [loadData]\r\n  );\r\n\r\n  const handleSlotCreated = useCallback(() => {\r\n    loadData();\r\n    toast.success('Interview slot created successfully');\r\n  }, [loadData]);\r\n\r\n  const handleSendInvitations = async () => {\r\n    if (selectedStudents.length === 0) {\r\n      toast.warning('Please select students to send invitations');\r\n      return;\r\n    }\r\n    try {\r\n      await studentService.sendInvitations(selectedStudents);\r\n      toast.success('Invitations sent successfully');\r\n      setSelectedStudents([]);\r\n    } catch {\r\n      toast.error('Failed to send invitations');\r\n    }\r\n  };\r\n\r\n  const handleSelectAll = (checked) => {\r\n    if (checked) {\r\n      setSelectedStudents(filteredStudents.map((s) => s.Id));\r\n    } else {\r\n      setSelectedStudents([]);\r\n    }\r\n  };\r\n\r\n  const handleStudentSelect = (id, checked) => {\r\n    if (checked) {\r\n      setSelectedStudents((prev) => [...prev, id]);\r\n    } else {\r\n      setSelectedStudents((prev) => prev.filter((sid) => sid !== id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"py-4\">\r\n      <Row className=\"mb-4\">\r\n        <Col>\r\n          <h2 className=\"text-primary fw-bold\">Dashboard</h2>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Tabs\r\n        defaultActiveKey=\"students\"\r\n        className=\"mb-4 shadow-sm rounded\"\r\n        fill\r\n        justify\r\n        id=\"admin-dashboard-tabs\"\r\n      >\r\n        <Tab eventKey=\"students\" title=\"Student Management\" tabClassName=\"fs-6 fw-semibold p-2\">\r\n          <Row className=\"g-4\">\r\n            <Col xs={12} md={6}>\r\n              <StudentForm onStudentAdded={handleStudentAdded} />\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n              <ExcelUpload onExcelUploaded={handleExcelUploaded} />\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* Search input for students */}\r\n          <Row className=\"mt-4 mb-3\">\r\n            <Col xs={12} md={6}>\r\n              <InputGroup>\r\n                <InputGroup.Text id=\"search-icon\">\r\n                  <Search />\r\n                </InputGroup.Text>\r\n                <FormControl\r\n                  type=\"search\"\r\n                  placeholder=\"Search students by name, email, or phone\"\r\n                  aria-label=\"Search students\"\r\n                  aria-describedby=\"search-icon\"\r\n                  value={studentSearchTerm}\r\n                  onChange={(e) => setStudentSearchTerm(e.target.value)}\r\n                />\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs={12}>\r\n              <Card className=\"shadow-sm rounded\">\r\n                <Card.Header className=\"bg-primary d-flex justify-content-between align-items-center text-white fw-semibold\">\r\n                  <h5 className=\"mb-0\">Students List</h5>\r\n                  <Button\r\n                    variant=\"light\"\r\n                    className=\"fw-semibold\"\r\n                    onClick={handleSendInvitations}\r\n                    disabled={selectedStudents.length === 0}\r\n                    aria-label=\"Send Invitations\"\r\n                  >\r\n                    <PersonCheck className=\"me-1\" />\r\n                    Send Invitations ({selectedStudents.length})\r\n                  </Button>\r\n                </Card.Header>\r\n                <Card.Body className=\"p-0\">\r\n                  <div\r\n                    className=\"table-responsive\"\r\n                    style={{ overflowX: 'auto', maxHeight: '60vh', overflowY: 'auto' }}\r\n                  >\r\n                    <Table striped hover className=\"mb-0 align-middle\">\r\n                      <thead\r\n                        className=\"table-primary\"\r\n                        style={{ position: 'sticky', top: 0, zIndex: 1 }}\r\n                      >\r\n                        <tr>\r\n                          <th style={{ width: '3rem' }}>\r\n                            <Form.Check\r\n                              type=\"checkbox\"\r\n                              id=\"selectAllStudents\"\r\n                              onChange={(e) => handleSelectAll(e.target.checked)}\r\n                              checked={\r\n                                filteredStudents.length > 0 &&\r\n                                selectedStudents.length === filteredStudents.length\r\n                              }\r\n                              aria-label=\"Select all students\"\r\n                            />\r\n                          </th>\r\n                          <th className=\"text-break\">Name</th>\r\n                          <th className=\"text-break\">Email</th>\r\n                          <th className=\"text-break\">Phone</th>\r\n                          <th className=\"text-break\">Resume</th>\r\n                          <th style={{ width: '100px' }}>Actions</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {filteredStudents.length === 0 ? (\r\n                          <tr>\r\n                            <td colSpan={6} className=\"text-center py-4 text-muted\">\r\n                              No students found\r\n                            </td>\r\n                          </tr>\r\n                        ) : (\r\n                          filteredStudents.map((student) => (\r\n                            <tr key={student.Id}>\r\n                              <td>\r\n                                <Form.Check\r\n                                  type=\"checkbox\"\r\n                                  id={`student-${student.Id}`}\r\n                                  checked={selectedStudents.includes(student.Id)}\r\n                                  onChange={(e) =>\r\n                                    handleStudentSelect(student.Id, e.target.checked)\r\n                                  }\r\n                                  aria-label={`Select student ${student.Name}`}\r\n                                />\r\n                              </td>\r\n                              <td>{student.Name}</td>\r\n                              <td>{student.Email}</td>\r\n                              <td>{student.Phone || '-'}</td>\r\n                              <td>\r\n                                {student.ResumeLink ? (\r\n                                  <a\r\n                                    href={student.ResumeLink}\r\n                                    target=\"_blank\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                    className=\"text-decoration-none\"\r\n                                    aria-label={`View resume of ${student.Name}`}\r\n                                  >\r\n                                    View Resume\r\n                                  </a>\r\n                                ) : (\r\n                                  '-'\r\n                                )}\r\n                              </td>\r\n                              <td>\r\n                                <Button\r\n                                  variant=\"danger\"\r\n                                  size=\"sm\"\r\n                                  onClick={async () => {\r\n                                    if (\r\n                                      window.confirm(\r\n                                        'Are you sure you want to delete this student?'\r\n                                      )\r\n                                    ) {\r\n                                      try {\r\n                                        await studentService.deleteStudent(student.Id);\r\n                                        toast.success('Student deleted successfully');\r\n                                        loadData();\r\n                                      } catch (error) {\r\n                                        const backendError = error.response?.data?.error;\r\n                                        toast.error(backendError || 'Failed to delete student');\r\n                                      }\r\n                                    }\r\n                                  }}\r\n                                  aria-label={`Delete student ${student.Name}`}\r\n                                >\r\n                                  <Trash />\r\n                                </Button>\r\n                              </td>\r\n                            </tr>\r\n                          ))\r\n                        )}\r\n                      </tbody>\r\n                    </Table>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Tab>\r\n\r\n        <Tab eventKey=\"slots\" title=\"Interview Slots\" tabClassName=\"fs-6 fw-semibold p-2\">\r\n          <Row className=\"g-4\">\r\n            <Col xs={12} md={4}>\r\n              <SlotCreator onSlotCreated={handleSlotCreated} />\r\n            </Col>\r\n            <Col xs={12} md={8}>\r\n              <Card className=\"shadow-sm rounded\">\r\n                <Card.Header className=\"d-flex justify-content-between align-items-center bg-success text-white fw-semibold\">\r\n                  <h5 className=\"mb-0\">Available Slots</h5>\r\n                  {/* Search input for slots */}\r\n                  <InputGroup style={{ maxWidth: '300px' }} className=\"ms-auto\">\r\n                    <InputGroup.Text>\r\n                      <Search />\r\n                    </InputGroup.Text>\r\n                    <FormControl\r\n                      placeholder=\"Search slots\"\r\n                      aria-label=\"Search slots\"\r\n                      value={slotSearchTerm}\r\n                      onChange={(e) => setSlotSearchTerm(e.target.value)}\r\n                    />\r\n                  </InputGroup>\r\n                </Card.Header>\r\n                <Card.Body className=\"p-0\">\r\n                  <div className=\"table-responsive\" style={{ maxHeight: '60vh', overflowY: 'auto', overflowX: 'auto' }}>\r\n                    <Table striped hover className=\"mb-0 align-middle\">\r\n                      <thead\r\n                        className=\"table-success bg-success text-white\"\r\n                        style={{ position: 'sticky', top: 0, zIndex: 1 }}\r\n                      >\r\n                        <tr>\r\n                          <th>Date &amp; Time</th>\r\n                          <th>Status</th>\r\n                          <th>Booked By</th>\r\n                          <th style={{ width: '100px' }}>Actions</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {filteredSlots.length === 0 ? (\r\n                          <tr>\r\n                            <td colSpan={4} className=\"text-center py-4 text-muted\">\r\n                              No slots found\r\n                            </td>\r\n                          </tr>\r\n                        ) : (\r\n                          filteredSlots.map((slot) => (\r\n                            <tr key={slot.Id}>\r\n                              <td>{new Date(slot.SlotDateTime).toLocaleString()}</td>\r\n                              <td>\r\n                                <Badge\r\n                                  bg={slot.IsBooked ? 'danger' : 'success'}\r\n                                  className=\"py-1\"\r\n                                >\r\n                                  {slot.IsBooked ? 'Booked' : 'Available'}\r\n                                </Badge>\r\n                              </td>\r\n                              <td>{slot.IsBooked ? slot.StudentName : '-'}</td>\r\n                              <td>\r\n                                <Button\r\n                                  variant=\"danger\"\r\n                                  size=\"sm\"\r\n                                  onClick={async () => {\r\n                                    if (\r\n                                      window.confirm('Are you sure you want to delete this slot?')\r\n                                    ) {\r\n                                      try {\r\n                                        await slotService.deleteSlot(slot.Id);\r\n                                        toast.success('Slot deleted');\r\n                                        loadData();\r\n                                      } catch {\r\n                                        toast.error('Failed to delete slot');\r\n                                      }\r\n                                    }\r\n                                  }}\r\n                                  aria-label={`Delete slot on ${new Date(\r\n                                    slot.SlotDateTime\r\n                                  ).toLocaleString()}`}\r\n                                >\r\n                                  <Trash />\r\n                                </Button>\r\n                              </td>\r\n                            </tr>\r\n                          ))\r\n                        )}\r\n                      </tbody>\r\n                    </Table>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Tab>\r\n\r\n        <Tab eventKey=\"interviews\" title=\"Scheduled Interviews\" tabClassName=\"fs-6 fw-semibold p-2\">\r\n          <InterviewList interviews={interviews} />\r\n        </Tab>\r\n      </Tabs>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CAC/D,OACEC,SAAS,CACTC,GAAG,CACHC,GAAG,CACHC,GAAG,CACHC,IAAI,CACJC,MAAM,CACNC,IAAI,CACJC,IAAI,CACJC,KAAK,CACLC,KAAK,CACLC,KAAK,CACLC,UAAU,CACVC,WAAW,KACN,iBAAiB,CACxB,OAASC,KAAK,CAAEC,WAAW,CAAEC,MAAM,KAAQ,uBAAuB,CAClE,OAASC,KAAK,KAAQ,gBAAgB,CACtC,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAC3C,MAAO,CAAAC,cAAc,KAAM,+BAA+B,CAC1D,MAAO,CAAAC,WAAW,KAAM,4BAA4B,CACpD,MAAO,CAAAC,gBAAgB,KAAM,iCAAiC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/D,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGjC,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACkC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGnC,QAAQ,CAAC,EAAE,CAAC,CAC5D,KAAM,CAACoC,KAAK,CAAEC,QAAQ,CAAC,CAAGrC,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACsC,aAAa,CAAEC,gBAAgB,CAAC,CAAGvC,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACwC,UAAU,CAAEC,aAAa,CAAC,CAAGzC,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAC0C,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG3C,QAAQ,CAAC,EAAE,CAAC,CAC5D,KAAM,CAAC4C,iBAAiB,CAAEC,oBAAoB,CAAC,CAAG7C,QAAQ,CAAC,EAAE,CAAC,CAC9D,KAAM,CAAC8C,cAAc,CAAEC,iBAAiB,CAAC,CAAG/C,QAAQ,CAAC,EAAE,CAAC,CAExD;AACA,KAAM,CAAAgD,QAAQ,CAAG9C,WAAW,CAAC,SAAY,CACvC,GAAI,CACF,KAAM,CAAC+C,YAAY,CAAEC,SAAS,CAAEC,cAAc,CAAC,CAAG,KAAM,CAAAC,OAAO,CAACC,GAAG,CAAC,CAClE7B,cAAc,CAAC8B,WAAW,CAAC,CAAC,CAC5B7B,WAAW,CAAC8B,QAAQ,CAAC,CAAC,CACtB7B,gBAAgB,CAAC8B,aAAa,CAAC,CAAC,CACjC,CAAC,CACFvB,WAAW,CAACgB,YAAY,CAAC,CACzBZ,QAAQ,CAACa,SAAS,CAAC,CACnBT,aAAa,CAACU,cAAc,CAAC,CAC7BhB,mBAAmB,CAACc,YAAY,CAAC,CACjCV,gBAAgB,CAACW,SAAS,CAAC,CAC7B,CAAE,MAAOO,KAAK,CAAE,CACdtC,KAAK,CAACsC,KAAK,CAAC,qBAAqB,CAAC,CAClCC,OAAO,CAACD,KAAK,CAAC,kBAAkB,CAAEA,KAAK,CAAC,CAC1C,CACF,CAAC,CAAE,EAAE,CAAC,CAENxD,SAAS,CAAC,IAAM,CACd+C,QAAQ,CAAC,CAAC,CACZ,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAEd;AACA/C,SAAS,CAAC,IAAM,CACd,GAAI,CAAC2C,iBAAiB,CAACe,IAAI,CAAC,CAAC,CAAE,CAC7BxB,mBAAmB,CAACH,QAAQ,CAAC,CAC/B,CAAC,IAAM,CACL,KAAM,CAAA4B,SAAS,CAAGhB,iBAAiB,CAACiB,WAAW,CAAC,CAAC,CACjD1B,mBAAmB,CACjBH,QAAQ,CAAC8B,MAAM,CACZC,CAAC,EACCA,CAAC,CAACC,IAAI,EAAID,CAAC,CAACC,IAAI,CAACH,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,SAAS,CAAC,EAClDG,CAAC,CAACG,KAAK,EAAIH,CAAC,CAACG,KAAK,CAACL,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,SAAS,CAAE,EACrDG,CAAC,CAACI,KAAK,EAAIJ,CAAC,CAACI,KAAK,CAACN,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,SAAS,CACxD,CACF,CAAC,CACH,CACF,CAAC,CAAE,CAAChB,iBAAiB,CAAEZ,QAAQ,CAAC,CAAC,CAEjC;AACA/B,SAAS,CAAC,IAAM,CACd,GAAI,CAAC6C,cAAc,CAACa,IAAI,CAAC,CAAC,CAAE,CAC1BpB,gBAAgB,CAACH,KAAK,CAAC,CACzB,CAAC,IAAM,CACL,KAAM,CAAAwB,SAAS,CAAGd,cAAc,CAACe,WAAW,CAAC,CAAC,CAC9CtB,gBAAgB,CACdH,KAAK,CAAC0B,MAAM,CAAEM,IAAI,EAAK,CACrB,KAAM,CAAAC,UAAU,CAAG,GAAI,CAAAC,IAAI,CAACF,IAAI,CAACG,YAAY,CAAC,CAACC,cAAc,CAAC,CAAC,CAACX,WAAW,CAAC,CAAC,CAC7E,KAAM,CAAAY,MAAM,CAAGL,IAAI,CAACM,QAAQ,CAAG,QAAQ,CAAG,WAAW,CACrD,MACE,CAAAL,UAAU,CAACJ,QAAQ,CAACL,SAAS,CAAC,EAC7BQ,IAAI,CAACO,WAAW,EAAIP,IAAI,CAACO,WAAW,CAACd,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,SAAS,CAAE,EACxEa,MAAM,CAACR,QAAQ,CAACL,SAAS,CAAC,CAE9B,CAAC,CACH,CAAC,CACH,CACF,CAAC,CAAE,CAACd,cAAc,CAAEV,KAAK,CAAC,CAAC,CAE3B;AACA,KAAM,CAAAwC,kBAAkB,CAAG1E,WAAW,CAAC,IAAM,CAC3C8C,QAAQ,CAAC,CAAC,CACV7B,KAAK,CAAC0D,OAAO,CAAC,4BAA4B,CAAC,CAC7C,CAAC,CAAE,CAAC7B,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAA8B,mBAAmB,CAAG5E,WAAW,CACpC6E,MAAM,EAAK,CACV/B,QAAQ,CAAC,CAAC,CACV7B,KAAK,CAAC0D,OAAO,qBAAAG,MAAA,CAAqBD,MAAM,CAACE,UAAU,kBAAAD,MAAA,CAAgBD,MAAM,CAACG,MAAM,WAAS,CAAC,CAC5F,CAAC,CACD,CAAClC,QAAQ,CACX,CAAC,CAED,KAAM,CAAAmC,iBAAiB,CAAGjF,WAAW,CAAC,IAAM,CAC1C8C,QAAQ,CAAC,CAAC,CACV7B,KAAK,CAAC0D,OAAO,CAAC,qCAAqC,CAAC,CACtD,CAAC,CAAE,CAAC7B,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAoC,qBAAqB,CAAG,KAAAA,CAAA,GAAY,CACxC,GAAI1C,gBAAgB,CAAC2C,MAAM,GAAK,CAAC,CAAE,CACjClE,KAAK,CAACmE,OAAO,CAAC,4CAA4C,CAAC,CAC3D,OACF,CACA,GAAI,CACF,KAAM,CAAA9D,cAAc,CAAC+D,eAAe,CAAC7C,gBAAgB,CAAC,CACtDvB,KAAK,CAAC0D,OAAO,CAAC,+BAA+B,CAAC,CAC9ClC,mBAAmB,CAAC,EAAE,CAAC,CACzB,CAAE,MAAA6C,OAAA,CAAM,CACNrE,KAAK,CAACsC,KAAK,CAAC,4BAA4B,CAAC,CAC3C,CACF,CAAC,CAED,KAAM,CAAAgC,eAAe,CAAIC,OAAO,EAAK,CACnC,GAAIA,OAAO,CAAE,CACX/C,mBAAmB,CAACT,gBAAgB,CAACyD,GAAG,CAAE5B,CAAC,EAAKA,CAAC,CAAC6B,EAAE,CAAC,CAAC,CACxD,CAAC,IAAM,CACLjD,mBAAmB,CAAC,EAAE,CAAC,CACzB,CACF,CAAC,CAED,KAAM,CAAAkD,mBAAmB,CAAGA,CAACC,EAAE,CAAEJ,OAAO,GAAK,CAC3C,GAAIA,OAAO,CAAE,CACX/C,mBAAmB,CAAEoD,IAAI,EAAK,CAAC,GAAGA,IAAI,CAAED,EAAE,CAAC,CAAC,CAC9C,CAAC,IAAM,CACLnD,mBAAmB,CAAEoD,IAAI,EAAKA,IAAI,CAACjC,MAAM,CAAEkC,GAAG,EAAKA,GAAG,GAAKF,EAAE,CAAC,CAAC,CACjE,CACF,CAAC,CAED,mBACEhE,KAAA,CAAC3B,SAAS,EAAC8F,KAAK,MAACC,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC/BvE,IAAA,CAACxB,GAAG,EAAC8F,SAAS,CAAC,MAAM,CAAAC,QAAA,cACnBvE,IAAA,CAACvB,GAAG,EAAA8F,QAAA,cACFvE,IAAA,OAAIsE,SAAS,CAAC,sBAAsB,CAAAC,QAAA,CAAC,WAAS,CAAI,CAAC,CAChD,CAAC,CACH,CAAC,cAENrE,KAAA,CAACvB,IAAI,EACH6F,gBAAgB,CAAC,UAAU,CAC3BF,SAAS,CAAC,wBAAwB,CAClCG,IAAI,MACJC,OAAO,MACPR,EAAE,CAAC,sBAAsB,CAAAK,QAAA,eAEzBrE,KAAA,CAACxB,GAAG,EAACiG,QAAQ,CAAC,UAAU,CAACC,KAAK,CAAC,oBAAoB,CAACC,YAAY,CAAC,sBAAsB,CAAAN,QAAA,eACrFrE,KAAA,CAAC1B,GAAG,EAAC8F,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBvE,IAAA,CAACvB,GAAG,EAACqG,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAR,QAAA,cACjBvE,IAAA,CAACR,WAAW,EAACwF,cAAc,CAAEhC,kBAAmB,CAAE,CAAC,CAChD,CAAC,cACNhD,IAAA,CAACvB,GAAG,EAACqG,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAR,QAAA,cACjBvE,IAAA,CAACP,WAAW,EAACwF,eAAe,CAAE/B,mBAAoB,CAAE,CAAC,CAClD,CAAC,EACH,CAAC,cAGNlD,IAAA,CAACxB,GAAG,EAAC8F,SAAS,CAAC,WAAW,CAAAC,QAAA,cACxBvE,IAAA,CAACvB,GAAG,EAACqG,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAR,QAAA,cACjBrE,KAAA,CAAChB,UAAU,EAAAqF,QAAA,eACTvE,IAAA,CAACd,UAAU,CAACgG,IAAI,EAAChB,EAAE,CAAC,aAAa,CAAAK,QAAA,cAC/BvE,IAAA,CAACV,MAAM,GAAE,CAAC,CACK,CAAC,cAClBU,IAAA,CAACb,WAAW,EACVgG,IAAI,CAAC,QAAQ,CACbC,WAAW,CAAC,0CAA0C,CACtD,aAAW,iBAAiB,CAC5B,mBAAiB,aAAa,CAC9BC,KAAK,CAAErE,iBAAkB,CACzBsE,QAAQ,CAAGC,CAAC,EAAKtE,oBAAoB,CAACsE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACvD,CAAC,EACQ,CAAC,CACV,CAAC,CACH,CAAC,cAENrF,IAAA,CAACxB,GAAG,EAAA+F,QAAA,cACFvE,IAAA,CAACvB,GAAG,EAACqG,EAAE,CAAE,EAAG,CAAAP,QAAA,cACVrE,KAAA,CAACrB,IAAI,EAACyF,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eACjCrE,KAAA,CAACrB,IAAI,CAAC4G,MAAM,EAACnB,SAAS,CAAC,qFAAqF,CAAAC,QAAA,eAC1GvE,IAAA,OAAIsE,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAC,eAAa,CAAI,CAAC,cACvCrE,KAAA,CAACtB,MAAM,EACL8G,OAAO,CAAC,OAAO,CACfpB,SAAS,CAAC,aAAa,CACvBqB,OAAO,CAAEnC,qBAAsB,CAC/BoC,QAAQ,CAAE9E,gBAAgB,CAAC2C,MAAM,GAAK,CAAE,CACxC,aAAW,kBAAkB,CAAAc,QAAA,eAE7BvE,IAAA,CAACX,WAAW,EAACiF,SAAS,CAAC,MAAM,CAAE,CAAC,qBACd,CAACxD,gBAAgB,CAAC2C,MAAM,CAAC,GAC7C,EAAQ,CAAC,EACE,CAAC,cACdzD,IAAA,CAACnB,IAAI,CAACgH,IAAI,EAACvB,SAAS,CAAC,KAAK,CAAAC,QAAA,cACxBvE,IAAA,QACEsE,SAAS,CAAC,kBAAkB,CAC5BwB,KAAK,CAAE,CAAEC,SAAS,CAAE,MAAM,CAAEC,SAAS,CAAE,MAAM,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAA1B,QAAA,cAEnErE,KAAA,CAACjB,KAAK,EAACiH,OAAO,MAACC,KAAK,MAAC7B,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChDvE,IAAA,UACEsE,SAAS,CAAC,eAAe,CACzBwB,KAAK,CAAE,CAAEM,QAAQ,CAAE,QAAQ,CAAEC,GAAG,CAAE,CAAC,CAAEC,MAAM,CAAE,CAAE,CAAE,CAAA/B,QAAA,cAEjDrE,KAAA,OAAAqE,QAAA,eACEvE,IAAA,OAAI8F,KAAK,CAAE,CAAES,KAAK,CAAE,MAAO,CAAE,CAAAhC,QAAA,cAC3BvE,IAAA,CAAClB,IAAI,CAAC0H,KAAK,EACTrB,IAAI,CAAC,UAAU,CACfjB,EAAE,CAAC,mBAAmB,CACtBoB,QAAQ,CAAGC,CAAC,EAAK1B,eAAe,CAAC0B,CAAC,CAACC,MAAM,CAAC1B,OAAO,CAAE,CACnDA,OAAO,CACLxD,gBAAgB,CAACmD,MAAM,CAAG,CAAC,EAC3B3C,gBAAgB,CAAC2C,MAAM,GAAKnD,gBAAgB,CAACmD,MAC9C,CACD,aAAW,qBAAqB,CACjC,CAAC,CACA,CAAC,cACLzD,IAAA,OAAIsE,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,MAAI,CAAI,CAAC,cACpCvE,IAAA,OAAIsE,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,OAAK,CAAI,CAAC,cACrCvE,IAAA,OAAIsE,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,OAAK,CAAI,CAAC,cACrCvE,IAAA,OAAIsE,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,QAAM,CAAI,CAAC,cACtCvE,IAAA,OAAI8F,KAAK,CAAE,CAAES,KAAK,CAAE,OAAQ,CAAE,CAAAhC,QAAA,CAAC,SAAO,CAAI,CAAC,EACzC,CAAC,CACA,CAAC,cACRvE,IAAA,UAAAuE,QAAA,CACGjE,gBAAgB,CAACmD,MAAM,GAAK,CAAC,cAC5BzD,IAAA,OAAAuE,QAAA,cACEvE,IAAA,OAAIyG,OAAO,CAAE,CAAE,CAACnC,SAAS,CAAC,6BAA6B,CAAAC,QAAA,CAAC,mBAExD,CAAI,CAAC,CACH,CAAC,CAELjE,gBAAgB,CAACyD,GAAG,CAAE2C,OAAO,eAC3BxG,KAAA,OAAAqE,QAAA,eACEvE,IAAA,OAAAuE,QAAA,cACEvE,IAAA,CAAClB,IAAI,CAAC0H,KAAK,EACTrB,IAAI,CAAC,UAAU,CACfjB,EAAE,YAAAd,MAAA,CAAasD,OAAO,CAAC1C,EAAE,CAAG,CAC5BF,OAAO,CAAEhD,gBAAgB,CAACuB,QAAQ,CAACqE,OAAO,CAAC1C,EAAE,CAAE,CAC/CsB,QAAQ,CAAGC,CAAC,EACVtB,mBAAmB,CAACyC,OAAO,CAAC1C,EAAE,CAAEuB,CAAC,CAACC,MAAM,CAAC1B,OAAO,CACjD,CACD,+BAAAV,MAAA,CAA8BsD,OAAO,CAACtE,IAAI,CAAG,CAC9C,CAAC,CACA,CAAC,cACLpC,IAAA,OAAAuE,QAAA,CAAKmC,OAAO,CAACtE,IAAI,CAAK,CAAC,cACvBpC,IAAA,OAAAuE,QAAA,CAAKmC,OAAO,CAACpE,KAAK,CAAK,CAAC,cACxBtC,IAAA,OAAAuE,QAAA,CAAKmC,OAAO,CAACnE,KAAK,EAAI,GAAG,CAAK,CAAC,cAC/BvC,IAAA,OAAAuE,QAAA,CACGmC,OAAO,CAACC,UAAU,cACjB3G,IAAA,MACE4G,IAAI,CAAEF,OAAO,CAACC,UAAW,CACzBnB,MAAM,CAAC,QAAQ,CACfqB,GAAG,CAAC,qBAAqB,CACzBvC,SAAS,CAAC,sBAAsB,CAChC,+BAAAlB,MAAA,CAA8BsD,OAAO,CAACtE,IAAI,CAAG,CAAAmC,QAAA,CAC9C,aAED,CAAG,CAAC,CAEJ,GACD,CACC,CAAC,cACLvE,IAAA,OAAAuE,QAAA,cACEvE,IAAA,CAACpB,MAAM,EACL8G,OAAO,CAAC,QAAQ,CAChBoB,IAAI,CAAC,IAAI,CACTnB,OAAO,CAAE,KAAAA,CAAA,GAAY,CACnB,GACEoB,MAAM,CAACC,OAAO,CACZ,+CACF,CAAC,CACD,CACA,GAAI,CACF,KAAM,CAAApH,cAAc,CAACqH,aAAa,CAACP,OAAO,CAAC1C,EAAE,CAAC,CAC9CzE,KAAK,CAAC0D,OAAO,CAAC,8BAA8B,CAAC,CAC7C7B,QAAQ,CAAC,CAAC,CACZ,CAAE,MAAOS,KAAK,CAAE,KAAAqF,eAAA,CAAAC,oBAAA,CACd,KAAM,CAAAC,YAAY,EAAAF,eAAA,CAAGrF,KAAK,CAACwF,QAAQ,UAAAH,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBI,IAAI,UAAAH,oBAAA,iBAApBA,oBAAA,CAAsBtF,KAAK,CAChDtC,KAAK,CAACsC,KAAK,CAACuF,YAAY,EAAI,0BAA0B,CAAC,CACzD,CACF,CACF,CAAE,CACF,+BAAAhE,MAAA,CAA8BsD,OAAO,CAACtE,IAAI,CAAG,CAAAmC,QAAA,cAE7CvE,IAAA,CAACZ,KAAK,GAAE,CAAC,CACH,CAAC,CACP,CAAC,GAtDEsH,OAAO,CAAC1C,EAuDb,CACL,CACF,CACI,CAAC,EACH,CAAC,CACL,CAAC,CACG,CAAC,EACR,CAAC,CACJ,CAAC,CACH,CAAC,EACH,CAAC,cAENhE,IAAA,CAACtB,GAAG,EAACiG,QAAQ,CAAC,OAAO,CAACC,KAAK,CAAC,iBAAiB,CAACC,YAAY,CAAC,sBAAsB,CAAAN,QAAA,cAC/ErE,KAAA,CAAC1B,GAAG,EAAC8F,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBvE,IAAA,CAACvB,GAAG,EAACqG,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAR,QAAA,cACjBvE,IAAA,CAACN,WAAW,EAAC6H,aAAa,CAAEhE,iBAAkB,CAAE,CAAC,CAC9C,CAAC,cACNvD,IAAA,CAACvB,GAAG,EAACqG,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAR,QAAA,cACjBrE,KAAA,CAACrB,IAAI,EAACyF,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eACjCrE,KAAA,CAACrB,IAAI,CAAC4G,MAAM,EAACnB,SAAS,CAAC,qFAAqF,CAAAC,QAAA,eAC1GvE,IAAA,OAAIsE,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAC,iBAAe,CAAI,CAAC,cAEzCrE,KAAA,CAAChB,UAAU,EAAC4G,KAAK,CAAE,CAAE0B,QAAQ,CAAE,OAAQ,CAAE,CAAClD,SAAS,CAAC,SAAS,CAAAC,QAAA,eAC3DvE,IAAA,CAACd,UAAU,CAACgG,IAAI,EAAAX,QAAA,cACdvE,IAAA,CAACV,MAAM,GAAE,CAAC,CACK,CAAC,cAClBU,IAAA,CAACb,WAAW,EACViG,WAAW,CAAC,cAAc,CAC1B,aAAW,cAAc,CACzBC,KAAK,CAAEnE,cAAe,CACtBoE,QAAQ,CAAGC,CAAC,EAAKpE,iBAAiB,CAACoE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACpD,CAAC,EACQ,CAAC,EACF,CAAC,cACdrF,IAAA,CAACnB,IAAI,CAACgH,IAAI,EAACvB,SAAS,CAAC,KAAK,CAAAC,QAAA,cACxBvE,IAAA,QAAKsE,SAAS,CAAC,kBAAkB,CAACwB,KAAK,CAAE,CAAEE,SAAS,CAAE,MAAM,CAAEC,SAAS,CAAE,MAAM,CAAEF,SAAS,CAAE,MAAO,CAAE,CAAAxB,QAAA,cACnGrE,KAAA,CAACjB,KAAK,EAACiH,OAAO,MAACC,KAAK,MAAC7B,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChDvE,IAAA,UACEsE,SAAS,CAAC,qCAAqC,CAC/CwB,KAAK,CAAE,CAAEM,QAAQ,CAAE,QAAQ,CAAEC,GAAG,CAAE,CAAC,CAAEC,MAAM,CAAE,CAAE,CAAE,CAAA/B,QAAA,cAEjDrE,KAAA,OAAAqE,QAAA,eACEvE,IAAA,OAAAuE,QAAA,CAAI,aAAe,CAAI,CAAC,cACxBvE,IAAA,OAAAuE,QAAA,CAAI,QAAM,CAAI,CAAC,cACfvE,IAAA,OAAAuE,QAAA,CAAI,WAAS,CAAI,CAAC,cAClBvE,IAAA,OAAI8F,KAAK,CAAE,CAAES,KAAK,CAAE,OAAQ,CAAE,CAAAhC,QAAA,CAAC,SAAO,CAAI,CAAC,EACzC,CAAC,CACA,CAAC,cACRvE,IAAA,UAAAuE,QAAA,CACG7D,aAAa,CAAC+C,MAAM,GAAK,CAAC,cACzBzD,IAAA,OAAAuE,QAAA,cACEvE,IAAA,OAAIyG,OAAO,CAAE,CAAE,CAACnC,SAAS,CAAC,6BAA6B,CAAAC,QAAA,CAAC,gBAExD,CAAI,CAAC,CACH,CAAC,CAEL7D,aAAa,CAACqD,GAAG,CAAEvB,IAAI,eACrBtC,KAAA,OAAAqE,QAAA,eACEvE,IAAA,OAAAuE,QAAA,CAAK,GAAI,CAAA7B,IAAI,CAACF,IAAI,CAACG,YAAY,CAAC,CAACC,cAAc,CAAC,CAAC,CAAK,CAAC,cACvD5C,IAAA,OAAAuE,QAAA,cACEvE,IAAA,CAAChB,KAAK,EACJyI,EAAE,CAAEjF,IAAI,CAACM,QAAQ,CAAG,QAAQ,CAAG,SAAU,CACzCwB,SAAS,CAAC,MAAM,CAAAC,QAAA,CAEf/B,IAAI,CAACM,QAAQ,CAAG,QAAQ,CAAG,WAAW,CAClC,CAAC,CACN,CAAC,cACL9C,IAAA,OAAAuE,QAAA,CAAK/B,IAAI,CAACM,QAAQ,CAAGN,IAAI,CAACO,WAAW,CAAG,GAAG,CAAK,CAAC,cACjD/C,IAAA,OAAAuE,QAAA,cACEvE,IAAA,CAACpB,MAAM,EACL8G,OAAO,CAAC,QAAQ,CAChBoB,IAAI,CAAC,IAAI,CACTnB,OAAO,CAAE,KAAAA,CAAA,GAAY,CACnB,GACEoB,MAAM,CAACC,OAAO,CAAC,4CAA4C,CAAC,CAC5D,CACA,GAAI,CACF,KAAM,CAAAnH,WAAW,CAAC6H,UAAU,CAAClF,IAAI,CAACwB,EAAE,CAAC,CACrCzE,KAAK,CAAC0D,OAAO,CAAC,cAAc,CAAC,CAC7B7B,QAAQ,CAAC,CAAC,CACZ,CAAE,MAAAuG,QAAA,CAAM,CACNpI,KAAK,CAACsC,KAAK,CAAC,uBAAuB,CAAC,CACtC,CACF,CACF,CAAE,CACF,+BAAAuB,MAAA,CAA8B,GAAI,CAAAV,IAAI,CACpCF,IAAI,CAACG,YACP,CAAC,CAACC,cAAc,CAAC,CAAC,CAAG,CAAA2B,QAAA,cAErBvE,IAAA,CAACZ,KAAK,GAAE,CAAC,CACH,CAAC,CACP,CAAC,GAlCEoD,IAAI,CAACwB,EAmCV,CACL,CACF,CACI,CAAC,EACH,CAAC,CACL,CAAC,CACG,CAAC,EACR,CAAC,CACJ,CAAC,EACH,CAAC,CACH,CAAC,cAENhE,IAAA,CAACtB,GAAG,EAACiG,QAAQ,CAAC,YAAY,CAACC,KAAK,CAAC,sBAAsB,CAACC,YAAY,CAAC,sBAAsB,CAAAN,QAAA,cACzFvE,IAAA,CAACL,aAAa,EAACiB,UAAU,CAAEA,UAAW,CAAE,CAAC,CACtC,CAAC,EACF,CAAC,EACE,CAAC,CAEhB,CAAC,CAED,cAAe,CAAAT,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}