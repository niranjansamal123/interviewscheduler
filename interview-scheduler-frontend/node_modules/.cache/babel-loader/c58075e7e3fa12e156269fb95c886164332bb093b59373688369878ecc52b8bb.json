{"ast":null,"code":"var _jsxFileName = \"E:\\\\Downloads\\\\interview-scheduler\\\\interview-scheduler-frontend\\\\src\\\\components\\\\admin\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Tab, Tabs, Button, Card, Form, Alert, Badge, Table, InputGroup, FormControl, Spinner, Dropdown, Modal, ProgressBar } from 'react-bootstrap';\nimport { Trash, PersonCheck, Search, Download, Eye, FileEarmarkText, ExclamationTriangle, CheckCircle, XCircle, FileEarmarkZip, CloudDownload, CameraVideo, BoxArrowRight,\n// Added for logout button\nPersonCircle // Added for user icon\n} from 'react-bootstrap-icons';\nimport { toast } from 'react-toastify';\nimport StudentForm from './StudentForm';\nimport ExcelUpload from './ExcelUpload';\nimport SlotCreator from './SlotCreator';\nimport InterviewList from './InterviewList';\nimport studentService from '../../services/studentService';\nimport slotService from '../../services/slotService';\nimport interviewService from '../../services/interviewService';\nimport authService from '../../services/authService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [students, setStudents] = useState([]);\n  const [filteredStudents, setFilteredStudents] = useState([]);\n  const [slots, setSlots] = useState([]);\n  const [filteredSlots, setFilteredSlots] = useState([]);\n  const [interviews, setInterviews] = useState([]);\n  const [selectedStudents, setSelectedStudents] = useState([]);\n  const [studentSearchTerm, setStudentSearchTerm] = useState('');\n  const [slotSearchTerm, setSlotSearchTerm] = useState('');\n  const [downloadingResumes, setDownloadingResumes] = useState(new Set());\n  const [bulkDownloading, setBulkDownloading] = useState(false);\n  const [zipDownloading, setZipDownloading] = useState(false);\n  const [loadingData, setLoadingData] = useState(true);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [studentToDelete, setStudentToDelete] = useState(null);\n  const [downloadProgress, setDownloadProgress] = useState({\n    current: 0,\n    total: 0\n  });\n\n  // Get admin info\n  const adminInfo = authService.getAdminInfo();\n\n  // Handle logout\n  const handleLogout = async () => {\n    if (window.confirm('Are you sure you want to logout?')) {\n      try {\n        await authService.logout();\n        toast.success('Logged out successfully');\n        navigate('/login');\n      } catch (error) {\n        console.error('Logout error:', error);\n        authService.logout();\n        navigate('/login');\n      }\n    }\n  };\n\n  // FIXED: Load data function without navigate dependency\n  const loadData = useCallback(async () => {\n    try {\n      setLoadingData(true);\n      console.log('📊 Loading dashboard data...');\n      const [studentsData, slotsData, interviewsData] = await Promise.all([studentService.getStudents(), slotService.getSlots(), interviewService.getInterviews()]);\n      setStudents(studentsData);\n      setSlots(slotsData);\n      setInterviews(interviewsData);\n      setFilteredStudents(studentsData);\n      setFilteredSlots(slotsData);\n      console.log('✅ Data loaded successfully');\n    } catch (error) {\n      var _error$response;\n      console.error('❌ Load data error:', error);\n\n      // Check if it's an auth error\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        console.log('🔐 Authentication error, redirecting to login');\n        toast.error('Session expired. Please login again.');\n        authService.logout();\n        navigate('/login');\n      } else {\n        toast.error('Failed to load data. Please refresh the page.');\n      }\n    } finally {\n      setLoadingData(false);\n    }\n  }, []); // FIXED: Empty dependency array\n\n  // FIXED: Check authentication on mount without causing infinite loop\n  useEffect(() => {\n    const initializeDashboard = async () => {\n      console.log('🔍 Initializing dashboard...');\n      const isAuthenticated = authService.isAuthenticated();\n      const isTokenExpired = authService.isTokenExpired();\n      console.log('🔐 Auth status:', {\n        isAuthenticated,\n        isTokenExpired\n      });\n      if (!isAuthenticated || isTokenExpired) {\n        console.log('🔐 Not authenticated, redirecting to login');\n        authService.logout(); // Clear any invalid tokens\n        navigate('/login');\n        return;\n      }\n\n      // Only load data if authenticated\n      console.log('✅ Authenticated, loading data...');\n      await loadData();\n    };\n    initializeDashboard();\n  }, [navigate]); // FIXED: Only navigate dependency\n\n  // Filter students based on search term\n  useEffect(() => {\n    if (!studentSearchTerm.trim()) {\n      setFilteredStudents(students);\n    } else {\n      const lowerTerm = studentSearchTerm.toLowerCase();\n      setFilteredStudents(students.filter(s => s.Name && s.Name.toLowerCase().includes(lowerTerm) || s.Email && s.Email.toLowerCase().includes(lowerTerm) || s.Phone && s.Phone.toLowerCase().includes(lowerTerm)));\n    }\n  }, [studentSearchTerm, students]);\n\n  // Enhanced filter for slots based on search term\n  useEffect(() => {\n    if (!slotSearchTerm.trim()) {\n      setFilteredSlots(slots);\n    } else {\n      const lowerTerm = slotSearchTerm.toLowerCase();\n      setFilteredSlots(slots.filter(slot => {\n        const dateString = new Date(slot.SlotDateTime).toLocaleString().toLowerCase();\n        const status = slot.IsBooked ? 'booked' : 'available';\n        const interviewer = (slot.Interviewer || '').toLowerCase();\n        const studentName = (slot.StudentName || '').toLowerCase();\n        return dateString.includes(lowerTerm) || interviewer.includes(lowerTerm) || studentName.includes(lowerTerm) || status.includes(lowerTerm);\n      }));\n    }\n  }, [slotSearchTerm, slots]);\n\n  // Handler functions\n  const handleStudentAdded = useCallback(result => {\n    loadData();\n    toast.success(`Student \"${result.student.name}\" added successfully`);\n  }, [loadData]);\n  const handleExcelUploaded = useCallback(result => {\n    loadData();\n    if (result.successful > 0) {\n      toast.success(`Excel processed: ${result.successful} students imported successfully`);\n      if (result.failed > 0 || result.duplicates > 0) {\n        toast.warning(`Note: ${result.failed} failed, ${result.duplicates || 0} duplicates skipped`);\n      }\n    } else {\n      toast.error('No students were imported from Excel file');\n    }\n  }, [loadData]);\n  const handleSlotCreated = useCallback(() => {\n    loadData();\n    toast.success('Interview slot created successfully');\n  }, [loadData]);\n\n  // Send invitations with auth error handling\n  const handleSendInvitations = async () => {\n    if (selectedStudents.length === 0) {\n      toast.warning('Please select students to send invitations');\n      return;\n    }\n\n    // Show confirmation for large batches\n    if (selectedStudents.length > 10) {\n      const confirmed = window.confirm(`You are about to send ${selectedStudents.length} invitation emails.\\n\\n` + `This process will take approximately ${Math.ceil(selectedStudents.length * 2 / 60)} minutes ` + `as emails are sent sequentially to ensure delivery.\\n\\n` + `Continue?`);\n      if (!confirmed) return;\n    }\n    try {\n      // Show progress toast\n      toast.info(/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Sending Invitations...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Processing \", selectedStudents.length, \" students\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"This may take a few minutes - please wait\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), {\n        autoClose: false,\n        toastId: 'bulk-sending',\n        closeButton: false\n      });\n      console.log(`🚀 Starting bulk invitation for ${selectedStudents.length} students`);\n      const result = await studentService.sendBulkInvitations(selectedStudents);\n      toast.dismiss('bulk-sending');\n      if (result.success) {\n        toast.success(/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"All Invitations Sent Successfully! \\uD83C\\uDF89\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"\\u2705 \", result.data.successCount, \" emails sent\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"\\uD83D\\uDCE7 Provider: \", result.data.provider]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), {\n          autoClose: 8000\n        });\n      } else {\n        toast.warning(/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Partial Success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"\\u2705 Sent: \", result.data.successCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"\\u274C Failed: \", result.data.errorCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), {\n          autoClose: 10000\n        });\n        if (result.data.errors && result.data.errors.length > 0) {\n          result.data.errors.slice(0, 3).forEach(error => {\n            toast.error(`Failed: ${error.studentName} - ${error.error}`);\n          });\n          if (result.data.errors.length > 3) {\n            toast.info(`And ${result.data.errors.length - 3} more errors. Check console for details.`);\n          }\n        }\n      }\n      if (result.data.skippedExisting > 0) {\n        toast.info(`Info: ${result.data.skippedExisting} students already had invitations`);\n      }\n      setSelectedStudents([]);\n      loadData();\n    } catch (error) {\n      var _error$response2;\n      toast.dismiss('bulk-sending');\n      console.error('❌ Bulk invitation error:', error);\n\n      // Handle auth errors\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        toast.error('Session expired. Please login again.');\n        authService.logout();\n        navigate('/login');\n        return;\n      }\n      const errorMessage = error.message || 'Unknown error occurred';\n      toast.error(/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Bulk Send Failed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Please try again or contact support\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this));\n    }\n  };\n  const handleSelectAll = checked => {\n    if (checked) {\n      setSelectedStudents(filteredStudents.map(s => s.Id));\n    } else {\n      setSelectedStudents([]);\n    }\n  };\n  const handleStudentSelect = (id, checked) => {\n    if (checked) {\n      setSelectedStudents(prev => [...prev, id]);\n    } else {\n      setSelectedStudents(prev => prev.filter(sid => sid !== id));\n    }\n  };\n\n  // Resume download handler\n  const handleResumeDownload = async student => {\n    if (!student.ResumeLink) {\n      toast.warning(`No resume uploaded for ${student.Name}`);\n      return;\n    }\n    setDownloadingResumes(prev => new Set(prev).add(student.Id));\n    try {\n      console.log('📥 Downloading resume for:', student.Name);\n      const result = await studentService.downloadResumeWithFeedback(student.Id, student.Name);\n      const cleanName = student.Name.replace(/[^a-zA-Z0-9\\s]/g, '').replace(/\\s+/g, '_');\n      const expectedFilename = result.filename || `${cleanName}.pdf`;\n      toast.success(/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Resume Downloaded!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Student: \", student.Name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"File: \", expectedFilename]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this));\n    } catch (error) {\n      console.error('❌ Resume download failed:', error);\n      const errorMessage = error.message || 'Failed to download resume';\n      toast.error(/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Download Failed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Student: \", student.Name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Error: \", errorMessage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this));\n    } finally {\n      setDownloadingResumes(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(student.Id);\n        return newSet;\n      });\n    }\n  };\n\n  // Bulk resume download\n  const handleBulkResumeDownload = async () => {\n    const studentsWithResumes = filteredStudents.filter(s => selectedStudents.includes(s.Id) && s.ResumeLink);\n    if (studentsWithResumes.length === 0) {\n      toast.warning('No students with resumes selected');\n      return;\n    }\n    if (studentsWithResumes.length > 15) {\n      const confirmed = window.confirm(`You are about to download ${studentsWithResumes.length} individual resume files. This may take a while and could overwhelm your browser. Consider using ZIP download instead. Continue?`);\n      if (!confirmed) return;\n    }\n    setBulkDownloading(true);\n    setDownloadProgress({\n      current: 0,\n      total: studentsWithResumes.length\n    });\n    try {\n      toast.info(/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Bulk Download Started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Downloading \", studentsWithResumes.length, \" resumes individually...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Files will be named as: StudentName.pdf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Please wait and don't close this tab\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), {\n        autoClose: 6000\n      });\n      const results = [];\n      for (let i = 0; i < studentsWithResumes.length; i++) {\n        const student = studentsWithResumes[i];\n        setDownloadProgress({\n          current: i + 1,\n          total: studentsWithResumes.length\n        });\n        try {\n          const result = await studentService.downloadResumeWithFeedback(student.Id, student.Name);\n          results.push({\n            studentId: student.Id,\n            studentName: student.Name,\n            success: true,\n            filename: result.filename\n          });\n          const delay = Math.min(500 + i * 100, 3000);\n          await new Promise(resolve => setTimeout(resolve, delay));\n        } catch (error) {\n          results.push({\n            studentId: student.Id,\n            studentName: student.Name,\n            success: false,\n            error: error.message\n          });\n          await new Promise(resolve => setTimeout(resolve, 300));\n        }\n      }\n      const successful = results.filter(r => r.success).length;\n      const failed = results.filter(r => !r.success).length;\n      if (successful > 0) {\n        toast.success(/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Bulk Download Complete!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [successful, \" of \", studentsWithResumes.length, \" resumes downloaded\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Files are named as: StudentName.pdf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this), failed > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-warning\",\n              children: [failed, \" downloads failed\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), {\n          autoClose: 8000\n        });\n      } else {\n        toast.error('No resumes were downloaded successfully');\n      }\n      if (failed > 0) {\n        const failedStudents = results.filter(r => !r.success).map(r => r.studentName).slice(0, 5).join(', ');\n        toast.warning(/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Some Downloads Failed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Failed students: \", failedStudents]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this), failed > 5 && /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\" and \", failed - 5, \" more...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), {\n          autoClose: 10000\n        });\n      }\n    } catch (error) {\n      toast.error('Bulk download failed: ' + error.message);\n    } finally {\n      setBulkDownloading(false);\n      setDownloadProgress({\n        current: 0,\n        total: 0\n      });\n    }\n  };\n\n  // ZIP bulk resume download\n  const handleZipResumeDownload = async () => {\n    const studentsWithResumes = filteredStudents.filter(s => selectedStudents.includes(s.Id) && s.ResumeLink);\n    if (studentsWithResumes.length === 0) {\n      toast.warning('No students with resumes selected');\n      return;\n    }\n    setZipDownloading(true);\n    try {\n      toast.info(/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Creating ZIP Archive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Preparing \", studentsWithResumes.length, \" resumes...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Files inside will be named as: StudentName.pdf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"This may take a moment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this), {\n        autoClose: 6000\n      });\n      const result = await studentService.downloadBulkResumesAsZip(studentsWithResumes);\n      toast.success(/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"ZIP Download Complete!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"File: \", result.filename]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Size: \", studentService.formatFileSize(result.size)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [result.studentsCount, \" resumes included (named as StudentName.pdf)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 9\n      }, this), {\n        autoClose: 8000\n      });\n    } catch (error) {\n      toast.error('ZIP download failed: ' + error.message);\n    } finally {\n      setZipDownloading(false);\n    }\n  };\n\n  // Delete handler\n  const handleDeleteStudent = student => {\n    setStudentToDelete(student);\n    setShowDeleteModal(true);\n  };\n  const confirmDeleteStudent = async () => {\n    if (!studentToDelete) return;\n    try {\n      await studentService.deleteStudent(studentToDelete.Id);\n      toast.success(`Student \"${studentToDelete.Name}\" deleted successfully`);\n      loadData();\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const backendError = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || error.message;\n      toast.error(`Failed to delete student: ${backendError}`);\n    } finally {\n      setShowDeleteModal(false);\n      setStudentToDelete(null);\n    }\n  };\n\n  // Get resume status badge\n  const getResumeStatusBadge = student => {\n    if (student.ResumeLink) {\n      return /*#__PURE__*/_jsxDEV(Badge, {\n        bg: \"success\",\n        className: \"d-flex align-items-center gap-1\",\n        children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n          size: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }, this), \"Uploaded\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Badge, {\n        bg: \"secondary\",\n        className: \"d-flex align-items-center gap-1\",\n        children: [/*#__PURE__*/_jsxDEV(XCircle, {\n          size: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this), \"Not Uploaded\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  // Get student interview status\n  const getInterviewStatus = studentId => {\n    const interview = interviews.find(i => i.StudentId === studentId);\n    if (!interview) {\n      return /*#__PURE__*/_jsxDEV(Badge, {\n        bg: \"light\",\n        text: \"dark\",\n        children: \"Not Invited\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 14\n      }, this);\n    }\n    const statusColors = {\n      'Invited': 'primary',\n      'Scheduled': 'success',\n      'Completed': 'info',\n      'Cancelled': 'danger'\n    };\n    return /*#__PURE__*/_jsxDEV(Badge, {\n      bg: statusColors[interview.Status] || 'secondary',\n      children: interview.Status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Get download options for selected students\n  const getDownloadOptions = () => {\n    const options = studentService.getDownloadOptions(selectedStudents, students);\n    return options;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"py-4\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-primary fw-bold\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-speedometer2 me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 17\n              }, this), \"Admin Dashboard\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted mb-0\",\n              children: \"Manage students, slots, and interviews\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex align-items-center gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-muted d-flex align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(PersonCircle, {\n                className: \"me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 17\n              }, this), \"Welcome, \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                className: \"ms-1\",\n                children: (adminInfo === null || adminInfo === void 0 ? void 0 : adminInfo.Username) || 'Admin'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 26\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-danger\",\n              size: \"sm\",\n              onClick: handleLogout,\n              children: [/*#__PURE__*/_jsxDEV(BoxArrowRight, {\n                className: \"me-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 17\n              }, this), \"Logout\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 7\n    }, this), loadingData && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"info\",\n      className: \"d-flex align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        size: \"sm\",\n        className: \"me-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 11\n      }, this), \"Loading dashboard data...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showDeleteModal,\n      onHide: () => setShowDeleteModal(false),\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          className: \"d-flex align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(ExclamationTriangle, {\n            className: \"text-danger me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 13\n          }, this), \"Confirm Delete\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Are you sure you want to delete student \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"\\\"\", studentToDelete === null || studentToDelete === void 0 ? void 0 : studentToDelete.Name, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 54\n          }, this), \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"warning\",\n          className: \"mb-0\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"This action cannot be undone. The student's data and any uploaded resume will be permanently deleted.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowDeleteModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: confirmDeleteStudent,\n          children: [/*#__PURE__*/_jsxDEV(Trash, {\n            className: \"me-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 13\n          }, this), \"Delete Student\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 610,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"gRoRmjLdvevz6P/QbtBE1wspOp4=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","Container","Row","Col","Tab","Tabs","Button","Card","Form","Alert","Badge","Table","InputGroup","FormControl","Spinner","Dropdown","Modal","ProgressBar","Trash","PersonCheck","Search","Download","Eye","FileEarmarkText","ExclamationTriangle","CheckCircle","XCircle","FileEarmarkZip","CloudDownload","CameraVideo","BoxArrowRight","PersonCircle","toast","StudentForm","ExcelUpload","SlotCreator","InterviewList","studentService","slotService","interviewService","authService","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","navigate","students","setStudents","filteredStudents","setFilteredStudents","slots","setSlots","filteredSlots","setFilteredSlots","interviews","setInterviews","selectedStudents","setSelectedStudents","studentSearchTerm","setStudentSearchTerm","slotSearchTerm","setSlotSearchTerm","downloadingResumes","setDownloadingResumes","Set","bulkDownloading","setBulkDownloading","zipDownloading","setZipDownloading","loadingData","setLoadingData","showDeleteModal","setShowDeleteModal","studentToDelete","setStudentToDelete","downloadProgress","setDownloadProgress","current","total","adminInfo","getAdminInfo","handleLogout","window","confirm","logout","success","error","console","loadData","log","studentsData","slotsData","interviewsData","Promise","all","getStudents","getSlots","getInterviews","_error$response","response","status","initializeDashboard","isAuthenticated","isTokenExpired","trim","lowerTerm","toLowerCase","filter","s","Name","includes","Email","Phone","slot","dateString","Date","SlotDateTime","toLocaleString","IsBooked","interviewer","Interviewer","studentName","StudentName","handleStudentAdded","result","student","name","handleExcelUploaded","successful","failed","duplicates","warning","handleSlotCreated","handleSendInvitations","length","confirmed","Math","ceil","info","children","fileName","_jsxFileName","lineNumber","columnNumber","autoClose","toastId","closeButton","sendBulkInvitations","dismiss","data","successCount","provider","errorCount","errors","slice","forEach","skippedExisting","_error$response2","errorMessage","message","handleSelectAll","checked","map","Id","handleStudentSelect","id","prev","sid","handleResumeDownload","ResumeLink","add","downloadResumeWithFeedback","cleanName","replace","expectedFilename","filename","newSet","delete","handleBulkResumeDownload","studentsWithResumes","results","i","push","studentId","delay","min","resolve","setTimeout","r","className","failedStudents","join","handleZipResumeDownload","downloadBulkResumesAsZip","formatFileSize","size","studentsCount","handleDeleteStudent","confirmDeleteStudent","deleteStudent","_error$response3","_error$response3$data","backendError","getResumeStatusBadge","bg","getInterviewStatus","interview","find","StudentId","text","statusColors","Status","getDownloadOptions","options","fluid","Username","variant","onClick","animation","show","onHide","centered","Header","Title","Body","Footer","_c","$RefreshReg$"],"sources":["E:/Downloads/interview-scheduler/interview-scheduler-frontend/src/components/admin/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Tab,\r\n  Tabs,\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Alert,\r\n  Badge,\r\n  Table,\r\n  InputGroup,\r\n  FormControl,\r\n  Spinner,\r\n  Dropdown,\r\n  Modal,\r\n  ProgressBar,\r\n} from 'react-bootstrap';\r\nimport { \r\n  Trash, \r\n  PersonCheck, \r\n  Search, \r\n  Download, \r\n  Eye, \r\n  FileEarmarkText, \r\n  ExclamationTriangle,\r\n  CheckCircle,\r\n  XCircle,\r\n  FileEarmarkZip,\r\n  CloudDownload,\r\n  CameraVideo,\r\n  BoxArrowRight, // Added for logout button\r\n  PersonCircle // Added for user icon\r\n} from 'react-bootstrap-icons';\r\nimport { toast } from 'react-toastify';\r\nimport StudentForm from './StudentForm';\r\nimport ExcelUpload from './ExcelUpload';\r\nimport SlotCreator from './SlotCreator';\r\nimport InterviewList from './InterviewList';\r\nimport studentService from '../../services/studentService';\r\nimport slotService from '../../services/slotService';\r\nimport interviewService from '../../services/interviewService';\r\nimport authService from '../../services/authService';\r\n\r\nconst AdminDashboard = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [students, setStudents] = useState([]);\r\n  const [filteredStudents, setFilteredStudents] = useState([]);\r\n  const [slots, setSlots] = useState([]);\r\n  const [filteredSlots, setFilteredSlots] = useState([]);\r\n  const [interviews, setInterviews] = useState([]);\r\n  const [selectedStudents, setSelectedStudents] = useState([]);\r\n  const [studentSearchTerm, setStudentSearchTerm] = useState('');\r\n  const [slotSearchTerm, setSlotSearchTerm] = useState('');\r\n  const [downloadingResumes, setDownloadingResumes] = useState(new Set());\r\n  const [bulkDownloading, setBulkDownloading] = useState(false);\r\n  const [zipDownloading, setZipDownloading] = useState(false);\r\n  const [loadingData, setLoadingData] = useState(true);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [studentToDelete, setStudentToDelete] = useState(null);\r\n  const [downloadProgress, setDownloadProgress] = useState({ current: 0, total: 0 });\r\n\r\n  // Get admin info\r\n  const adminInfo = authService.getAdminInfo();\r\n\r\n  // Handle logout\r\n  const handleLogout = async () => {\r\n    if (window.confirm('Are you sure you want to logout?')) {\r\n      try {\r\n        await authService.logout();\r\n        toast.success('Logged out successfully');\r\n        navigate('/login');\r\n      } catch (error) {\r\n        console.error('Logout error:', error);\r\n        authService.logout();\r\n        navigate('/login');\r\n      }\r\n    }\r\n  };\r\n\r\n  // FIXED: Load data function without navigate dependency\r\n  const loadData = useCallback(async () => {\r\n    try {\r\n      setLoadingData(true);\r\n      \r\n      console.log('📊 Loading dashboard data...');\r\n      \r\n      const [studentsData, slotsData, interviewsData] = await Promise.all([\r\n        studentService.getStudents(),\r\n        slotService.getSlots(),\r\n        interviewService.getInterviews(),\r\n      ]);\r\n      \r\n      setStudents(studentsData);\r\n      setSlots(slotsData);\r\n      setInterviews(interviewsData);\r\n      setFilteredStudents(studentsData);\r\n      setFilteredSlots(slotsData);\r\n      console.log('✅ Data loaded successfully');\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Load data error:', error);\r\n      \r\n      // Check if it's an auth error\r\n      if (error.response?.status === 401) {\r\n        console.log('🔐 Authentication error, redirecting to login');\r\n        toast.error('Session expired. Please login again.');\r\n        authService.logout();\r\n        navigate('/login');\r\n      } else {\r\n        toast.error('Failed to load data. Please refresh the page.');\r\n      }\r\n    } finally {\r\n      setLoadingData(false);\r\n    }\r\n  }, []); // FIXED: Empty dependency array\r\n\r\n  // FIXED: Check authentication on mount without causing infinite loop\r\n  useEffect(() => {\r\n    const initializeDashboard = async () => {\r\n      console.log('🔍 Initializing dashboard...');\r\n      \r\n      const isAuthenticated = authService.isAuthenticated();\r\n      const isTokenExpired = authService.isTokenExpired();\r\n      \r\n      console.log('🔐 Auth status:', { isAuthenticated, isTokenExpired });\r\n      \r\n      if (!isAuthenticated || isTokenExpired) {\r\n        console.log('🔐 Not authenticated, redirecting to login');\r\n        authService.logout(); // Clear any invalid tokens\r\n        navigate('/login');\r\n        return;\r\n      }\r\n      \r\n      // Only load data if authenticated\r\n      console.log('✅ Authenticated, loading data...');\r\n      await loadData();\r\n    };\r\n    \r\n    initializeDashboard();\r\n  }, [navigate]); // FIXED: Only navigate dependency\r\n\r\n  // Filter students based on search term\r\n  useEffect(() => {\r\n    if (!studentSearchTerm.trim()) {\r\n      setFilteredStudents(students);\r\n    } else {\r\n      const lowerTerm = studentSearchTerm.toLowerCase();\r\n      setFilteredStudents(\r\n        students.filter(\r\n          (s) =>\r\n            (s.Name && s.Name.toLowerCase().includes(lowerTerm)) ||\r\n            (s.Email && s.Email.toLowerCase().includes(lowerTerm)) ||\r\n            (s.Phone && s.Phone.toLowerCase().includes(lowerTerm))\r\n        )\r\n      );\r\n    }\r\n  }, [studentSearchTerm, students]);\r\n\r\n  // Enhanced filter for slots based on search term\r\n  useEffect(() => {\r\n    if (!slotSearchTerm.trim()) {\r\n      setFilteredSlots(slots);\r\n    } else {\r\n      const lowerTerm = slotSearchTerm.toLowerCase();\r\n      setFilteredSlots(\r\n        slots.filter((slot) => {\r\n          const dateString = new Date(slot.SlotDateTime).toLocaleString().toLowerCase();\r\n          const status = slot.IsBooked ? 'booked' : 'available';\r\n          const interviewer = (slot.Interviewer || '').toLowerCase();\r\n          const studentName = (slot.StudentName || '').toLowerCase();\r\n          \r\n          return (\r\n            dateString.includes(lowerTerm) ||\r\n            interviewer.includes(lowerTerm) ||\r\n            studentName.includes(lowerTerm) ||\r\n            status.includes(lowerTerm)\r\n          );\r\n        })\r\n      );\r\n    }\r\n  }, [slotSearchTerm, slots]);\r\n\r\n  // Handler functions\r\n  const handleStudentAdded = useCallback((result) => {\r\n    loadData();\r\n    toast.success(`Student \"${result.student.name}\" added successfully`);\r\n  }, [loadData]);\r\n\r\n  const handleExcelUploaded = useCallback((result) => {\r\n    loadData();\r\n    if (result.successful > 0) {\r\n      toast.success(`Excel processed: ${result.successful} students imported successfully`);\r\n      if (result.failed > 0 || result.duplicates > 0) {\r\n        toast.warning(`Note: ${result.failed} failed, ${result.duplicates || 0} duplicates skipped`);\r\n      }\r\n    } else {\r\n      toast.error('No students were imported from Excel file');\r\n    }\r\n  }, [loadData]);\r\n\r\n  const handleSlotCreated = useCallback(() => {\r\n    loadData();\r\n    toast.success('Interview slot created successfully');\r\n  }, [loadData]);\r\n\r\n  // Send invitations with auth error handling\r\n  const handleSendInvitations = async () => {\r\n    if (selectedStudents.length === 0) {\r\n      toast.warning('Please select students to send invitations');\r\n      return;\r\n    }\r\n\r\n    // Show confirmation for large batches\r\n    if (selectedStudents.length > 10) {\r\n      const confirmed = window.confirm(\r\n        `You are about to send ${selectedStudents.length} invitation emails.\\n\\n` +\r\n        `This process will take approximately ${Math.ceil(selectedStudents.length * 2 / 60)} minutes ` +\r\n        `as emails are sent sequentially to ensure delivery.\\n\\n` +\r\n        `Continue?`\r\n      );\r\n      if (!confirmed) return;\r\n    }\r\n\r\n    try {\r\n      // Show progress toast\r\n      toast.info(\r\n        <div>\r\n          <strong>Sending Invitations...</strong>\r\n          <br />\r\n          <small>Processing {selectedStudents.length} students</small>\r\n          <br />\r\n          <small>This may take a few minutes - please wait</small>\r\n        </div>,\r\n        { \r\n          autoClose: false, \r\n          toastId: 'bulk-sending',\r\n          closeButton: false\r\n        }\r\n      );\r\n\r\n      console.log(`🚀 Starting bulk invitation for ${selectedStudents.length} students`);\r\n      \r\n      const result = await studentService.sendBulkInvitations(selectedStudents);\r\n      \r\n      toast.dismiss('bulk-sending');\r\n\r\n      if (result.success) {\r\n        toast.success(\r\n          <div>\r\n            <strong>All Invitations Sent Successfully! 🎉</strong>\r\n            <br />\r\n            <small>✅ {result.data.successCount} emails sent</small>\r\n            <br />\r\n            <small>📧 Provider: {result.data.provider}</small>\r\n          </div>,\r\n          { autoClose: 8000 }\r\n        );\r\n      } else {\r\n        toast.warning(\r\n          <div>\r\n            <strong>Partial Success</strong>\r\n            <br />\r\n            <small>✅ Sent: {result.data.successCount}</small>\r\n            <br />\r\n            <small>❌ Failed: {result.data.errorCount}</small>\r\n          </div>,\r\n          { autoClose: 10000 }\r\n        );\r\n        \r\n        if (result.data.errors && result.data.errors.length > 0) {\r\n          result.data.errors.slice(0, 3).forEach(error => {\r\n            toast.error(`Failed: ${error.studentName} - ${error.error}`);\r\n          });\r\n          \r\n          if (result.data.errors.length > 3) {\r\n            toast.info(`And ${result.data.errors.length - 3} more errors. Check console for details.`);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (result.data.skippedExisting > 0) {\r\n        toast.info(`Info: ${result.data.skippedExisting} students already had invitations`);\r\n      }\r\n\r\n      setSelectedStudents([]);\r\n      loadData();\r\n    } catch (error) {\r\n      toast.dismiss('bulk-sending');\r\n      console.error('❌ Bulk invitation error:', error);\r\n      \r\n      // Handle auth errors\r\n      if (error.response?.status === 401) {\r\n        toast.error('Session expired. Please login again.');\r\n        authService.logout();\r\n        navigate('/login');\r\n        return;\r\n      }\r\n      \r\n      const errorMessage = error.message || 'Unknown error occurred';\r\n      toast.error(\r\n        <div>\r\n          <strong>Bulk Send Failed</strong>\r\n          <br />\r\n          <small>{errorMessage}</small>\r\n          <br />\r\n          <small>Please try again or contact support</small>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSelectAll = (checked) => {\r\n    if (checked) {\r\n      setSelectedStudents(filteredStudents.map((s) => s.Id));\r\n    } else {\r\n      setSelectedStudents([]);\r\n    }\r\n  };\r\n\r\n  const handleStudentSelect = (id, checked) => {\r\n    if (checked) {\r\n      setSelectedStudents((prev) => [...prev, id]);\r\n    } else {\r\n      setSelectedStudents((prev) => prev.filter((sid) => sid !== id));\r\n    }\r\n  };\r\n\r\n  // Resume download handler\r\n  const handleResumeDownload = async (student) => {\r\n    if (!student.ResumeLink) {\r\n      toast.warning(`No resume uploaded for ${student.Name}`);\r\n      return;\r\n    }\r\n\r\n    setDownloadingResumes(prev => new Set(prev).add(student.Id));\r\n    \r\n    try {\r\n      console.log('📥 Downloading resume for:', student.Name);\r\n      const result = await studentService.downloadResumeWithFeedback(student.Id, student.Name);\r\n      \r\n      const cleanName = student.Name.replace(/[^a-zA-Z0-9\\s]/g, '').replace(/\\s+/g, '_');\r\n      const expectedFilename = result.filename || `${cleanName}.pdf`;\r\n      \r\n      toast.success(\r\n        <div>\r\n          <strong>Resume Downloaded!</strong>\r\n          <br />\r\n          <small>Student: {student.Name}</small>\r\n          <br />\r\n          <small>File: {expectedFilename}</small>\r\n        </div>\r\n      );\r\n    } catch (error) {\r\n      console.error('❌ Resume download failed:', error);\r\n      const errorMessage = error.message || 'Failed to download resume';\r\n      toast.error(\r\n        <div>\r\n          <strong>Download Failed</strong>\r\n          <br />\r\n          <small>Student: {student.Name}</small>\r\n          <br />\r\n          <small>Error: {errorMessage}</small>\r\n        </div>\r\n      );\r\n    } finally {\r\n      setDownloadingResumes(prev => {\r\n        const newSet = new Set(prev);\r\n        newSet.delete(student.Id);\r\n        return newSet;\r\n      });\r\n    }\r\n  };\r\n\r\n  // Bulk resume download\r\n  const handleBulkResumeDownload = async () => {\r\n    const studentsWithResumes = filteredStudents.filter(s => \r\n      selectedStudents.includes(s.Id) && s.ResumeLink\r\n    );\r\n\r\n    if (studentsWithResumes.length === 0) {\r\n      toast.warning('No students with resumes selected');\r\n      return;\r\n    }\r\n\r\n    if (studentsWithResumes.length > 15) {\r\n      const confirmed = window.confirm(\r\n        `You are about to download ${studentsWithResumes.length} individual resume files. This may take a while and could overwhelm your browser. Consider using ZIP download instead. Continue?`\r\n      );\r\n      if (!confirmed) return;\r\n    }\r\n\r\n    setBulkDownloading(true);\r\n    setDownloadProgress({ current: 0, total: studentsWithResumes.length });\r\n\r\n    try {\r\n      toast.info(\r\n        <div>\r\n          <strong>Bulk Download Started</strong>\r\n          <br />\r\n          <small>Downloading {studentsWithResumes.length} resumes individually...</small>\r\n          <br />\r\n          <small>Files will be named as: StudentName.pdf</small>\r\n          <br />\r\n          <small>Please wait and don't close this tab</small>\r\n        </div>, \r\n        { autoClose: 6000 }\r\n      );\r\n\r\n      const results = [];\r\n      for (let i = 0; i < studentsWithResumes.length; i++) {\r\n        const student = studentsWithResumes[i];\r\n        setDownloadProgress({ current: i + 1, total: studentsWithResumes.length });\r\n        \r\n        try {\r\n          const result = await studentService.downloadResumeWithFeedback(student.Id, student.Name);\r\n          results.push({\r\n            studentId: student.Id,\r\n            studentName: student.Name,\r\n            success: true,\r\n            filename: result.filename\r\n          });\r\n          \r\n          const delay = Math.min(500 + (i * 100), 3000);\r\n          await new Promise(resolve => setTimeout(resolve, delay));\r\n        } catch (error) {\r\n          results.push({\r\n            studentId: student.Id,\r\n            studentName: student.Name,\r\n            success: false,\r\n            error: error.message\r\n          });\r\n          \r\n          await new Promise(resolve => setTimeout(resolve, 300));\r\n        }\r\n      }\r\n      \r\n      const successful = results.filter(r => r.success).length;\r\n      const failed = results.filter(r => !r.success).length;\r\n      \r\n      if (successful > 0) {\r\n        toast.success(\r\n          <div>\r\n            <strong>Bulk Download Complete!</strong>\r\n            <br />\r\n            <small>{successful} of {studentsWithResumes.length} resumes downloaded</small>\r\n            <br />\r\n            <small>Files are named as: StudentName.pdf</small>\r\n            {failed > 0 && (\r\n              <>\r\n                <br />\r\n                <small className=\"text-warning\">{failed} downloads failed</small>\r\n              </>\r\n            )}\r\n          </div>,\r\n          { autoClose: 8000 }\r\n        );\r\n      } else {\r\n        toast.error('No resumes were downloaded successfully');\r\n      }\r\n\r\n      if (failed > 0) {\r\n        const failedStudents = results\r\n          .filter(r => !r.success)\r\n          .map(r => r.studentName)\r\n          .slice(0, 5)\r\n          .join(', ');\r\n        \r\n        toast.warning(\r\n          <div>\r\n            <strong>Some Downloads Failed</strong>\r\n            <br />\r\n            <small>Failed students: {failedStudents}</small>\r\n            {failed > 5 && <small> and {failed - 5} more...</small>}\r\n          </div>,\r\n          { autoClose: 10000 }\r\n        );\r\n      }\r\n      \r\n    } catch (error) {\r\n      toast.error('Bulk download failed: ' + error.message);\r\n    } finally {\r\n      setBulkDownloading(false);\r\n      setDownloadProgress({ current: 0, total: 0 });\r\n    }\r\n  };\r\n\r\n  // ZIP bulk resume download\r\n  const handleZipResumeDownload = async () => {\r\n    const studentsWithResumes = filteredStudents.filter(s => \r\n      selectedStudents.includes(s.Id) && s.ResumeLink\r\n    );\r\n\r\n    if (studentsWithResumes.length === 0) {\r\n      toast.warning('No students with resumes selected');\r\n      return;\r\n    }\r\n\r\n    setZipDownloading(true);\r\n\r\n    try {\r\n      toast.info(\r\n        <div>\r\n          <strong>Creating ZIP Archive</strong>\r\n          <br />\r\n          <small>Preparing {studentsWithResumes.length} resumes...</small>\r\n          <br />\r\n          <small>Files inside will be named as: StudentName.pdf</small>\r\n          <br />\r\n          <small>This may take a moment</small>\r\n        </div>, \r\n        { autoClose: 6000 }\r\n      );\r\n      \r\n      const result = await studentService.downloadBulkResumesAsZip(studentsWithResumes);\r\n      \r\n      toast.success(\r\n        <div>\r\n          <strong>ZIP Download Complete!</strong>\r\n          <br />\r\n          <small>File: {result.filename}</small>\r\n          <br />\r\n          <small>Size: {studentService.formatFileSize(result.size)}</small>\r\n          <br />\r\n          <small>{result.studentsCount} resumes included (named as StudentName.pdf)</small>\r\n        </div>,\r\n        { autoClose: 8000 }\r\n      );\r\n      \r\n    } catch (error) {\r\n      toast.error('ZIP download failed: ' + error.message);\r\n    } finally {\r\n      setZipDownloading(false);\r\n    }\r\n  };\r\n\r\n  // Delete handler\r\n  const handleDeleteStudent = (student) => {\r\n    setStudentToDelete(student);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  const confirmDeleteStudent = async () => {\r\n    if (!studentToDelete) return;\r\n\r\n    try {\r\n      await studentService.deleteStudent(studentToDelete.Id);\r\n      toast.success(`Student \"${studentToDelete.Name}\" deleted successfully`);\r\n      loadData();\r\n    } catch (error) {\r\n      const backendError = error.response?.data?.error || error.message;\r\n      toast.error(`Failed to delete student: ${backendError}`);\r\n    } finally {\r\n      setShowDeleteModal(false);\r\n      setStudentToDelete(null);\r\n    }\r\n  };\r\n\r\n  // Get resume status badge\r\n  const getResumeStatusBadge = (student) => {\r\n    if (student.ResumeLink) {\r\n      return (\r\n        <Badge bg=\"success\" className=\"d-flex align-items-center gap-1\">\r\n          <CheckCircle size={12} />\r\n          Uploaded\r\n        </Badge>\r\n      );\r\n    } else {\r\n      return (\r\n        <Badge bg=\"secondary\" className=\"d-flex align-items-center gap-1\">\r\n          <XCircle size={12} />\r\n          Not Uploaded\r\n        </Badge>\r\n      );\r\n    }\r\n  };\r\n\r\n  // Get student interview status\r\n  const getInterviewStatus = (studentId) => {\r\n    const interview = interviews.find(i => i.StudentId === studentId);\r\n    if (!interview) {\r\n      return <Badge bg=\"light\" text=\"dark\">Not Invited</Badge>;\r\n    }\r\n    \r\n    const statusColors = {\r\n      'Invited': 'primary',\r\n      'Scheduled': 'success', \r\n      'Completed': 'info',\r\n      'Cancelled': 'danger'\r\n    };\r\n    \r\n    return (\r\n      <Badge bg={statusColors[interview.Status] || 'secondary'}>\r\n        {interview.Status}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  // Get download options for selected students\r\n  const getDownloadOptions = () => {\r\n    const options = studentService.getDownloadOptions(selectedStudents, students);\r\n    return options;\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"py-4\">\r\n      {/* Header with logout */}\r\n      <Row className=\"mb-4\">\r\n        <Col>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div>\r\n              <h2 className=\"text-primary fw-bold\">\r\n                <i className=\"bi bi-speedometer2 me-2\"></i>\r\n                Admin Dashboard\r\n              </h2>\r\n              <p className=\"text-muted mb-0\">Manage students, slots, and interviews</p>\r\n            </div>\r\n            <div className=\"d-flex align-items-center gap-3\">\r\n              <span className=\"text-muted d-flex align-items-center\">\r\n                <PersonCircle className=\"me-2\" />\r\n                Welcome, <strong className=\"ms-1\">{adminInfo?.Username || 'Admin'}</strong>\r\n              </span>\r\n              <Button variant=\"outline-danger\" size=\"sm\" onClick={handleLogout}>\r\n                <BoxArrowRight className=\"me-1\" />\r\n                Logout\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {loadingData && (\r\n        <Alert variant=\"info\" className=\"d-flex align-items-center\">\r\n          <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\r\n          Loading dashboard data...\r\n        </Alert>\r\n      )}\r\n\r\n      {/* ... Rest of your existing JSX stays the same ... */}\r\n      {/* I'm omitting the full JSX here to focus on the fix, but keep all your existing tabs, tables, etc. */}\r\n\r\n      {/* Delete Confirmation Modal */}\r\n      <Modal show={showDeleteModal} onHide={() => setShowDeleteModal(false)} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"d-flex align-items-center\">\r\n            <ExclamationTriangle className=\"text-danger me-2\" />\r\n            Confirm Delete\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Are you sure you want to delete student <strong>\"{studentToDelete?.Name}\"</strong>?</p>\r\n          <Alert variant=\"warning\" className=\"mb-0\">\r\n            <small>This action cannot be undone. The student's data and any uploaded resume will be permanently deleted.</small>\r\n          </Alert>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowDeleteModal(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={confirmDeleteStudent}>\r\n            <Trash className=\"me-1\" />\r\n            Delete Student\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}