{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\nclass AuthService {\n  constructor() {\n    this.token = localStorage.getItem('admin_token');\n    this.setupInterceptors();\n  }\n  setupInterceptors() {\n    // Request interceptor\n    axios.interceptors.request.use(config => {\n      const token = localStorage.getItem('admin_token');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      console.log('📡 API Request:', {\n        url: config.url,\n        method: config.method,\n        hasAuth: !!token\n      });\n      return config;\n    }, error => {\n      console.error('📡 Request interceptor error:', error);\n      return Promise.reject(error);\n    });\n\n    // Response interceptor\n    axios.interceptors.response.use(response => {\n      console.log('📡 API Response:', {\n        url: response.config.url,\n        status: response.status,\n        success: response.data.success\n      });\n      return response;\n    }, error => {\n      var _error$config, _error$response, _error$response2, _error$response2$data, _error$response3, _error$response4;\n      console.error('📡 API Error:', {\n        url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n        status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n        message: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message,\n        error: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data\n      });\n      if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 401) {\n        console.log('🔐 Unauthorized - clearing auth data');\n        this.logout();\n        // Don't redirect here, let the component handle it\n      }\n      return Promise.reject(error);\n    });\n  }\n  async login(credentials) {\n    try {\n      var _credentials$password, _response$data$data, _response$data$data2, _response$data$data2$;\n      console.log('🔐 Attempting login:', {\n        username: credentials.username,\n        passwordLength: (_credentials$password = credentials.password) === null || _credentials$password === void 0 ? void 0 : _credentials$password.length,\n        apiUrl: `${API_BASE_URL}/auth/login`\n      });\n      const response = await axios.post(`${API_BASE_URL}/auth/login`, {\n        username: credentials.username.trim(),\n        password: credentials.password\n      });\n      console.log('🔐 Login response:', {\n        status: response.status,\n        success: response.data.success,\n        hasToken: !!((_response$data$data = response.data.data) !== null && _response$data$data !== void 0 && _response$data$data.token),\n        admin: (_response$data$data2 = response.data.data) === null || _response$data$data2 === void 0 ? void 0 : (_response$data$data2$ = _response$data$data2.admin) === null || _response$data$data2$ === void 0 ? void 0 : _response$data$data2$.Username\n      });\n      if (response.data.success) {\n        const {\n          token,\n          admin\n        } = response.data.data;\n\n        // Store token and admin info\n        localStorage.setItem('admin_token', token);\n        localStorage.setItem('admin_info', JSON.stringify(admin));\n        this.token = token;\n        console.log('✅ Login successful - data stored');\n        console.log('🔍 Token stored:', token.substring(0, 20) + '...');\n        return {\n          success: true,\n          admin: admin,\n          token: token\n        };\n      }\n      console.log('❌ Login failed:', response.data.message);\n      return {\n        success: false,\n        message: response.data.message || 'Login failed'\n      };\n    } catch (error) {\n      var _error$response5, _error$response6, _error$response7, _error$response7$data;\n      console.error('❌ Login error:', {\n        message: error.message,\n        response: (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data,\n        status: (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status\n      });\n      return {\n        success: false,\n        message: ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Network error. Please try again.'\n      };\n    }\n  }\n  async logout() {\n    try {\n      console.log('🔐 Logging out...');\n      if (this.token) {\n        await axios.post(`${API_BASE_URL}/auth/logout`);\n      }\n    } catch (error) {\n      console.log('🔐 Logout API call failed (continuing anyway):', error.message);\n    } finally {\n      localStorage.removeItem('admin_token');\n      localStorage.removeItem('admin_info');\n      this.token = null;\n      console.log('✅ Logout complete - data cleared');\n    }\n  }\n  isAuthenticated() {\n    const hasToken = !!this.token && !!localStorage.getItem('admin_token');\n    console.log('🔐 Auth check:', {\n      hasToken,\n      tokenExpired: this.isTokenExpired(),\n      tokenExists: !!localStorage.getItem('admin_token')\n    });\n    return hasToken;\n  }\n  getToken() {\n    return this.token || localStorage.getItem('admin_token');\n  }\n  getAdminInfo() {\n    const adminInfo = localStorage.getItem('admin_info');\n    return adminInfo ? JSON.parse(adminInfo) : null;\n  }\n\n  // FIXED: More robust token expiry check\n  isTokenExpired() {\n    const token = this.getToken();\n    if (!token) {\n      console.log('🔐 No token found');\n      return true;\n    }\n    try {\n      // Split token and decode payload\n      const tokenParts = token.split('.');\n      if (tokenParts.length !== 3) {\n        console.log('🔐 Invalid token format');\n        return true;\n      }\n      const payload = JSON.parse(atob(tokenParts[1]));\n      const currentTime = Math.floor(Date.now() / 1000);\n      const isExpired = payload.exp < currentTime;\n      console.log('🔐 Token expiry check:', {\n        expires: new Date(payload.exp * 1000),\n        now: new Date(),\n        isExpired\n      });\n      return isExpired;\n    } catch (error) {\n      console.error('🔐 Token parsing error:', error);\n      return true;\n    }\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","AuthService","constructor","token","localStorage","getItem","setupInterceptors","interceptors","request","use","config","headers","Authorization","console","log","url","method","hasAuth","error","Promise","reject","response","status","success","data","_error$config","_error$response","_error$response2","_error$response2$data","_error$response3","_error$response4","message","logout","login","credentials","_credentials$password","_response$data$data","_response$data$data2","_response$data$data2$","username","passwordLength","password","length","apiUrl","post","trim","hasToken","admin","Username","setItem","JSON","stringify","substring","_error$response5","_error$response6","_error$response7","_error$response7$data","removeItem","isAuthenticated","tokenExpired","isTokenExpired","tokenExists","getToken","getAdminInfo","adminInfo","parse","tokenParts","split","payload","atob","currentTime","Math","floor","Date","now","isExpired","exp","expires"],"sources":["E:/Downloads/interview-scheduler/interview-scheduler-frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\r\n\r\nclass AuthService {\r\n  constructor() {\r\n    this.token = localStorage.getItem('admin_token');\r\n    this.setupInterceptors();\r\n  }\r\n\r\n  setupInterceptors() {\r\n    // Request interceptor\r\n    axios.interceptors.request.use(\r\n      (config) => {\r\n        const token = localStorage.getItem('admin_token');\r\n        if (token) {\r\n          config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        console.log('📡 API Request:', {\r\n          url: config.url,\r\n          method: config.method,\r\n          hasAuth: !!token\r\n        });\r\n        return config;\r\n      },\r\n      (error) => {\r\n        console.error('📡 Request interceptor error:', error);\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    // Response interceptor\r\n    axios.interceptors.response.use(\r\n      (response) => {\r\n        console.log('📡 API Response:', {\r\n          url: response.config.url,\r\n          status: response.status,\r\n          success: response.data.success\r\n        });\r\n        return response;\r\n      },\r\n      (error) => {\r\n        console.error('📡 API Error:', {\r\n          url: error.config?.url,\r\n          status: error.response?.status,\r\n          message: error.response?.data?.message,\r\n          error: error.response?.data\r\n        });\r\n        \r\n        if (error.response?.status === 401) {\r\n          console.log('🔐 Unauthorized - clearing auth data');\r\n          this.logout();\r\n          // Don't redirect here, let the component handle it\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  async login(credentials) {\r\n    try {\r\n      console.log('🔐 Attempting login:', {\r\n        username: credentials.username,\r\n        passwordLength: credentials.password?.length,\r\n        apiUrl: `${API_BASE_URL}/auth/login`\r\n      });\r\n\r\n      const response = await axios.post(`${API_BASE_URL}/auth/login`, {\r\n        username: credentials.username.trim(),\r\n        password: credentials.password\r\n      });\r\n      \r\n      console.log('🔐 Login response:', {\r\n        status: response.status,\r\n        success: response.data.success,\r\n        hasToken: !!response.data.data?.token,\r\n        admin: response.data.data?.admin?.Username\r\n      });\r\n\r\n      if (response.data.success) {\r\n        const { token, admin } = response.data.data;\r\n        \r\n        // Store token and admin info\r\n        localStorage.setItem('admin_token', token);\r\n        localStorage.setItem('admin_info', JSON.stringify(admin));\r\n        \r\n        this.token = token;\r\n        \r\n        console.log('✅ Login successful - data stored');\r\n        console.log('🔍 Token stored:', token.substring(0, 20) + '...');\r\n        \r\n        return {\r\n          success: true,\r\n          admin: admin,\r\n          token: token\r\n        };\r\n      }\r\n      \r\n      console.log('❌ Login failed:', response.data.message);\r\n      return {\r\n        success: false,\r\n        message: response.data.message || 'Login failed'\r\n      };\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Login error:', {\r\n        message: error.message,\r\n        response: error.response?.data,\r\n        status: error.response?.status\r\n      });\r\n      \r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Network error. Please try again.'\r\n      };\r\n    }\r\n  }\r\n\r\n  async logout() {\r\n    try {\r\n      console.log('🔐 Logging out...');\r\n      if (this.token) {\r\n        await axios.post(`${API_BASE_URL}/auth/logout`);\r\n      }\r\n    } catch (error) {\r\n      console.log('🔐 Logout API call failed (continuing anyway):', error.message);\r\n    } finally {\r\n      localStorage.removeItem('admin_token');\r\n      localStorage.removeItem('admin_info');\r\n      this.token = null;\r\n      console.log('✅ Logout complete - data cleared');\r\n    }\r\n  }\r\n\r\n  isAuthenticated() {\r\n    const hasToken = !!this.token && !!localStorage.getItem('admin_token');\r\n    console.log('🔐 Auth check:', { \r\n      hasToken, \r\n      tokenExpired: this.isTokenExpired(),\r\n      tokenExists: !!localStorage.getItem('admin_token')\r\n    });\r\n    return hasToken;\r\n  }\r\n\r\n  getToken() {\r\n    return this.token || localStorage.getItem('admin_token');\r\n  }\r\n\r\n  getAdminInfo() {\r\n    const adminInfo = localStorage.getItem('admin_info');\r\n    return adminInfo ? JSON.parse(adminInfo) : null;\r\n  }\r\n\r\n  // FIXED: More robust token expiry check\r\n  isTokenExpired() {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      console.log('🔐 No token found');\r\n      return true;\r\n    }\r\n\r\n    try {\r\n      // Split token and decode payload\r\n      const tokenParts = token.split('.');\r\n      if (tokenParts.length !== 3) {\r\n        console.log('🔐 Invalid token format');\r\n        return true;\r\n      }\r\n      \r\n      const payload = JSON.parse(atob(tokenParts[1]));\r\n      const currentTime = Math.floor(Date.now() / 1000);\r\n      const isExpired = payload.exp < currentTime;\r\n      \r\n      console.log('🔐 Token expiry check:', { \r\n        expires: new Date(payload.exp * 1000), \r\n        now: new Date(), \r\n        isExpired \r\n      });\r\n      \r\n      return isExpired;\r\n    } catch (error) {\r\n      console.error('🔐 Token parsing error:', error);\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}