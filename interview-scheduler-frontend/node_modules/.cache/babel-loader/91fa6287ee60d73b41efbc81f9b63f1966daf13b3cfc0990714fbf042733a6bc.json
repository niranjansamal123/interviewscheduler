{"ast":null,"code":"import axios from'axios';// Use production URL for deployment, localhost for development\nconst API_BASE_URL=process.env.REACT_APP_API_URL||(process.env.NODE_ENV==='production'?'https://interviewscheduler.marindrive.in/api':'http://localhost:3001/api');const api=axios.create({baseURL:API_BASE_URL,timeout:30000,headers:{'Content-Type':'application/json'},retry:3,retryDelay:1000});// Add request retry functionality\napi.interceptors.response.use(response=>response,async error=>{const config=error.config;// If we haven't already retried and it's a network/timeout error\nif(!config.__retryCount&&config.retry&&(error.code==='ECONNABORTED'||error.code==='NETWORK_ERROR'||!error.response)){config.__retryCount=config.__retryCount||0;if(config.__retryCount<config.retry){config.__retryCount+=1;// Wait before retrying\nawait new Promise(resolve=>setTimeout(resolve,config.retryDelay));return api(config);}}return Promise.reject(error);});// Request interceptor\napi.interceptors.request.use(config=>{// Add auth token if available\nconst token=localStorage.getItem('authToken');if(token){config.headers.Authorization=\"Bearer \".concat(token);}// Add timestamp for request tracking\nconfig.metadata={startTime:new Date()};return config;},error=>{return Promise.reject(error);});// Response interceptor\napi.interceptors.response.use(response=>{return response;},error=>{// Handle specific error cases\nif(error.code==='ECONNABORTED'){error.userMessage='Request timeout. Please check your connection and try again.';}else if(error.code==='NETWORK_ERROR'||!error.response){error.userMessage='Network error. Please check your internet connection.';}else if(error.response){var _error$response$data;// Server responded with error status\nconst status=error.response.status;const serverError=((_error$response$data=error.response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||error.response.statusText;switch(status){case 400:error.userMessage=serverError||'Invalid request. Please check your input.';break;case 401:error.userMessage='Authentication required. Please log in again.';localStorage.removeItem('authToken');break;case 403:error.userMessage='Access denied. You don\\'t have permission for this action.';break;case 404:error.userMessage='Resource not found. The requested item may no longer exist.';break;case 409:error.userMessage=serverError||'Conflict. This action cannot be completed.';break;case 422:error.userMessage=serverError||'Invalid data provided.';break;case 429:error.userMessage='Too many requests. Please wait a moment and try again.';break;case 500:case 502:case 503:case 504:error.userMessage='Server error. Please try again later.';break;default:error.userMessage=serverError||'An unexpected error occurred.';}}return Promise.reject(error);});// Helper function to check API health\nexport const checkAPIHealth=async()=>{try{const response=await api.get('/health');return{healthy:true,data:response.data,baseURL:API_BASE_URL};}catch(error){return{healthy:false,error:error.message,baseURL:API_BASE_URL};}};// Helper function to get API configuration info\nexport const getAPIInfo=()=>{return{baseURL:API_BASE_URL,timeout:api.defaults.timeout,environment:process.env.NODE_ENV,retryConfig:{retry:api.defaults.retry,retryDelay:api.defaults.retryDelay}};};// Helper function for manual retry of failed requests\nexport const retryRequest=async function(originalConfig){let maxRetries=arguments.length>1&&arguments[1]!==undefined?arguments[1]:3;let retries=0;while(retries<maxRetries){try{const response=await api(originalConfig);return response;}catch(error){retries++;if(retries>=maxRetries){throw error;}// Exponential backoff delay\nawait new Promise(resolve=>setTimeout(resolve,Math.pow(2,retries)*1000));}}};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","NODE_ENV","api","create","baseURL","timeout","headers","retry","retryDelay","interceptors","response","use","error","config","__retryCount","code","Promise","resolve","setTimeout","reject","request","token","localStorage","getItem","Authorization","concat","metadata","startTime","Date","userMessage","_error$response$data","status","serverError","data","statusText","removeItem","checkAPIHealth","get","healthy","message","getAPIInfo","defaults","environment","retryConfig","retryRequest","originalConfig","maxRetries","arguments","length","undefined","retries","Math","pow"],"sources":["E:/Downloads/interview-scheduler/interview-scheduler-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Use production URL for deployment, localhost for development\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \r\n    (process.env.NODE_ENV === 'production' \r\n        ? 'https://interviewscheduler.marindrive.in/api' \r\n        : 'http://localhost:3001/api');\r\n\r\nconst api = axios.create({\r\n    baseURL: API_BASE_URL,\r\n    timeout: 30000,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    retry: 3,\r\n    retryDelay: 1000,\r\n});\r\n\r\n// Add request retry functionality\r\napi.interceptors.response.use(\r\n    (response) => response,\r\n    async (error) => {\r\n        const config = error.config;\r\n        \r\n        // If we haven't already retried and it's a network/timeout error\r\n        if (\r\n            !config.__retryCount && \r\n            config.retry && \r\n            (error.code === 'ECONNABORTED' || error.code === 'NETWORK_ERROR' || !error.response)\r\n        ) {\r\n            config.__retryCount = config.__retryCount || 0;\r\n            \r\n            if (config.__retryCount < config.retry) {\r\n                config.__retryCount += 1;\r\n                \r\n                // Wait before retrying\r\n                await new Promise(resolve => setTimeout(resolve, config.retryDelay));\r\n                \r\n                return api(config);\r\n            }\r\n        }\r\n        \r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n    (config) => {\r\n        // Add auth token if available\r\n        const token = localStorage.getItem('authToken');\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n\r\n        // Add timestamp for request tracking\r\n        config.metadata = { startTime: new Date() };\r\n\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n    (response) => {\r\n        return response;\r\n    },\r\n    (error) => {\r\n        // Handle specific error cases\r\n        if (error.code === 'ECONNABORTED') {\r\n            error.userMessage = 'Request timeout. Please check your connection and try again.';\r\n        } else if (error.code === 'NETWORK_ERROR' || !error.response) {\r\n            error.userMessage = 'Network error. Please check your internet connection.';\r\n        } else if (error.response) {\r\n            // Server responded with error status\r\n            const status = error.response.status;\r\n            const serverError = error.response.data?.error || error.response.statusText;\r\n\r\n            switch (status) {\r\n                case 400:\r\n                    error.userMessage = serverError || 'Invalid request. Please check your input.';\r\n                    break;\r\n                case 401:\r\n                    error.userMessage = 'Authentication required. Please log in again.';\r\n                    localStorage.removeItem('authToken');\r\n                    break;\r\n                case 403:\r\n                    error.userMessage = 'Access denied. You don\\'t have permission for this action.';\r\n                    break;\r\n                case 404:\r\n                    error.userMessage = 'Resource not found. The requested item may no longer exist.';\r\n                    break;\r\n                case 409:\r\n                    error.userMessage = serverError || 'Conflict. This action cannot be completed.';\r\n                    break;\r\n                case 422:\r\n                    error.userMessage = serverError || 'Invalid data provided.';\r\n                    break;\r\n                case 429:\r\n                    error.userMessage = 'Too many requests. Please wait a moment and try again.';\r\n                    break;\r\n                case 500:\r\n                case 502:\r\n                case 503:\r\n                case 504:\r\n                    error.userMessage = 'Server error. Please try again later.';\r\n                    break;\r\n                default:\r\n                    error.userMessage = serverError || 'An unexpected error occurred.';\r\n            }\r\n        }\r\n\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Helper function to check API health\r\nexport const checkAPIHealth = async () => {\r\n    try {\r\n        const response = await api.get('/health');\r\n        return {\r\n            healthy: true,\r\n            data: response.data,\r\n            baseURL: API_BASE_URL\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            healthy: false,\r\n            error: error.message,\r\n            baseURL: API_BASE_URL\r\n        };\r\n    }\r\n};\r\n\r\n// Helper function to get API configuration info\r\nexport const getAPIInfo = () => {\r\n    return {\r\n        baseURL: API_BASE_URL,\r\n        timeout: api.defaults.timeout,\r\n        environment: process.env.NODE_ENV,\r\n        retryConfig: {\r\n            retry: api.defaults.retry,\r\n            retryDelay: api.defaults.retryDelay\r\n        }\r\n    };\r\n};\r\n\r\n// Helper function for manual retry of failed requests\r\nexport const retryRequest = async (originalConfig, maxRetries = 3) => {\r\n    let retries = 0;\r\n    \r\n    while (retries < maxRetries) {\r\n        try {\r\n            const response = await api(originalConfig);\r\n            return response;\r\n        } catch (error) {\r\n            retries++;\r\n            \r\n            if (retries >= maxRetries) {\r\n                throw error;\r\n            }\r\n            \r\n            // Exponential backoff delay\r\n            await new Promise(resolve => \r\n                setTimeout(resolve, Math.pow(2, retries) * 1000)\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}